{"terraform-aws-modules/security-group/aws": {"name": "security-group", "url": "https://registry.terraform.io/modules/terraform-aws-modules/security-group/aws", "provider": "aws", "downloads": 646117, "description": "Terraform module which creates EC2-VPC security groups on AWS", "source": "terraform-aws-modules/security-group/aws", "args": [{"name": "number_of_computed_ingress_with_source_security_group_id", "description": "Number of computed ingress rules to create where 'source_security_group_id' is used", "default": "0"}, {"name": "egress_prefix_list_ids", "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules", "default": "[]"}, {"name": "computed_egress_with_source_security_group_id", "description": "List of computed egress rules to create where 'source_security_group_id' is used", "default": "[]"}, {"name": "number_of_computed_egress_with_source_security_group_id", "description": "Number of computed egress rules to create where 'source_security_group_id' is used", "default": "0"}, {"name": "tags", "description": "A mapping of tags to assign to security group", "default": "{}"}, {"name": "ingress_with_source_security_group_id", "description": "List of ingress rules to create where 'source_security_group_id' is used", "default": "[]"}, {"name": "name", "description": "Name of security group", "default": ""}, {"name": "computed_egress_with_cidr_blocks", "description": "List of computed egress rules to create where 'cidr_blocks' is used", "default": "[]"}, {"name": "number_of_computed_egress_rules", "description": "Number of computed egress rules to create by name", "default": "0"}, {"name": "number_of_computed_egress_with_cidr_blocks", "description": "Number of computed egress rules to create where 'cidr_blocks' is used", "default": "0"}, {"name": "egress_cidr_blocks", "description": "List of IPv4 CIDR ranges to use on all egress rules", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "vpc_id", "description": "ID of the VPC where to create security group", "default": ""}, {"name": "ingress_cidr_blocks", "description": "List of IPv4 CIDR ranges to use on all ingress rules", "default": "[]"}, {"name": "ingress_ipv6_cidr_blocks", "description": "List of IPv6 CIDR ranges to use on all ingress rules", "default": "[]"}, {"name": "number_of_computed_ingress_with_self", "description": "Number of computed ingress rules to create where 'self' is defined", "default": "0"}, {"name": "number_of_computed_ingress_with_cidr_blocks", "description": "Number of computed ingress rules to create where 'cidr_blocks' is used", "default": "0"}, {"name": "computed_ingress_with_cidr_blocks", "description": "List of computed ingress rules to create where 'cidr_blocks' is used", "default": "[]"}, {"name": "egress_with_self", "description": "List of egress rules to create where 'self' is defined", "default": "[]"}, {"name": "egress_with_source_security_group_id", "description": "List of egress rules to create where 'source_security_group_id' is used", "default": "[]"}, {"name": "number_of_computed_egress_with_self", "description": "Number of computed egress rules to create where 'self' is defined", "default": "0"}, {"name": "ingress_with_cidr_blocks", "description": "List of ingress rules to create where 'cidr_blocks' is used", "default": "[]"}, {"name": "computed_ingress_rules", "description": "List of computed ingress rules to create by name", "default": "[]"}, {"name": "egress_rules", "description": "List of egress rules to create by name", "default": "[]"}, {"name": "egress_with_ipv6_cidr_blocks", "description": "List of egress rules to create where 'ipv6_cidr_blocks' is used", "default": "[]"}, {"name": "computed_egress_rules", "description": "List of computed egress rules to create by name", "default": "[]"}, {"name": "number_of_computed_ingress_rules", "description": "Number of computed ingress rules to create by name", "default": "0"}, {"name": "egress_with_cidr_blocks", "description": "List of egress rules to create where 'cidr_blocks' is used", "default": "[]"}, {"name": "egress_ipv6_cidr_blocks", "description": "List of IPv6 CIDR ranges to use on all egress rules", "default": "[\n  \"::/0\"\n]"}, {"name": "create", "description": "Whether to create security group and all rules", "default": "true"}, {"name": "description", "description": "Description of security group", "default": "\"Security Group managed by Terraform\""}, {"name": "ingress_with_ipv6_cidr_blocks", "description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used", "default": "[]"}, {"name": "computed_ingress_with_self", "description": "List of computed ingress rules to create where 'self' is defined", "default": "[]"}, {"name": "computed_ingress_with_ipv6_cidr_blocks", "description": "List of computed ingress rules to create where 'ipv6_cidr_blocks' is used", "default": "[]"}, {"name": "computed_egress_with_self", "description": "List of computed egress rules to create where 'self' is defined", "default": "[]"}, {"name": "computed_ingress_with_source_security_group_id", "description": "List of computed ingress rules to create where 'source_security_group_id' is used", "default": "[]"}, {"name": "number_of_computed_ingress_with_ipv6_cidr_blocks", "description": "Number of computed ingress rules to create where 'ipv6_cidr_blocks' is used", "default": "0"}, {"name": "computed_egress_with_ipv6_cidr_blocks", "description": "List of computed egress rules to create where 'ipv6_cidr_blocks' is used", "default": "[]"}, {"name": "rules", "description": "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])", "default": "{\n  \"_\": [\n    \"\",\n    \"\",\n    \"\"\n  ],\n  \"all-all\": [\n    -1,\n    -1,\n    \"-1\",\n    \"All protocols\"\n  ],\n  \"all-icmp\": [\n    -1,\n    -1,\n    \"icmp\",\n    \"All IPV4 ICMP\"\n  ],\n  \"all-ipv6-icmp\": [\n    -1,\n    -1,\n    58,\n    \"All IPV6 ICMP\"\n  ],\n  \"all-tcp\": [\n    0,\n    65535,\n    \"tcp\",\n    \"All TCP ports\"\n  ],\n  \"all-udp\": [\n    0,\n    65535,\n    \"udp\",\n    \"All UDP ports\"\n  ],\n  \"carbon-admin-tcp\": [\n    2004,\n    2004,\n    \"tcp\",\n    \"Carbon admin\"\n  ],\n  \"carbon-gui-udp\": [\n    8081,\n    8081,\n    \"tcp\",\n    \"Carbon GUI\"\n  ],\n  \"carbon-line-in-tcp\": [\n    2003,\n    2003,\n    \"tcp\",\n    \"Carbon line-in\"\n  ],\n  \"carbon-line-in-udp\": [\n    2003,\n    2003,\n    \"udp\",\n    \"Carbon line-in\"\n  ],\n  \"carbon-pickle-tcp\": [\n    2013,\n    2013,\n    \"tcp\",\n    \"Carbon pickle\"\n  ],\n  \"carbon-pickle-udp\": [\n    2013,\n    2013,\n    \"udp\",\n    \"Carbon pickle\"\n  ],\n  \"cassandra-clients-tcp\": [\n    9042,\n    9042,\n    \"tcp\",\n    \"Cassandra clients\"\n  ],\n  \"cassandra-jmx-tcp\": [\n    7199,\n    7199,\n    \"tcp\",\n    \"JMX\"\n  ],\n  \"cassandra-thrift-clients-tcp\": [\n    9160,\n    9160,\n    \"tcp\",\n    \"Cassandra Thrift clients\"\n  ],\n  \"consul-dns-tcp\": [\n    8600,\n    8600,\n    \"tcp\",\n    \"Consul DNS\"\n  ],\n  \"consul-dns-udp\": [\n    8600,\n    8600,\n    \"udp\",\n    \"Consul DNS\"\n  ],\n  \"consul-serf-lan-tcp\": [\n    8301,\n    8301,\n    \"tcp\",\n    \"Serf LAN\"\n  ],\n  \"consul-serf-lan-udp\": [\n    8301,\n    8301,\n    \"udp\",\n    \"Serf LAN\"\n  ],\n  \"consul-serf-wan-tcp\": [\n    8302,\n    8302,\n    \"tcp\",\n    \"Serf WAN\"\n  ],\n  \"consul-serf-wan-udp\": [\n    8302,\n    8302,\n    \"udp\",\n    \"Serf WAN\"\n  ],\n  \"consul-tcp\": [\n    8300,\n    8300,\n    \"tcp\",\n    \"Consul server\"\n  ],\n  \"consul-webui-tcp\": [\n    8500,\n    8500,\n    \"tcp\",\n    \"Consul web UI\"\n  ],\n  \"dns-tcp\": [\n    53,\n    53,\n    \"tcp\",\n    \"DNS\"\n  ],\n  \"dns-udp\": [\n    53,\n    53,\n    \"udp\",\n    \"DNS\"\n  ],\n  \"docker-swarm-mngmt-tcp\": [\n    2377,\n    2377,\n    \"tcp\",\n    \"Docker Swarm cluster management\"\n  ],\n  \"docker-swarm-node-tcp\": [\n    7946,\n    7946,\n    \"tcp\",\n    \"Docker Swarm node\"\n  ],\n  \"docker-swarm-node-udp\": [\n    7946,\n    7946,\n    \"udp\",\n    \"Docker Swarm node\"\n  ],\n  \"docker-swarm-overlay-udp\": [\n    4789,\n    4789,\n    \"udp\",\n    \"Docker Swarm Overlay Network Traffic\"\n  ],\n  \"elasticsearch-java-tcp\": [\n    9300,\n    9300,\n    \"tcp\",\n    \"Elasticsearch Java interface\"\n  ],\n  \"elasticsearch-rest-tcp\": [\n    9200,\n    9200,\n    \"tcp\",\n    \"Elasticsearch REST interface\"\n  ],\n  \"http-80-tcp\": [\n    80,\n    80,\n    \"tcp\",\n    \"HTTP\"\n  ],\n  \"http-8080-tcp\": [\n    8080,\n    8080,\n    \"tcp\",\n    \"HTTP\"\n  ],\n  \"https-443-tcp\": [\n    443,\n    443,\n    \"tcp\",\n    \"HTTPS\"\n  ],\n  \"ipsec-4500-udp\": [\n    4500,\n    4500,\n    \"udp\",\n    \"IPSEC NAT-T\"\n  ],\n  \"ipsec-500-udp\": [\n    500,\n    500,\n    \"udp\",\n    \"IPSEC ISAKMP\"\n  ],\n  \"kafka-broker-tcp\": [\n    9092,\n    9092,\n    \"tcp\",\n    \"Kafka broker 0.8.2+\"\n  ],\n  \"ldaps-tcp\": [\n    636,\n    636,\n    \"tcp\",\n    \"LDAPS\"\n  ],\n  \"memcached-tcp\": [\n    11211,\n    11211,\n    \"tcp\",\n    \"Memcached\"\n  ],\n  \"mssql-analytics-tcp\": [\n    2383,\n    2383,\n    \"tcp\",\n    \"MSSQL Analytics\"\n  ],\n  \"mssql-broker-tcp\": [\n    4022,\n    4022,\n    \"tcp\",\n    \"MSSQL Broker\"\n  ],\n  \"mssql-tcp\": [\n    1433,\n    1433,\n    \"tcp\",\n    \"MSSQL Server\"\n  ],\n  \"mssql-udp\": [\n    1434,\n    1434,\n    \"udp\",\n    \"MSSQL Browser\"\n  ],\n  \"mysql-tcp\": [\n    3306,\n    3306,\n    \"tcp\",\n    \"MySQL/Aurora\"\n  ],\n  \"nfs-tcp\": [\n    2049,\n    2049,\n    \"tcp\",\n    \"NFS/EFS\"\n  ],\n  \"nomad-http-tcp\": [\n    4646,\n    4646,\n    \"tcp\",\n    \"Nomad HTTP\"\n  ],\n  \"nomad-rpc-tcp\": [\n    4647,\n    4647,\n    \"tcp\",\n    \"Nomad RPC\"\n  ],\n  \"nomad-serf-tcp\": [\n    4648,\n    4648,\n    \"tcp\",\n    \"Serf\"\n  ],\n  \"nomad-serf-udp\": [\n    4648,\n    4648,\n    \"udp\",\n    \"Serf\"\n  ],\n  \"openvpn-https-tcp\": [\n    443,\n    443,\n    \"tcp\",\n    \"OpenVPN\"\n  ],\n  \"openvpn-tcp\": [\n    943,\n    943,\n    \"tcp\",\n    \"OpenVPN\"\n  ],\n  \"openvpn-udp\": [\n    1194,\n    1194,\n    \"udp\",\n    \"OpenVPN\"\n  ],\n  \"oracle-db-tcp\": [\n    1521,\n    1521,\n    \"tcp\",\n    \"Oracle\"\n  ],\n  \"postgresql-tcp\": [\n    5432,\n    5432,\n    \"tcp\",\n    \"PostgreSQL\"\n  ],\n  \"puppet-tcp\": [\n    8140,\n    8140,\n    \"tcp\",\n    \"Puppet\"\n  ],\n  \"rdp-tcp\": [\n    3389,\n    3389,\n    \"tcp\",\n    \"Remote Desktop\"\n  ],\n  \"rdp-udp\": [\n    3389,\n    3389,\n    \"udp\",\n    \"Remote Desktop\"\n  ],\n  \"redis-tcp\": [\n    6379,\n    6379,\n    \"tcp\",\n    \"Redis\"\n  ],\n  \"redshift-tcp\": [\n    5439,\n    5439,\n    \"tcp\",\n    \"Redshift\"\n  ],\n  \"splunk-clients-tcp\": [\n    8080,\n    8080,\n    \"tcp\",\n    \"Splunk clients\"\n  ],\n  \"splunk-indexer-tcp\": [\n    9997,\n    9997,\n    \"tcp\",\n    \"Splunk indexer\"\n  ],\n  \"splunk-splunkd-tcp\": [\n    8089,\n    8089,\n    \"tcp\",\n    \"Splunkd\"\n  ],\n  \"ssh-tcp\": [\n    22,\n    22,\n    \"tcp\",\n    \"SSH\"\n  ],\n  \"storm-nimbus-tcp\": [\n    6627,\n    6627,\n    \"tcp\",\n    \"Nimbus\"\n  ],\n  \"storm-supervisor-tcp\": [\n    6700,\n    6703,\n    \"tcp\",\n    \"Supervisor\"\n  ],\n  \"storm-ui-tcp\": [\n    8080,\n    8080,\n    \"tcp\",\n    \"Storm UI\"\n  ],\n  \"web-jmx-tcp\": [\n    1099,\n    1099,\n    \"tcp\",\n    \"JMX\"\n  ],\n  \"winrm-http-tcp\": [\n    5985,\n    5985,\n    \"tcp\",\n    \"WinRM HTTP\"\n  ],\n  \"winrm-https-tcp\": [\n    5986,\n    5986,\n    \"tcp\",\n    \"WinRM HTTPS\"\n  ],\n  \"zipkin-admin-query-tcp\": [\n    9901,\n    9901,\n    \"tcp\",\n    \"Zipkin Admin port query\"\n  ],\n  \"zipkin-admin-tcp\": [\n    9990,\n    9990,\n    \"tcp\",\n    \"Zipkin Admin port collector\"\n  ],\n  \"zipkin-admin-web-tcp\": [\n    9991,\n    9991,\n    \"tcp\",\n    \"Zipkin Admin port web\"\n  ],\n  \"zipkin-query-tcp\": [\n    9411,\n    9411,\n    \"tcp\",\n    \"Zipkin query port\"\n  ],\n  \"zipkin-web-tcp\": [\n    8080,\n    8080,\n    \"tcp\",\n    \"Zipkin web port\"\n  ],\n  \"zookeeper-2181-tcp\": [\n    2181,\n    2181,\n    \"tcp\",\n    \"Zookeeper\"\n  ],\n  \"zookeeper-2888-tcp\": [\n    2888,\n    2888,\n    \"tcp\",\n    \"Zookeeper\"\n  ],\n  \"zookeeper-3888-tcp\": [\n    3888,\n    3888,\n    \"tcp\",\n    \"Zookeeper\"\n  ],\n  \"zookeeper-jmx-tcp\": [\n    7199,\n    7199,\n    \"tcp\",\n    \"JMX\"\n  ]\n}"}, {"name": "auto_groups", "description": "Map of groups of security group rules to use to generate modules (see update_groups.sh)", "default": "{\n  \"carbon-relay-ng\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"carbon-line-in-tcp\",\n      \"carbon-line-in-udp\",\n      \"carbon-pickle-tcp\",\n      \"carbon-pickle-udp\",\n      \"carbon-gui-udp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"cassandra\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"cassandra-clients-tcp\",\n      \"cassandra-thrift-clients-tcp\",\n      \"cassandra-jmx-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"consul\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"consul-tcp\",\n      \"consul-webui-tcp\",\n      \"consul-dns-tcp\",\n      \"consul-dns-udp\",\n      \"consul-serf-lan-tcp\",\n      \"consul-serf-lan-udp\",\n      \"consul-serf-wan-tcp\",\n      \"consul-serf-wan-udp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"docker-swarm\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"docker-swarm-mngmt-tcp\",\n      \"docker-swarm-node-tcp\",\n      \"docker-swarm-node-udp\",\n      \"docker-swarm-overlay-udp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"elasticsearch\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"elasticsearch-rest-tcp\",\n      \"elasticsearch-java-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"http-80\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"http-80-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"https-443\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"https-443-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"ipsec-4500\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"ipsec-4500-udp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"ipsec-500\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"ipsec-500-udp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"kafka\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"kafka-broker-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"ldaps\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"ldaps-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"memcached\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"memcached-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"mssql\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"mssql-tcp\",\n      \"mssql-udp\",\n      \"mssql-analytics-tcp\",\n      \"mssql-broker-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"mysql\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"mysql-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"nfs\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"nfs-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"nomad\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"nomad-http-tcp\",\n      \"nomad-rpc-tcp\",\n      \"nomad-serf-tcp\",\n      \"nomad-serf-udp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"openvpn\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"openvpn-udp\",\n      \"openvpn-tcp\",\n      \"openvpn-https-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"oracle-db\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"oracle-db-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"postgresql\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"postgresql-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"rdp\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"rdp-tcp\",\n      \"rdp-udp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"redis\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"redis-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"redshift\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"redshift-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"splunk\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"splunk-indexer-tcp\",\n      \"splunk-clients-tcp\",\n      \"splunk-splunkd-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"ssh\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"ssh-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"storm\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"storm-nimbus-tcp\",\n      \"storm-ui-tcp\",\n      \"storm-supervisor-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"web\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"http-80-tcp\",\n      \"http-8080-tcp\",\n      \"https-443-tcp\",\n      \"web-jmx-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"winrm\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"winrm-http-tcp\",\n      \"winrm-https-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"zipkin\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"zipkin-admin-tcp\",\n      \"zipkin-admin-query-tcp\",\n      \"zipkin-admin-web-tcp\",\n      \"zipkin-query-tcp\",\n      \"zipkin-web-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  },\n  \"zookeeper\": {\n    \"egress_rules\": [\n      \"all-all\"\n    ],\n    \"ingress_rules\": [\n      \"zookeeper-2181-tcp\",\n      \"zookeeper-2888-tcp\",\n      \"zookeeper-3888-tcp\",\n      \"zookeeper-jmx-tcp\"\n    ],\n    \"ingress_with_self\": [\n      \"all-all\"\n    ]\n  }\n}"}, {"name": "ingress_rules", "description": "List of ingress rules to create by name", "default": "[]"}, {"name": "ingress_with_self", "description": "List of ingress rules to create where 'self' is defined", "default": "[]"}, {"name": "ingress_prefix_list_ids", "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules", "default": "[]"}, {"name": "number_of_computed_egress_with_ipv6_cidr_blocks", "description": "Number of computed egress rules to create where 'ipv6_cidr_blocks' is used", "default": "0"}]}, "terraform-aws-modules/elb/aws": {"name": "elb", "url": "https://registry.terraform.io/modules/terraform-aws-modules/elb/aws", "provider": "aws", "downloads": 280271, "description": "Terraform module which creates ELB resources on AWS", "source": "terraform-aws-modules/elb/aws", "args": [{"name": "name", "description": "The name of the ELB", "default": ""}, {"name": "security_groups", "description": "A list of security group IDs to assign to the ELB", "default": ""}, {"name": "subnets", "description": "A list of subnet IDs to attach to the ELB", "default": ""}, {"name": "internal", "description": "If true, ELB will be an internal ELB", "default": ""}, {"name": "cross_zone_load_balancing", "description": "Enable cross-zone load balancing", "default": "true"}, {"name": "idle_timeout", "description": "The time in seconds that the connection is allowed to be idle", "default": "60"}, {"name": "connection_draining", "description": "Boolean to enable connection draining", "default": "false"}, {"name": "connection_draining_timeout", "description": "The time in seconds to allow for connections to drain", "default": "300"}, {"name": "tags", "description": "A mapping of tags to assign to the resource", "default": "{}"}, {"name": "listener", "description": "A list of listener blocks", "default": ""}, {"name": "access_logs", "description": "An access logs block", "default": "[]"}, {"name": "health_check", "description": "A health check block", "default": ""}, {"name": "number_of_instances", "description": "Number of instances to attach to ELB", "default": "0"}, {"name": "instances", "description": "List of instances ID to place in the ELB pool", "default": "[]"}]}, "terraform-aws-modules/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/terraform-aws-modules/vpc/aws", "provider": "aws", "downloads": 207715, "description": "Terraform module which creates VPC resources on AWS", "source": "terraform-aws-modules/vpc/aws", "args": [{"name": "enable_dynamodb_endpoint", "description": "Should be true if you want to provision a DynamoDB endpoint to the VPC", "default": "false"}, {"name": "public_subnets", "description": "A list of public subnets inside the VPC", "default": "[]"}, {"name": "enable_dns_support", "description": "Should be true to enable DNS support in the VPC", "default": "true"}, {"name": "enable_dhcp_options", "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type", "default": "false"}, {"name": "manage_default_vpc", "description": "Should be true to adopt and manage Default VPC", "default": "false"}, {"name": "default_vpc_enable_dns_support", "description": "Should be true to enable DNS support in the Default VPC", "default": "true"}, {"name": "default_vpc_enable_classiclink", "description": "Should be true to enable ClassicLink in the Default VPC", "default": "false"}, {"name": "public_route_table_tags", "description": "Additional tags for the public route tables", "default": "{}"}, {"name": "intra_subnet_tags", "description": "Additional tags for the intra subnets", "default": "{}"}, {"name": "elasticache_subnet_tags", "description": "Additional tags for the elasticache subnets", "default": "{}"}, {"name": "nat_eip_tags", "description": "Additional tags for the NAT EIP", "default": "{}"}, {"name": "dhcp_options_domain_name", "description": "Specifies DNS name for DHCP options set", "default": "\"\""}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "redshift_subnet_group_tags", "description": "Additional tags for the redshift subnet group", "default": "{}"}, {"name": "dhcp_options_netbios_node_type", "description": "Specify netbios node_type for DHCP options set", "default": "\"\""}, {"name": "vpc_tags", "description": "Additional tags for the VPC", "default": "{}"}, {"name": "igw_tags", "description": "Additional tags for the internet gateway", "default": "{}"}, {"name": "reuse_nat_ips", "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable", "default": "false"}, {"name": "propagate_private_route_tables_vgw", "description": "Should be true if you want route table propagation", "default": "false"}, {"name": "intra_route_table_tags", "description": "Additional tags for the intra route tables", "default": "{}"}, {"name": "database_subnet_group_tags", "description": "Additional tags for the database subnet group", "default": "{}"}, {"name": "default_vpc_tags", "description": "Additional tags for the Default VPC", "default": "{}"}, {"name": "create_vpc", "description": "Controls if VPC should be created (it affects almost all resources)", "default": "true"}, {"name": "enable_dns_hostnames", "description": "Should be true to enable DNS hostnames in the VPC", "default": "false"}, {"name": "private_subnet_tags", "description": "Additional tags for the private subnets", "default": "{}"}, {"name": "redshift_subnets", "description": "A list of redshift subnets", "default": "[]"}, {"name": "create_database_subnet_group", "description": "Controls if database subnet group should be created", "default": "true"}, {"name": "single_nat_gateway", "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks", "default": "false"}, {"name": "enable_vpn_gateway", "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC", "default": "false"}, {"name": "vpn_gateway_id", "description": "ID of VPN Gateway to attach to the VPC", "default": "\"\""}, {"name": "map_public_ip_on_launch", "description": "Should be false if you do not want to auto-assign public IP on launch", "default": "true"}, {"name": "public_subnet_tags", "description": "Additional tags for the public subnets", "default": "{}"}, {"name": "azs", "description": "A list of availability zones in the region", "default": "[]"}, {"name": "enable_s3_endpoint", "description": "Should be true if you want to provision an S3 endpoint to the VPC", "default": "false"}, {"name": "database_subnets", "description": "A list of database subnets", "default": "[]"}, {"name": "one_nat_gateway_per_az", "description": "Should be true if you want only one NAT Gateway per availability zone. Requires `var.azs` to be set, and the number of `public_subnets` created to be greater than or equal to the number of availability zones specified in `var.azs`.", "default": "false"}, {"name": "private_route_table_tags", "description": "Additional tags for the private route tables", "default": "{}"}, {"name": "dhcp_options_ntp_servers", "description": "Specify a list of NTP servers for DHCP options set", "default": "[]"}, {"name": "default_vpc_name", "description": "Name to be used on the Default VPC", "default": "\"\""}, {"name": "name", "description": "Name to be used on all the resources as identifier", "default": "\"\""}, {"name": "instance_tenancy", "description": "A tenancy option for instances launched into the VPC", "default": "\"default\""}, {"name": "propagate_public_route_tables_vgw", "description": "Should be true if you want route table propagation", "default": "false"}, {"name": "redshift_subnet_tags", "description": "Additional tags for the redshift subnets", "default": "{}"}, {"name": "dhcp_options_tags", "description": "Additional tags for the DHCP option set", "default": "{}"}, {"name": "nat_gateway_tags", "description": "Additional tags for the NAT gateways", "default": "{}"}, {"name": "default_vpc_enable_dns_hostnames", "description": "Should be true to enable DNS hostnames in the Default VPC", "default": "false"}, {"name": "elasticache_subnets", "description": "A list of elasticache subnets", "default": "[]"}, {"name": "external_nat_ip_ids", "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)", "default": "[]"}, {"name": "enable_nat_gateway", "description": "Should be true if you want to provision NAT Gateways for each of your private networks", "default": "false"}, {"name": "dhcp_options_domain_name_servers", "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided", "default": "[\n  \"AmazonProvidedDNS\"\n]"}, {"name": "cidr", "description": "The CIDR block for the VPC. Default value is a valid CIDR, but not acceptable by AWS and should be overriden", "default": "\"0.0.0.0/0\""}, {"name": "intra_subnets", "description": "A list of intra subnets", "default": "[]"}, {"name": "dhcp_options_netbios_name_servers", "description": "Specify a list of netbios servers for DHCP options set", "default": "[]"}, {"name": "database_subnet_tags", "description": "Additional tags for the database subnets", "default": "{}"}, {"name": "vpn_gateway_tags", "description": "Additional tags for the VPN gateway", "default": "{}"}, {"name": "private_subnets", "description": "A list of private subnets inside the VPC", "default": "[]"}]}, "terraform-aws-modules/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/terraform-aws-modules/rds/aws", "provider": "aws", "downloads": 54494, "description": "Terraform module which creates RDS resources on AWS", "source": "terraform-aws-modules/rds/aws", "args": [{"name": "username", "description": "Username for the master DB user", "default": ""}, {"name": "db_subnet_group_name", "description": "Name of DB subnet group. DB instance will be created in the VPC associated with the DB subnet group. If unspecified, will be created in the default VPC", "default": "\"\""}, {"name": "option_group_name", "description": "Name of the DB option group to associate. Setting this automatically disables option_group creation", "default": "\"\""}, {"name": "monitoring_role_name", "description": "Name of the IAM role which will be created when create_monitoring_role is enabled.", "default": "\"rds-monitoring-role\""}, {"name": "backup_retention_period", "description": "The days to retain backups for", "default": "1"}, {"name": "subnet_ids", "description": "A list of VPC subnet IDs", "default": "[]"}, {"name": "identifier", "description": "The name of the RDS instance, if omitted, Terraform will assign a random, unique identifier", "default": ""}, {"name": "allocated_storage", "description": "The allocated storage in gigabytes", "default": ""}, {"name": "create_db_subnet_group", "description": "Whether to create a database subnet group", "default": "true"}, {"name": "password", "description": "Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file", "default": ""}, {"name": "apply_immediately", "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window", "default": "false"}, {"name": "iam_database_authentication_enabled", "description": "Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled", "default": "false"}, {"name": "engine_version", "description": "The engine version to use", "default": ""}, {"name": "copy_tags_to_snapshot", "description": "On delete, copy all Instance tags to the final snapshot (if final_snapshot_identifier is specified)", "default": "false"}, {"name": "tags", "description": "A mapping of tags to assign to all resources", "default": "{}"}, {"name": "parameters", "description": "A list of DB parameters (map) to apply", "default": "[]"}, {"name": "create_db_instance", "description": "Whether to create a database instance", "default": "true"}, {"name": "timezone", "description": "(Optional) Time zone of the DB instance. timezone is currently only supported by Microsoft SQL Server. The timezone can only be set on creation. See MSSQL User Guide for more information.", "default": "\"\""}, {"name": "character_set_name", "description": "(Optional) The character set name to use for DB encoding in Oracle instances. This can't be changed. See Oracle Character Sets Supported in Amazon RDS for more information.", "default": "\"\""}, {"name": "replicate_source_db", "description": "Specifies that this resource is a Replicate database, and to use this value as the source database. This correlates to the identifier of another Amazon RDS Database to replicate.", "default": "\"\""}, {"name": "vpc_security_group_ids", "description": "List of VPC security groups to associate", "default": "[]"}, {"name": "name", "description": "The DB name to create. If omitted, no database is created initially", "default": "\"\""}, {"name": "port", "description": "The port on which the DB accepts connections", "default": ""}, {"name": "create_monitoring_role", "description": "Create IAM role with a defined name that permits RDS to send enhanced monitoring metrics to CloudWatch Logs.", "default": "false"}, {"name": "allow_major_version_upgrade", "description": "Indicates that major version upgrades are allowed. Changing this parameter does not result in an outage and the change is asynchronously applied as soon as possible", "default": "false"}, {"name": "maintenance_window", "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi'. Eg: 'Mon:00:00-Mon:03:00'", "default": ""}, {"name": "create_db_parameter_group", "description": "Whether to create a database parameter group", "default": "true"}, {"name": "kms_key_id", "description": "The ARN for the KMS encryption key. If creating an encrypted replica, set this to the destination KMS ARN. If storage_encrypted is set to true and kms_key_id is not specified the default KMS key created in your account will be used", "default": "\"\""}, {"name": "engine", "description": "The database engine to use", "default": ""}, {"name": "create_db_option_group", "description": "Whether to create a database option group", "default": "true"}, {"name": "monitoring_interval", "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. To disable collecting Enhanced Monitoring metrics, specify 0. The default is 0. Valid Values: 0, 1, 5, 10, 15, 30, 60.", "default": "0"}, {"name": "storage_type", "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'io1' if iops is specified, 'standard' if not. Note that this behaviour is different from the AWS web console, where the default is 'gp2'.", "default": "\"gp2\""}, {"name": "storage_encrypted", "description": "Specifies whether the DB instance is encrypted", "default": "false"}, {"name": "parameter_group_name", "description": "Name of the DB parameter group to associate. Setting this automatically disables parameter_group creation", "default": "\"\""}, {"name": "iops", "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1'", "default": "0"}, {"name": "auto_minor_version_upgrade", "description": "Indicates that minor engine upgrades will be applied automatically to the DB instance during the maintenance window", "default": "true"}, {"name": "backup_window", "description": "The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window", "default": ""}, {"name": "options", "description": "A list of Options to apply.", "default": "[]"}, {"name": "snapshot_identifier", "description": "Specifies whether or not to create this database from a snapshot. This correlates to the snapshot ID you'd find in the RDS console, e.g: rds:production-2015-06-26-06-05.", "default": "\"\""}, {"name": "final_snapshot_identifier", "description": "The name of your final DB snapshot when this DB instance is deleted.", "default": "false"}, {"name": "option_group_description", "description": "The description of the option group", "default": "\"\""}, {"name": "instance_class", "description": "The instance type of the RDS instance", "default": ""}, {"name": "multi_az", "description": "Specifies if the RDS instance is multi-AZ", "default": "false"}, {"name": "publicly_accessible", "description": "Bool to control if instance is publicly accessible", "default": "false"}, {"name": "monitoring_role_arn", "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs. Must be specified if monitoring_interval is non-zero.", "default": "\"\""}, {"name": "skip_final_snapshot", "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted, using the value from final_snapshot_identifier", "default": "true"}, {"name": "family", "description": "The family of the DB parameter group", "default": "\"\""}, {"name": "major_engine_version", "description": "Specifies the major version of the engine that this option group should be associated with", "default": "\"\""}, {"name": "license_model", "description": "License model information for this DB instance. Optional, but required for some DB engines, i.e. Oracle SE1", "default": "\"\""}, {"name": "availability_zone", "description": "The Availability Zone of the RDS instance", "default": "\"\""}]}, "terraform-aws-modules/autoscaling/aws": {"name": "autoscaling", "url": "https://registry.terraform.io/modules/terraform-aws-modules/autoscaling/aws", "provider": "aws", "downloads": 47896, "description": "Terraform module which creates Auto Scaling resources on AWS", "source": "terraform-aws-modules/autoscaling/aws", "args": [{"name": "suspended_processes", "description": "A list of processes to suspend for the AutoScaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer. Note that if you suspend either the Launch or Terminate process types, it can prevent your autoscaling group from functioning properly.", "default": "[]"}, {"name": "wait_for_elb_capacity", "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over min_elb_capacity behavior.", "default": "false"}, {"name": "create_lc", "description": "Whether to create launch configuration", "default": "true"}, {"name": "launch_configuration", "description": "The name of the launch configuration to use (if it is created outside of this module)", "default": "\"\""}, {"name": "health_check_grace_period", "description": "Time (in seconds) after instance comes into service before checking health", "default": "300"}, {"name": "target_group_arns", "description": "A list of aws_alb_target_group ARNs, for use with Application Load Balancing", "default": "[]"}, {"name": "force_delete", "description": "Allows deleting the autoscaling group without waiting for all instances in the pool to terminate. You can force an autoscaling group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling", "default": "false"}, {"name": "load_balancers", "description": "A list of elastic load balancer names to add to the autoscaling group names", "default": "[]"}, {"name": "metrics_granularity", "description": "The granularity to associate with the metrics to collect. The only valid value is 1Minute", "default": "\"1Minute\""}, {"name": "min_elb_capacity", "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes", "default": "0"}, {"name": "associate_public_ip_address", "description": "Associate a public ip address with an instance in a VPC", "default": "false"}, {"name": "enable_monitoring", "description": "Enables/disables detailed monitoring. This is enabled by default.", "default": "true"}, {"name": "ebs_optimized", "description": "If true, the launched EC2 instance will be EBS-optimized", "default": "false"}, {"name": "health_check_type", "description": "Controls how health checking is done. Values are - EC2 and ELB", "default": ""}, {"name": "lc_name", "description": "Creates a unique name for launch configuration beginning with the specified prefix", "default": "\"\""}, {"name": "asg_name", "description": "Creates a unique name for autoscaling group beginning with the specified prefix", "default": "\"\""}, {"name": "key_name", "description": "The key name that should be used for the instance", "default": "\"\""}, {"name": "protect_from_scale_in", "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for terminination during scale in events.", "default": "false"}, {"name": "iam_instance_profile", "description": "The IAM instance profile to associate with launched instances", "default": "\"\""}, {"name": "ebs_block_device", "description": "Additional EBS block devices to attach to the instance", "default": "[]"}, {"name": "wait_for_capacity_timeout", "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior.", "default": "\"10m\""}, {"name": "name", "description": "Creates a unique name beginning with the specified prefix", "default": ""}, {"name": "max_size", "description": "The maximum size of the auto scale group", "default": ""}, {"name": "default_cooldown", "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start", "default": "300"}, {"name": "desired_capacity", "description": "The number of Amazon EC2 instances that should be running in the group", "default": ""}, {"name": "vpc_zone_identifier", "description": "A list of subnet IDs to launch resources in", "default": ""}, {"name": "termination_policies", "description": "A list of policies to decide how the instances in the auto scale group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default", "default": "[\n  \"Default\"\n]"}, {"name": "tags_as_map", "description": "A map of tags and values in the same format as other resources accept. This will be converted into the non-standard format that the aws_autoscaling_group requires.", "default": "{}"}, {"name": "create_asg", "description": "Whether to create autoscaling group", "default": "true"}, {"name": "recreate_asg_when_lc_changes", "description": "Whether to recreate an autoscaling group when launch configuration changes", "default": "false"}, {"name": "image_id", "description": "The EC2 image ID to launch", "default": ""}, {"name": "root_block_device", "description": "Customize details about the root block device of the instance", "default": "[]"}, {"name": "enabled_metrics", "description": "A list of metrics to collect. The allowed values are GroupMinSize, GroupMaxSize, GroupDesiredCapacity, GroupInServiceInstances, GroupPendingInstances, GroupStandbyInstances, GroupTerminatingInstances, GroupTotalInstances", "default": "[\n  \"GroupMinSize\",\n  \"GroupMaxSize\",\n  \"GroupDesiredCapacity\",\n  \"GroupInServiceInstances\",\n  \"GroupPendingInstances\",\n  \"GroupStandbyInstances\",\n  \"GroupTerminatingInstances\",\n  \"GroupTotalInstances\"\n]"}, {"name": "placement_tenancy", "description": "The tenancy of the instance. Valid values are 'default' or 'dedicated'", "default": "\"default\""}, {"name": "tags", "description": "A list of tag blocks. Each element should have keys named key, value, and propagate_at_launch.", "default": "[]"}, {"name": "placement_group", "description": "The name of the placement group into which you'll launch your instances, if any", "default": "\"\""}, {"name": "security_groups", "description": "A list of security group IDs to assign to the launch configuration", "default": ""}, {"name": "user_data", "description": "The user data to provide when launching the instance", "default": "\" \""}, {"name": "ephemeral_block_device", "description": "Customize Ephemeral (also known as 'Instance Store') volumes on the instance", "default": "[]"}, {"name": "spot_price", "description": "The price to use for reserving spot instances", "default": "\"\""}, {"name": "instance_type", "description": "The size of instance to launch", "default": ""}, {"name": "min_size", "description": "The minimum size of the auto scale group", "default": ""}]}, "terraform-aws-modules/alb/aws": {"name": "alb", "url": "https://registry.terraform.io/modules/terraform-aws-modules/alb/aws", "provider": "aws", "downloads": 43433, "description": "A Terraform module to create an AWS Application Load Balancer (ALB) and associated resources.", "source": "terraform-aws-modules/alb/aws", "args": [{"name": "enable_deletion_protection", "description": "If true, deletion of the load balancer will be disabled via the AWS API. This will prevent Terraform from deleting the load balancer. Defaults to false.", "default": "false"}, {"name": "enable_http2", "description": "Indicates whether HTTP/2 is enabled in application load balancers.", "default": "true"}, {"name": "extra_ssl_certs", "description": "A list of maps describing any extra SSL certificates to apply to the HTTPS listeners. Required key/values: certificate_arn, https_listener_index (the index of the listener within https_listeners which the cert applies toward).", "default": "[]"}, {"name": "extra_ssl_certs_count", "description": "A manually provided count/length of the extra_ssl_certs list of maps since the list cannot be computed.", "default": "0"}, {"name": "https_listeners", "description": "A list of maps describing the HTTPS listeners for this ALB. Required key/values: port, certificate_arn. Optional key/values: ssl_policy (defaults to ELBSecurityPolicy-2016-08), target_group_index (defaults to 0)", "default": "[]"}, {"name": "https_listeners_count", "description": "A manually provided count/length of the https_listeners list of maps since the list cannot be computed.", "default": "0"}, {"name": "http_tcp_listeners", "description": "A list of maps describing the HTTPS listeners for this ALB. Required key/values: port, protocol. Optional key/values: target_group_index (defaults to 0)", "default": "[]"}, {"name": "http_tcp_listeners_count", "description": "A manually provided count/length of the http_tcp_listeners list of maps since the list cannot be computed.", "default": "0"}, {"name": "idle_timeout", "description": "The time in seconds that the connection is allowed to be idle.", "default": "60"}, {"name": "ip_address_type", "description": "The type of IP addresses used by the subnets for your load balancer. The possible values are ipv4 and dualstack.", "default": "\"ipv4\""}, {"name": "listener_ssl_policy_default", "description": "The security policy if using HTTPS externally on the load balancer. [See](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-policy-table.html).", "default": "\"ELBSecurityPolicy-2016-08\""}, {"name": "load_balancer_is_internal", "description": "Boolean determining if the load balancer is internal or externally facing.", "default": "false"}, {"name": "load_balancer_create_timeout", "description": "Timeout value when creating the ALB.", "default": "\"10m\""}, {"name": "load_balancer_delete_timeout", "description": "Timeout value when deleting the ALB.", "default": "\"10m\""}, {"name": "load_balancer_name", "description": "The resource name and Name tag of the load balancer.", "default": ""}, {"name": "load_balancer_update_timeout", "description": "Timeout value when updating the ALB.", "default": "\"10m\""}, {"name": "logging_enabled", "description": "Controls if the ALB will log requests to S3.", "default": "true"}, {"name": "log_bucket_name", "description": "S3 bucket (externally created) for storing load balancer access logs. Required if logging_enabled is true.", "default": "\"\""}, {"name": "log_location_prefix", "description": "S3 prefix within the log_bucket_name under which logs are stored.", "default": "\"\""}, {"name": "subnets", "description": "A list of subnets to associate with the load balancer. e.g. ['subnet-1a2b3c4d','subnet-1a2b3c4e','subnet-1a2b3c4f']", "default": ""}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "security_groups", "description": "The security groups to attach to the load balancer. e.g. [\"sg-edcd9784\",\"sg-edcd9785\"]", "default": ""}, {"name": "target_groups", "description": "A list of maps containing key/value pairs that define the target groups to be created. Order of these maps is important and the index of these are to be referenced in listener definitions. Required key/values: name, backend_protocol, backend_port. Optional key/values are in the target_groups_defaults variable.", "default": "[]"}, {"name": "target_groups_count", "description": "A manually provided count/length of the target_groups list of maps since the list cannot be computed.", "default": "0"}, {"name": "target_groups_defaults", "description": "Default values for target groups as defined by the list of maps.", "default": "{\n  \"cookie_duration\": 86400,\n  \"deregistration_delay\": 300,\n  \"health_check_healthy_threshold\": 3,\n  \"health_check_interval\": 10,\n  \"health_check_matcher\": \"200-299\",\n  \"health_check_path\": \"/\",\n  \"health_check_port\": \"traffic-port\",\n  \"health_check_timeout\": 5,\n  \"health_check_unhealthy_threshold\": 3,\n  \"stickiness_enabled\": true,\n  \"target_type\": \"instance\"\n}"}, {"name": "vpc_id", "description": "VPC id where the load balancer and other resources will be deployed.", "default": ""}]}, "terraform-aws-modules/iam/aws": {"name": "iam", "url": "https://registry.terraform.io/modules/terraform-aws-modules/iam/aws", "provider": "aws", "downloads": 31926, "description": "Terraform module which creates IAM resources on AWS", "source": "terraform-aws-modules/iam/aws", "args": []}, "devops-workflow/boolean/local": {"name": "boolean", "url": "https://registry.terraform.io/modules/devops-workflow/boolean/local", "provider": "local", "downloads": 16281, "description": "Terraform module to simplify and expand boolean use", "source": "devops-workflow/boolean/local", "args": [{"name": "value", "description": "Value to test for truth", "default": ""}]}, "terraform-aws-modules/ec2-instance/aws": {"name": "ec2-instance", "url": "https://registry.terraform.io/modules/terraform-aws-modules/ec2-instance/aws", "provider": "aws", "downloads": 15396, "description": "Terraform module which creates EC2 instance(s) on AWS", "source": "terraform-aws-modules/ec2-instance/aws", "args": [{"name": "user_data", "description": "The user data to provide when launching the instance", "default": "\"\""}, {"name": "cpu_credits", "description": "The credit option for CPU usage (unlimited or standard)", "default": "\"standard\""}, {"name": "tenancy", "description": "The tenancy of the instance (if the instance is running in a VPC). Available values: default, dedicated, host.", "default": "\"default\""}, {"name": "monitoring", "description": "If true, the launched EC2 instance will have detailed monitoring enabled", "default": "false"}, {"name": "subnet_id", "description": "The VPC Subnet ID to launch in", "default": ""}, {"name": "instance_count", "description": "Number of instances to launch", "default": "1"}, {"name": "vpc_security_group_ids", "description": "A list of security group IDs to associate with", "default": ""}, {"name": "volume_tags", "description": "A mapping of tags to assign to the devices created by the instance at launch time", "default": "{}"}, {"name": "ebs_block_device", "description": "Additional EBS block devices to attach to the instance", "default": "[]"}, {"name": "name", "description": "Name to be used on all resources as prefix", "default": ""}, {"name": "ami", "description": "ID of AMI to use for the instance", "default": ""}, {"name": "instance_initiated_shutdown_behavior", "description": "Shutdown behavior for the instance", "default": "\"\""}, {"name": "ipv6_address_count", "description": "A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.", "default": "0"}, {"name": "tags", "description": "A mapping of tags to assign to the resource", "default": "{}"}, {"name": "ebs_optimized", "description": "If true, the launched EC2 instance will be EBS-optimized", "default": "false"}, {"name": "disable_api_termination", "description": "If true, enables EC2 Instance Termination Protection", "default": "false"}, {"name": "ephemeral_block_device", "description": "Customize Ephemeral (also known as Instance Store) volumes on the instance", "default": "[]"}, {"name": "instance_type", "description": "The type of instance to start", "default": ""}, {"name": "key_name", "description": "The key name to use for the instance", "default": "\"\""}, {"name": "iam_instance_profile", "description": "The IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile.", "default": "\"\""}, {"name": "network_interface", "description": "Customize network interfaces to be attached at instance boot time", "default": "[]"}, {"name": "source_dest_check", "description": "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs.", "default": "true"}, {"name": "ipv6_addresses", "description": "Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface", "default": "[]"}, {"name": "root_block_device", "description": "Customize details about the root block device of the instance. See Block Devices below for details", "default": "[]"}, {"name": "placement_group", "description": "The Placement Group to start the instance in", "default": "\"\""}, {"name": "associate_public_ip_address", "description": "If true, the EC2 instance will have associated public IP address", "default": "false"}, {"name": "private_ip", "description": "Private IP address to associate with the instance in a VPC", "default": "\"\""}]}, "jenunifer/rds-aurora/aws": {"name": "rds-aurora", "url": "https://registry.terraform.io/modules/jenunifer/rds-aurora/aws", "provider": "aws", "downloads": 14194, "description": "Creates an Aurora Cluster and its instances in AWS. ", "source": "jenunifer/rds-aurora/aws", "args": [{"name": "rds_password", "description": "(Required unless a snapshot_identifier is provided) Password for the master DB user", "default": ""}, {"name": "tags", "description": "Additional tags (e.g. map(`workload-type`,`role`,`team`, `env`)", "default": "{}"}, {"name": "replica_count", "description": "Number of reader nodes to create.  If `replica_scale_enable` is `true`, the value of `replica_scale_min` is used instead.", "default": "\"0\""}, {"name": "auto_minor_version_upgrade", "description": "Determines whether minor engine upgrades will be performed automatically in the maintenance window", "default": "\"true\""}, {"name": "pool_id", "description": "For use if cluster/instances have an additional identifier at the end of name.", "default": "\"1\""}, {"name": "prefix", "description": "ID prefix. (h/o/p)", "default": "\"\""}, {"name": "team", "description": "Team that owns the data.", "default": "\"\""}, {"name": "snapshot_identifier", "description": "DB snapshot to create this database from", "default": "\"\""}, {"name": "backup_retention_period", "description": "How long to keep backups for (in days)", "default": "\"7\""}, {"name": "skip_final_snapshot", "description": "Should a final snapshot be created on cluster destroy", "default": "\"false\""}, {"name": "family", "description": "The family of the DB cluster parameter group", "default": "\"aurora-mysql5.7\""}, {"name": "db_cluster_parameter_group_name", "description": "The name of a DB Cluster parameter group to use", "default": "\"default.aurora5.7\""}, {"name": "subnet_group_name", "description": "Subnet Group Name (Has to match cluster for instances.)", "default": "\"\""}, {"name": "vpc_security_group_ids", "description": "List of VPC security groups to associate(default [])", "default": ""}, {"name": "rds_username", "description": "(Required unless a snapshot_identifier is provided) Username for the master DB user", "default": ""}, {"name": "engine", "description": "Aurora database engine type, currently aurora, aurora-mysql or aurora-postgresql", "default": "\"aurora-mysql\""}, {"name": "env", "description": "Environment (prod/stage/dev)", "default": "\"\""}, {"name": "engine_version", "description": "Aurora database engine version.", "default": "\"5.7.12\""}, {"name": "azs", "description": "List of AZs to use", "default": ""}, {"name": "cluster_identifier", "description": "", "default": "\"\""}, {"name": "availability_zone", "description": "", "default": "\"\""}, {"name": "db_name", "description": "Database name", "default": ""}, {"name": "db_port", "description": "Database port", "default": "\"3306\""}, {"name": "publicly_accessible", "description": "", "default": "\"false\""}, {"name": "db_instance_parameters", "description": "A list of DB parameter maps to apply", "default": "[\n  {\n    \"name\": \"innodb_buffer_pool_dump_at_shutdown\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"innodb_buffer_pool_load_at_startup\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"log_output\",\n    \"value\": \"TABLE\"\n  },\n  {\n    \"name\": \"log_warnings\",\n    \"value\": \"2\"\n  },\n  {\n    \"name\": \"slow_query_log\",\n    \"value\": \"1\"\n  },\n  {\n    \"name\": \"long_query_time\",\n    \"value\": \".5\"\n  }\n]"}, {"name": "db_parameter_group_name", "description": "The name of a DB parameter group to use", "default": "\"aurora-mysql5.7\""}, {"name": "final_snapshot_identifier", "description": "The name to use when creating a final snapshot on cluster destroy, appends a random 8 digits to name to ensure it's unique too.", "default": "\"\""}, {"name": "vpc_id", "description": "VPC ID to create the cluster in (e.g. `vpc-a22222ee`)", "default": "\"\""}, {"name": "role", "description": "", "default": "\"\""}, {"name": "preferred_backup_window", "description": "When to perform DB backups", "default": "\"02:00-03:00\""}, {"name": "preferred_maintenance_window", "description": "When to perform DB maintenance", "default": "\"sun:05:00-sun:06:00\""}, {"name": "apply_immediately", "description": "Determines whether or not any DB modifications are applied immediately, or during the maintenance window", "default": "\"false\""}, {"name": "instance_type", "description": "Instance type to use.  The module (for defaults) creates db.t2.medium for production and db.t2.small for staging.", "default": "\"db.t2.medium\""}, {"name": "db_cluster_parameters", "description": "List of DB cluster parameters to apply", "default": "[\n  {\n    \"apply_method\": \"pending-reboot\",\n    \"name\": \"innodb_strict_mode\",\n    \"value\": \"0\"\n  }\n]"}]}, "cloudposse/route53-alias/aws": {"name": "route53-alias", "url": "https://registry.terraform.io/modules/cloudposse/route53-alias/aws", "provider": "aws", "downloads": 7421, "description": "Terraform Module to Define Vanity Host/Domain (e.g. `brand.com`) as an ALIAS record", "source": "cloudposse/route53-alias/aws", "args": [{"name": "aliases", "description": "", "default": ""}, {"name": "parent_zone_id", "description": "", "default": "\"\""}, {"name": "parent_zone_name", "description": "", "default": "\"\""}, {"name": "target_dns_name", "description": "", "default": ""}, {"name": "target_zone_id", "description": "", "default": ""}, {"name": "evaluate_target_health", "description": "", "default": "\"false\""}]}, "Azure/network/azurerm": {"name": "network", "url": "https://registry.terraform.io/modules/Azure/network/azurerm", "provider": "azurerm", "downloads": 7165, "description": "Terraform Azure RM Module for Network", "source": "Azure/network/azurerm", "args": [{"name": "vnet_name", "description": "Name of the vnet to create", "default": "\"acctvnet\""}, {"name": "resource_group_name", "description": "Default resource group name that the network will be created in.", "default": "\"myapp-rg\""}, {"name": "location", "description": "The location/region where the core network will be created. The full list of Azure regions can be found at https://azure.microsoft.com/regions", "default": ""}, {"name": "address_space", "description": "The address space that is used by the virtual network.", "default": "\"10.0.0.0/16\""}, {"name": "dns_servers", "description": "The DNS servers to be used with vNet.", "default": "[]"}, {"name": "subnet_prefixes", "description": "The address prefix to use for the subnet.", "default": "[\n  \"10.0.1.0/24\"\n]"}, {"name": "subnet_names", "description": "A list of public subnets inside the vNet.", "default": "[\n  \"subnet1\"\n]"}, {"name": "tags", "description": "The tags to associate with your network and subnets.", "default": "{\n  \"tag1\": \"\",\n  \"tag2\": \"\"\n}"}]}, "infrablocks/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/infrablocks/ecs-service/aws", "provider": "aws", "downloads": 4982, "description": "Terraform module for deploying a service to an existing ECS cluster in AWS", "source": "infrablocks/ecs-service/aws", "args": [{"name": "region", "description": "The region into which to deploy the service.", "default": ""}, {"name": "vpc_id", "description": "The ID of the VPC into which to deploy the service.", "default": ""}, {"name": "component", "description": "The component this service will contain.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "service_task_container_definitions", "description": "A template for the container definitions in the task.", "default": "\"\""}, {"name": "service_task_network_mode", "description": "The network mode used for the containers in the task.", "default": "\"bridge\""}, {"name": "service_name", "description": "The name of the service being created.", "default": ""}, {"name": "service_image", "description": "The docker image (including version) to deploy.", "default": "\"\""}, {"name": "service_command", "description": "The command to run to start the container.", "default": "[]"}, {"name": "service_port", "description": "The port the containers will be listening on.", "default": ""}, {"name": "service_desired_count", "description": "The desired number of tasks in the service.", "default": "3"}, {"name": "service_deployment_maximum_percent", "description": "The maximum percentage of the desired count that can be running.", "default": "200"}, {"name": "service_deployment_minimum_healthy_percent", "description": "The minimum healthy percentage of the desired count to keep running.", "default": "50"}, {"name": "attach_to_load_balancer", "description": "Whether or not this service should attach to a load balancer (\"yes\" or \"no\").", "default": "\"yes\""}, {"name": "service_elb_name", "description": "The name of the ELB to configure to point at the service containers.", "default": "\"\""}, {"name": "service_role", "description": "The ARN of the service task role to use.", "default": "\"\""}, {"name": "service_volumes", "description": "A list of volumes to make available to the containers in the service.", "default": "[]"}, {"name": "ecs_cluster_id", "description": "The ID of the ECS cluster in which to deploy the service.", "default": ""}, {"name": "ecs_cluster_service_role_arn", "description": "The ARN of the IAM role to provide to ECS to manage the service.", "default": ""}]}, "fpco/foundation/aws": {"name": "foundation", "url": "https://registry.terraform.io/modules/fpco/foundation/aws", "provider": "aws", "downloads": 4878, "description": "Establish a solid Foundation on AWS with these modules for Terraform", "source": "fpco/foundation/aws", "args": []}, "devops-workflow/ami-ids/aws": {"name": "ami-ids", "url": "https://registry.terraform.io/modules/devops-workflow/ami-ids/aws", "provider": "aws", "downloads": 4772, "description": "Terraform module to lookup AMI IDs", "source": "devops-workflow/ami-ids/aws", "args": [{"name": "ami_owners", "description": "AMI Owner IDs", "default": "{\n  \"amazon\": \"amazon\",\n  \"canonical\": \"099720109477\",\n  \"centos\": \"679593333241\",\n  \"fedora\": \"125523088429\"\n}"}, {"name": "ami_version_amazonlinux", "description": "Amazon Linux version to get", "default": "\"*\""}, {"name": "ami_version_ecs", "description": "Amazon ECS Optimized version to get", "default": "\"*\""}, {"name": "ami_version_ubuntu", "description": "Ubuntu version to get. Default is 16.04", "default": "\"xenial-16.04\""}, {"name": "distribution", "description": "Linux distribution for AWS AMI, supported: amazonlinux, ecs, ubuntu", "default": "\"amazonlinux\""}]}, "Azure/compute/azurerm": {"name": "compute", "url": "https://registry.terraform.io/modules/Azure/compute/azurerm", "provider": "azurerm", "downloads": 4321, "description": "Terraform Azure RM Compute Module", "source": "Azure/compute/azurerm", "args": [{"name": "resource_group_name", "description": "The name of the resource group in which the resources will be created", "default": "\"terraform-compute\""}, {"name": "location", "description": "The location/region where the virtual network is created. Changing this forces a new resource to be created.", "default": ""}, {"name": "vnet_subnet_id", "description": "The subnet id of the virtual network where the virtual machines will reside.", "default": ""}, {"name": "public_ip_dns", "description": "Optional globally unique per datacenter region domain name label to apply to each public ip address. e.g. thisvar.varlocation.cloudapp.azure.com where you specify only thisvar here. This is an array of names which will pair up sequentially to the number of public ips defined in var.nb_public_ip. One name or empty string is required for every public ip. If no public ip is desired, then set this to an array with a single empty string.", "default": "[\n  \"\"\n]"}, {"name": "admin_password", "description": "The admin password to be used on the VMSS that will be deployed. The password must meet the complexity requirements of Azure", "default": "\"\""}, {"name": "ssh_key", "description": "Path to the public key to be used for ssh access to the VM.  Only used with non-Windows vms and can be left as-is even if using Windows vms. If specifying a path to a certification on a Windows machine to provision a linux vm use the / in the path versus backslash. e.g. c:/home/id_rsa.pub", "default": "\"~/.ssh/id_rsa.pub\""}, {"name": "remote_port", "description": "Remote tcp port to be used for access to the vms created via the nsg applied to the nics.", "default": "\"\""}, {"name": "admin_username", "description": "The admin username of the VM that will be deployed", "default": "\"azureuser\""}, {"name": "storage_account_type", "description": "Defines the type of storage account to be created. Valid options are Standard_LRS, Standard_ZRS, Standard_GRS, Standard_RAGRS, Premium_LRS.", "default": "\"Premium_LRS\""}, {"name": "vm_size", "description": "Specifies the size of the virtual machine.", "default": "\"Standard_DS1_V2\""}, {"name": "nb_instances", "description": "Specify the number of vm instances", "default": "\"1\""}, {"name": "vm_hostname", "description": "local name of the VM", "default": "\"myvm\""}, {"name": "vm_os_simple", "description": "Specify UbuntuServer, WindowsServer, RHEL, openSUSE-Leap, CentOS, Debian, CoreOS and SLES to get the latest image version of the specified os.  Do not provide this value if a custom value is used for vm_os_publisher, vm_os_offer, and vm_os_sku.", "default": "\"\""}, {"name": "vm_os_id", "description": "The resource ID of the image that you want to deploy if you are using a custom image.Note, need to provide is_windows_image = true for windows custom images.", "default": "\"\""}, {"name": "is_windows_image", "description": "Boolean flag to notify when the custom image is windows based. Only used in conjunction with vm_os_id", "default": "\"false\""}, {"name": "vm_os_publisher", "description": "The name of the publisher of the image that you want to deploy. This is ignored when vm_os_id or vm_os_simple are provided.", "default": "\"\""}, {"name": "vm_os_offer", "description": "The name of the offer of the image that you want to deploy. This is ignored when vm_os_id or vm_os_simple are provided.", "default": "\"\""}, {"name": "vm_os_sku", "description": "The sku of the image that you want to deploy. This is ignored when vm_os_id or vm_os_simple are provided.", "default": "\"\""}, {"name": "vm_os_version", "description": "The version of the image that you want to deploy. This is ignored when vm_os_id or vm_os_simple are provided.", "default": "\"latest\""}, {"name": "tags", "description": "A map of the tags to use on the resources that are deployed with this module.", "default": "{\n  \"source\": \"terraform\"\n}"}, {"name": "public_ip_address_allocation", "description": "Defines how an IP address is assigned. Options are Static or Dynamic.", "default": "\"dynamic\""}, {"name": "nb_public_ip", "description": "Number of public IPs to assign corresponding to one IP per vm. Set to 0 to not assign any public IP addresses.", "default": "\"1\""}, {"name": "delete_os_disk_on_termination", "description": "Delete datadisk when machine is terminated", "default": "\"false\""}, {"name": "data_sa_type", "description": "Data Disk Storage Account type", "default": "\"Standard_LRS\""}, {"name": "data_disk_size_gb", "description": "Storage data disk size size", "default": "\"\""}, {"name": "data_disk", "description": "Set to true to add a datadisk.", "default": "\"false\""}, {"name": "boot_diagnostics", "description": "(Optional) Enable or Disable boot diagnostics", "default": "\"false\""}, {"name": "boot_diagnostics_sa_type", "description": "(Optional) Storage account type for boot diagnostics", "default": "\"Standard_LRS\""}]}, "infrablocks/base-networking/aws": {"name": "base-networking", "url": "https://registry.terraform.io/modules/infrablocks/base-networking/aws", "provider": "aws", "downloads": 4159, "description": "Terraform module for building base networking in AWS", "source": "infrablocks/base-networking/aws", "args": [{"name": "availability_zones", "description": "The availability zones for which to add subnets.", "default": ""}, {"name": "public_subnets_offset", "description": "The number of /24s to offset the public subnets in the VPC CIDR.", "default": "0"}, {"name": "private_zone_id", "description": "The ID of the private Route 53 zone.", "default": ""}, {"name": "include_nat_gateway", "description": "Whether or not to deploy a NAT gateway for outbound Internet connectivity.", "default": "\"yes\""}, {"name": "infrastructure_events_bucket", "description": "S3 bucket in which to put VPC creation events. Required when `include_lifecycle_events` is 'yes'.", "default": "\"\""}, {"name": "region", "description": "The region into which to deploy the VPC.", "default": ""}, {"name": "component", "description": "The component this network will contain.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "dependencies", "description": "A comma separated list of components depended on my this component.", "default": "\"\""}, {"name": "private_subnets_offset", "description": "The number of /24s to offset the private subnets in the VPC CIDR.", "default": "0"}, {"name": "include_lifecycle_events", "description": "Whether or not to notify via S3 of a created VPC.", "default": "\"yes\""}, {"name": "vpc_cidr", "description": "The CIDR to use for the VPC.", "default": ""}]}, "devops-workflow/label/local": {"name": "label", "url": "https://registry.terraform.io/modules/devops-workflow/label/local", "provider": "local", "downloads": 4049, "description": "Terraform module to create consistent naming", "source": "devops-workflow/label/local", "args": [{"name": "attributes", "description": "Suffix name with additional attributes (policy, role, etc.)", "default": "[]"}, {"name": "component", "description": "TAG: Underlying, dedicated piece of service (Cache, DB, ...)", "default": "\"UNDEF\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespaces`, `attributes`, etc.", "default": "\"-\""}, {"name": "environment", "description": "Environment (ex: `dev`, `qa`, `stage`, `prod`). (Second or top level namespace. Depending on namespacing options)", "default": ""}, {"name": "monitor", "description": "TAG: Should resource be monitored", "default": "\"UNDEF\""}, {"name": "name", "description": "Base name for resource", "default": ""}, {"name": "namespace-env", "description": "Prefix name with the environment. If true, format is: <env>-<name>", "default": "true"}, {"name": "namespace-org", "description": "Prefix name with the organization. If true, format is: <org>-<env namespaced name>. If both env and org namespaces are used, format will be <org>-<env>-<name>", "default": "false"}, {"name": "organization", "description": "Organization name (Top level namespace)", "default": "\"\""}, {"name": "owner", "description": "TAG: Owner of the service", "default": "\"UNDEF\""}, {"name": "product", "description": "TAG: Company/business product", "default": "\"UNDEF\""}, {"name": "service", "description": "TAG: Application (microservice) name", "default": "\"UNDEF\""}, {"name": "tags", "description": "A map of additional tags", "default": "{}"}, {"name": "team", "description": "TAG: Department/team of people responsible for service", "default": "\"UNDEF\""}]}, "terraform-aws-modules/notify-slack/aws": {"name": "notify-slack", "url": "https://registry.terraform.io/modules/terraform-aws-modules/notify-slack/aws", "provider": "aws", "downloads": 3477, "description": "Terraform module which creates SNS topic and Lambda function which sends notifications to Slack", "source": "terraform-aws-modules/notify-slack/aws", "args": [{"name": "slack_webhook_url", "description": "The URL of Slack webhook", "default": ""}, {"name": "slack_username", "description": "The username that will appear on Slack messages", "default": ""}, {"name": "slack_emoji", "description": "A custom emoji that will appear on Slack messages", "default": "\":aws:\""}, {"name": "create", "description": "Whether to create all resources", "default": "true"}, {"name": "create_sns_topic", "description": "Whether to create new SNS topic", "default": "true"}, {"name": "create_with_kms_key", "description": "Whether to create resources with KMS encryption", "default": "false"}, {"name": "sns_topic_name", "description": "The name of the SNS topic to create", "default": ""}, {"name": "lambda_function_name", "description": "The name of the Lambda function to create", "default": "\"notify_slack\""}, {"name": "slack_channel", "description": "The name of the channel in Slack for notifications", "default": ""}, {"name": "kms_key_arn", "description": "ARN of the KMS key used for decrypting slack webhook url", "default": "\"\""}]}, "infrablocks/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/infrablocks/ecs-cluster/aws", "provider": "aws", "downloads": 3266, "description": "Terraform module for building an ECS cluster in AWS", "source": "infrablocks/ecs-cluster/aws", "args": [{"name": "vpc_id", "description": "The ID of the VPC into which to deploy the cluster.", "default": ""}, {"name": "subnet_ids", "description": "The IDs of the subnets for container instances.", "default": ""}, {"name": "cluster_instance_amis", "description": "A map of regions to AMIs for the container instances.", "default": "{\n  \"ap-northeast-1\": \"\",\n  \"ap-northeast-2\": \"\",\n  \"ap-south-1\": \"\",\n  \"ap-southeast-1\": \"\",\n  \"ap-southeast-2\": \"\",\n  \"ca-central-1\": \"\",\n  \"cn-north-1\": \"\",\n  \"eu-central-1\": \"\",\n  \"eu-west-1\": \"\",\n  \"eu-west-2\": \"\",\n  \"eu-west-3\": \"\",\n  \"sa-east-1\": \"\",\n  \"us-east-1\": \"\",\n  \"us-east-2\": \"\",\n  \"us-west-1\": \"\",\n  \"us-west-2\": \"\"\n}"}, {"name": "cluster_service_iam_policy_contents", "description": "The contents of the cluster service IAM policy.", "default": "\"\""}, {"name": "cluster_minimum_size", "description": "The minimum size of the ECS cluster.", "default": "1"}, {"name": "include_default_ingress_rule", "description": "Whether or not to include the default ingress rule on the ECS container instances security group (\"yes\" or \"no\").", "default": "\"yes\""}, {"name": "cluster_name", "description": "The name of the cluster to create.", "default": "\"default\""}, {"name": "cluster_instance_iam_policy_contents", "description": "The contents of the cluster instance IAM policy.", "default": "\"\""}, {"name": "associate_public_ip_addresses", "description": "Whether or not to associate public IP addresses with ECS container instances (\"yes\" or \"no\").", "default": "\"no\""}, {"name": "component", "description": "The component this cluster will contain.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "cluster_instance_ssh_public_key_path", "description": "The path to the public key to use for the container instances.", "default": ""}, {"name": "cluster_instance_type", "description": "The instance type of the container instances.", "default": "\"t2.medium\""}, {"name": "cluster_instance_root_block_device_size", "description": "The size in GB of the root block device on cluster instances.", "default": "10"}, {"name": "cluster_instance_docker_block_device_size", "description": "The size in GB of the docker block device on cluster instances.", "default": "100"}, {"name": "cluster_instance_docker_block_device_name", "description": "The name of the docker block device on cluster instances.", "default": "\"/dev/xvdcz\""}, {"name": "cluster_maximum_size", "description": "The maximum size of the ECS cluster.", "default": "10"}, {"name": "include_default_egress_rule", "description": "Whether or not to include the default egress rule on the ECS container instances security group (\"yes\" or \"no\").", "default": "\"yes\""}, {"name": "allowed_cidrs", "description": "The CIDRs allowed access to containers.", "default": "[\n  \"10.0.0.0/8\"\n]"}, {"name": "region", "description": "The region into which to deploy the cluster.", "default": ""}, {"name": "cluster_instance_user_data_template", "description": "The contents of a template for container instance user data.", "default": "\"\""}, {"name": "cluster_desired_capacity", "description": "The desired capacity of the ECS cluster.", "default": "3"}, {"name": "egress_cidrs", "description": "The CIDRs accessible from containers.", "default": "[\n  \"0.0.0.0/0\"\n]"}]}, "terraform-aws-modules/vpn-gateway/aws": {"name": "vpn-gateway", "url": "https://registry.terraform.io/modules/terraform-aws-modules/vpn-gateway/aws", "provider": "aws", "downloads": 3138, "description": "Terraform module which creates VPN gateway resources on AWS", "source": "terraform-aws-modules/vpn-gateway/aws", "args": [{"name": "vpn_gateway_id", "description": "The id of the VPN Gateway.", "default": ""}, {"name": "customer_gateway_id", "description": "The id of the Customer Gateway.", "default": ""}, {"name": "create_vpn_connection", "description": "Set to false to prevent the creation of a VPN Connection.", "default": "true"}, {"name": "vpc_id", "description": "The id of the VPC where the VPN Gateway lives.", "default": ""}, {"name": "vpc_subnet_route_table_ids", "description": "The ids of the VPC subnets for which routes from the VPN Gateway will be propagated.", "default": "[]"}, {"name": "vpc_subnet_route_table_count", "description": "The number of subnet route table ids being passed in via `vpc_subnet_route_table_ids`.", "default": "0"}, {"name": "tags", "description": "Set of tags to be added to the VPN Connection resource (only if `create_vpn_connection = true`).", "default": "{}"}, {"name": "vpn_connection_static_routes_only", "description": "Set to true for the created VPN connection to use static routes exclusively (only if `create_vpn_connection = true`). Static routes must be used for devices that don't support BGP.", "default": "false"}, {"name": "vpn_connection_static_routes_destinations", "description": "List of CIDRs to be used as destination for static routes (used with `vpn_connection_static_routes_only = true`). Routes to destinations set here will be propagated to the routing tables of the subnets defined in `vpc_subnet_route_table_ids`.", "default": "[]"}, {"name": "tunnel1_inside_cidr", "description": "The CIDR block of the inside IP addresses for the first VPN tunnel.", "default": "\"\""}, {"name": "tunnel2_inside_cidr", "description": "The CIDR block of the inside IP addresses for the second VPN tunnel.", "default": "\"\""}, {"name": "tunnel1_preshared_key", "description": "The preshared key of the first VPN tunnel.", "default": "\"\""}, {"name": "tunnel2_preshared_key", "description": "The preshared key of the second VPN tunnel.", "default": "\"\""}]}, "hashicorp/consul/aws": {"name": "consul", "url": "https://registry.terraform.io/modules/hashicorp/consul/aws", "provider": "aws", "downloads": 3067, "description": "A Terraform Module for how to run Consul on AWS using Terraform and Packer", "source": "hashicorp/consul/aws", "args": [{"name": "spot_price", "description": "The maximum hourly price to pay for EC2 Spot Instances.", "default": "\"\""}, {"name": "ami_id", "description": "The ID of the AMI to run in the cluster. This should be an AMI built from the Packer template under examples/consul-ami/consul.json. To keep this example simple, we run the same AMI on both server and client nodes, but in real-world usage, your client nodes would also run your apps. If the default value is used, Terraform will look up the latest AMI build automatically.", "default": "\"\""}, {"name": "cluster_name", "description": "What to name the Consul cluster and all of its associated resources", "default": "\"consul-example\""}, {"name": "num_servers", "description": "The number of Consul server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "num_clients", "description": "The number of Consul client nodes to deploy. You typically run the Consul client alongside your apps, so set this value to however many Instances make sense for your app code.", "default": "6"}, {"name": "cluster_tag_key", "description": "The tag the EC2 Instances will look for to automatically discover each other and form a cluster.", "default": "\"consul-servers\""}, {"name": "ssh_key_name", "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.", "default": "\"\""}, {"name": "vpc_id", "description": "The ID of the VPC in which the nodes will be deployed.  Uses default VPC if not supplied.", "default": "\"\""}]}, "GoogleCloudPlatform/nat-gateway/google": {"name": "nat-gateway", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/nat-gateway/google", "provider": "google", "downloads": 2995, "description": "Modular NAT Gateway on Google Compute Engine for Terraform.", "source": "GoogleCloudPlatform/nat-gateway/google", "args": [{"name": "subnetwork", "description": "The subnetwork to deploy to", "default": "\"default\""}, {"name": "squid_config", "description": "The squid config file to use. If not specifed the module file config/squid.conf will be used.", "default": "\"\""}, {"name": "region_params", "description": "Map of default zones and IPs for each region. Can be overridden using the `zone` and `ip` variables.", "default": "{\n  \"asia-east1\": {\n    \"zone\": \"asia-east1-b\"\n  },\n  \"asia-northeast1\": {\n    \"zone\": \"asia-northeast1-b\"\n  },\n  \"asia-south1\": {\n    \"zone\": \"asia-south1-b\"\n  },\n  \"asia-southeast1\": {\n    \"zone\": \"asia-southeast1-b\"\n  },\n  \"australia-southeast1\": {\n    \"zone\": \"australia-southeast1-b\"\n  },\n  \"europe-north1\": {\n    \"zone\": \"europe-north1-b\"\n  },\n  \"europe-west1\": {\n    \"zone\": \"europe-west1-b\"\n  },\n  \"europe-west2\": {\n    \"zone\": \"europe-west2-b\"\n  },\n  \"europe-west3\": {\n    \"zone\": \"europe-west3-b\"\n  },\n  \"europe-west4\": {\n    \"zone\": \"europe-west4-b\"\n  },\n  \"northamerica-northeast1\": {\n    \"zone\": \"northamerica-northeast1-b\"\n  },\n  \"southamerica-east1\": {\n    \"zone\": \"southamerica-east1-b\"\n  },\n  \"us-central1\": {\n    \"zone\": \"us-central1-f\"\n  },\n  \"us-east1\": {\n    \"zone\": \"us-east1-b\"\n  },\n  \"us-east4\": {\n    \"zone\": \"us-east4-b\"\n  },\n  \"us-west1\": {\n    \"zone\": \"us-west1-b\"\n  }\n}"}, {"name": "module_enabled", "description": "To disable this module, set this to false", "default": "true"}, {"name": "network_project", "description": "Name of the project for the network. Useful for shared VPC. Default is var.project.", "default": "\"\""}, {"name": "zone", "description": "Override the zone used in the `region_params` map for the region.", "default": "\"\""}, {"name": "compute_image", "description": "Image used for NAT compute VMs.", "default": "\"debian-cloud/debian-9\""}, {"name": "ip", "description": "Override the internal IP. If not provided, an internal IP will automatically be assigned.", "default": "\"\""}, {"name": "network", "description": "The network to deploy to", "default": "\"default\""}, {"name": "region", "description": "The region to create the nat gateway instance in.", "default": ""}, {"name": "name", "description": "Prefix added to the resource names, for example 'prod-'. By default, resources will be named in the form of '<name>nat-gateway-<zone>'", "default": "\"\""}, {"name": "tags", "description": "Additional compute instance network tags to apply route to.", "default": "[]"}, {"name": "squid_enabled", "description": "Enable squid3 proxy on port 3128.", "default": "\"false\""}, {"name": "ssh_source_ranges", "description": "Network ranges to allow SSH from", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "project", "description": "The project to deploy to, if not set the default provider project is used.", "default": "\"\""}, {"name": "route_priority", "description": "The priority for the Compute Engine Route", "default": "800"}, {"name": "machine_type", "description": "The machine type for the NAT gateway instance", "default": "\"n1-standard-1\""}, {"name": "metadata", "description": "Metadata to be attached to the NAT gateway instance", "default": "{}"}, {"name": "ip_address_name", "description": "Name of an existing reserved external address to use.", "default": "\"\""}]}, "matti/outputs/shell": {"name": "outputs", "url": "https://registry.terraform.io/modules/matti/outputs/shell", "provider": "shell", "downloads": 2931, "description": "", "source": "matti/outputs/shell", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "stdin", "description": "", "default": "\"\""}, {"name": "envs", "description": "", "default": "{}"}, {"name": "chdir", "description": "", "default": "\"\""}, {"name": "command", "description": "", "default": ""}]}, "infrablocks/encrypted-bucket/aws": {"name": "encrypted-bucket", "url": "https://registry.terraform.io/modules/infrablocks/encrypted-bucket/aws", "provider": "aws", "downloads": 2583, "description": "A terraform module for creating an encrypted bucket in S3", "source": "infrablocks/encrypted-bucket/aws", "args": [{"name": "bucket_name", "description": "The name to use for the encrypted S3 bucket.", "default": ""}, {"name": "bucket_policy_template", "description": "A template for the policy to apply to the bucket.", "default": "\"\""}, {"name": "tags", "description": "A map of additional tags to set on the bucket.", "default": "{}"}]}, "coreos/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/coreos/kubernetes/aws", "provider": "aws", "downloads": 2063, "description": "Install a Kubernetes cluster the CoreOS Tectonic Way: HA, self-hosted, RBAC, etcd Operator, and more", "source": "coreos/kubernetes/aws", "args": [{"name": "tectonic_config_version", "description": "(internal) This declares the version of the global configuration variables.\nIt has no impact on generated assets but declares the version contract of the configuration.\n", "default": "\"1.0\""}, {"name": "tectonic_image_re", "description": "(internal) Regular expression used to extract repo and tag components\n", "default": "\"/^([^/]+/[^/]+/[^/]+):(.*)$/\""}, {"name": "tectonic_container_images", "description": "(internal) Container images to use", "default": "{\n  \"addon_resizer\": \"gcr.io/google_containers/addon-resizer:2.1\",\n  \"awscli\": \"quay.io/coreos/awscli:025a357f05242fdad6a81e8a6b520098aa65a600\",\n  \"bootkube\": \"quay.io/coreos/bootkube:v0.8.1\",\n  \"calico\": \"quay.io/calico/node:v2.6.1\",\n  \"calico_cni\": \"quay.io/calico/cni:v1.11.0\",\n  \"console\": \"quay.io/coreos/tectonic-console:v5.0.4\",\n  \"error_server\": \"quay.io/coreos/tectonic-error-server:1.1\",\n  \"etcd\": \"quay.io/coreos/etcd:v3.1.8\",\n  \"etcd_operator\": \"quay.io/coreos/etcd-operator:v0.5.0\",\n  \"flannel\": \"quay.io/coreos/flannel:v0.8.0-amd64\",\n  \"flannel_cni\": \"quay.io/coreos/flannel-cni:v0.2.0\",\n  \"gcloudsdk\": \"google/cloud-sdk:178.0.0-alpine\",\n  \"heapster\": \"gcr.io/google_containers/heapster:v1.4.1\",\n  \"hyperkube\": \"quay.io/coreos/hyperkube:v1.8.9_coreos.1\",\n  \"identity\": \"quay.io/coreos/dex:v2.8.1\",\n  \"ingress_controller\": \"quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.9.0-beta.17\",\n  \"kenc\": \"quay.io/coreos/kenc:0.0.2\",\n  \"kube_version\": \"quay.io/coreos/kube-version:0.1.0\",\n  \"kube_version_operator\": \"quay.io/coreos/kube-version-operator:v1.8.9-kvo.2\",\n  \"kubedns\": \"gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5\",\n  \"kubedns_sidecar\": \"gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5\",\n  \"kubednsmasq\": \"gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5\",\n  \"node_agent\": \"quay.io/coreos/node-agent:cd69b4a0f65b0d3a3b30edfce3bb184fd2a22c26\",\n  \"pod_checkpointer\": \"quay.io/coreos/pod-checkpointer:e22cc0e3714378de92f45326474874eb602ca0ac\",\n  \"stats_emitter\": \"quay.io/coreos/tectonic-stats:6e882361357fe4b773adbf279cddf48cb50164c1\",\n  \"stats_extender\": \"quay.io/coreos/tectonic-stats-extender:487b3da4e175da96dabfb44fba65cdb8b823db2e\",\n  \"tectonic_alm_operator\": \"quay.io/coreos/tectonic-alm-operator:v0.3.0\",\n  \"tectonic_channel_operator\": \"quay.io/coreos/tectonic-channel-operator:0.6.2\",\n  \"tectonic_cluo_operator\": \"quay.io/coreos/tectonic-cluo-operator:v0.3.1\",\n  \"tectonic_etcd_operator\": \"quay.io/coreos/tectonic-etcd-operator:v0.0.2\",\n  \"tectonic_prometheus_operator\": \"quay.io/coreos/tectonic-prometheus-operator:v1.9.5\",\n  \"tectonic_torcx\": \"quay.io/coreos/tectonic-torcx:v0.2.0\"\n}"}, {"name": "tectonic_container_base_images", "description": "(internal) Base images of the components to use", "default": "{\n  \"addon_resizer\": \"quay.io/coreos/addon-resizer\",\n  \"alertmanager\": \"quay.io/prometheus/alertmanager\",\n  \"config_reload\": \"quay.io/coreos/configmap-reload\",\n  \"grafana\": \"quay.io/coreos/monitoring-grafana\",\n  \"grafana_watcher\": \"quay.io/coreos/grafana-watcher\",\n  \"kube_rbac_proxy\": \"quay.io/coreos/kube-rbac-proxy\",\n  \"kube_state_metrics\": \"quay.io/coreos/kube-state-metrics\",\n  \"node_exporter\": \"quay.io/prometheus/node-exporter\",\n  \"prometheus\": \"quay.io/prometheus/prometheus\",\n  \"prometheus_config_reload\": \"quay.io/coreos/prometheus-config-reloader\",\n  \"prometheus_operator\": \"quay.io/coreos/prometheus-operator\",\n  \"tectonic_monitoring_auth\": \"quay.io/coreos/tectonic-monitoring-auth\"\n}"}, {"name": "tectonic_versions", "description": "(internal) Versions of the components to use", "default": "{\n  \"alm\": \"0.3.0\",\n  \"cluo\": \"0.3.1\",\n  \"etcd\": \"3.1.8\",\n  \"kubernetes\": \"1.8.9+tectonic.1\",\n  \"monitoring\": \"1.9.5\",\n  \"tectonic\": \"1.8.9-tectonic.1\",\n  \"tectonic-etcd\": \"0.0.1\"\n}"}, {"name": "tectonic_service_cidr", "description": "(optional) This declares the IP range to assign Kubernetes service cluster IPs in CIDR notation.\nThe maximum size of this IP range is /12\n", "default": "\"10.3.0.0/16\""}, {"name": "tectonic_cluster_cidr", "description": "(optional) This declares the IP range to assign Kubernetes pod IPs in CIDR notation.", "default": "\"10.2.0.0/16\""}, {"name": "tectonic_master_count", "description": "The number of master nodes to be created.\nThis applies only to cloud platforms.\n", "default": "\"1\""}, {"name": "tectonic_worker_count", "description": "The number of worker nodes to be created.\nThis applies only to cloud platforms.\n", "default": "\"3\""}, {"name": "tectonic_etcd_count", "description": "The number of etcd nodes to be created.\nIf set to zero, the count of etcd nodes will be determined automatically.\n\nNote: This is not supported on bare metal.\n", "default": "\"0\""}, {"name": "tectonic_etcd_servers", "description": "(optional) List of external etcd v3 servers to connect with (hostnames/IPs only).\nNeeds to be set if using an external etcd cluster.\nNote: If this variable is defined, the installer will not create self-signed certs.\nTo provide a CA certificate to trust the etcd servers, set \"tectonic_etcd_ca_cert_path\".\n\nExample: `[\"etcd1\", \"etcd2\", \"etcd3\"]`\n", "default": "[]"}, {"name": "tectonic_etcd_tls_enabled", "description": "(optional) If set to `true`, all etcd endpoints will be configured to use the \"https\" scheme.\n\nNote: If `tectonic_experimental` is set to `true` this variable has no effect, because the experimental self-hosted etcd always uses TLS.\n", "default": "true"}, {"name": "tectonic_etcd_ca_cert_path", "description": "(optional) The path of the file containing the CA certificate for TLS communication with etcd.\n\nNote: This works only when used in conjunction with an external etcd cluster.\nIf set, the variable `tectonic_etcd_servers` must also be set.\n", "default": "\"/dev/null\""}, {"name": "tectonic_etcd_client_cert_path", "description": "(optional) The path of the file containing the client certificate for TLS communication with etcd.\n\nNote: This works only when used in conjunction with an external etcd cluster.\nIf set, the variables `tectonic_etcd_servers`, `tectonic_etcd_ca_cert_path`, and `tectonic_etcd_client_key_path` must also be set.\n", "default": "\"/dev/null\""}, {"name": "tectonic_etcd_client_key_path", "description": "(optional) The path of the file containing the client key for TLS communication with etcd.\n\nNote: This works only when used in conjunction with an external etcd cluster.\nIf set, the variables `tectonic_etcd_servers`, `tectonic_etcd_ca_cert_path`, and `tectonic_etcd_client_cert_path` must also be set.\n", "default": "\"/dev/null\""}, {"name": "tectonic_base_domain", "description": "The base DNS domain of the cluster. It must NOT contain a trailing period. Some\nDNS providers will automatically add this if necessary.\n\nExample: `openstack.dev.coreos.systems`.\n\nNote: This field MUST be set manually prior to creating the cluster.\nThis applies only to cloud platforms.\n\n[Azure-specific NOTE]\nTo use Azure-provided DNS, `tectonic_base_domain` should be set to `\"\"`\nIf using DNS records, ensure that `tectonic_base_domain` is set to a properly configured external DNS zone.\nInstructions for configuring delegated domains for Azure DNS can be found here: https://docs.microsoft.com/en-us/azure/dns/dns-delegate-domain-azure-dns\n", "default": ""}, {"name": "tectonic_cluster_name", "description": "The name of the cluster.\nIf used in a cloud-environment, this will be prepended to `tectonic_base_domain` resulting in the URL to the Tectonic console.\n\nNote: This field MUST be set manually prior to creating the cluster.\nWarning: Special characters in the name like '.' may cause errors on OpenStack platforms due to resource name constraints.\n", "default": ""}, {"name": "tectonic_pull_secret_path", "description": "The path the pull secret file in JSON format.\nThis is known to be a \"Docker pull secret\" as produced by the docker login [1] command.\nA sample JSON content is shown in [2].\nYou can download the pull secret from your Account overview page at [3].\n\n[1] https://docs.docker.com/engine/reference/commandline/login/\n\n[2] https://coreos.com/os/docs/latest/registry-authentication.html#manual-registry-auth-setup\n\n[3] https://account.coreos.com/overview\n\nNote: This field MUST be set manually prior to creating the cluster unless `tectonic_vanilla_k8s` is set to `true`.\n", "default": "\"\""}, {"name": "tectonic_license_path", "description": "The path to the tectonic licence file.\nYou can download the Tectonic license file from your Account overview page at [1].\n\n[1] https://account.coreos.com/overview\n\nNote: This field MUST be set manually prior to creating the cluster unless `tectonic_vanilla_k8s` is set to `true`.\n", "default": "\"\""}, {"name": "tectonic_container_linux_channel", "description": "(optional) The Container Linux update channel.\n\nExamples: `stable`, `beta`, `alpha`\n", "default": "\"stable\""}, {"name": "tectonic_container_linux_version", "description": "The Container Linux version to use. Set to `latest` to select the latest available version for the selected update channel.\n\nExamples: `latest`, `1465.6.0`\n", "default": "\"latest\""}, {"name": "tectonic_update_server", "description": "(internal) The URL of the Tectonic Omaha update server", "default": "\"https://tectonic.update.core-os.net\""}, {"name": "tectonic_update_channel", "description": "(internal) The Tectonic Omaha update channel", "default": "\"tectonic-1.8-production\""}, {"name": "tectonic_update_app_id", "description": "(internal) The Tectonic Omaha update App ID", "default": "\"6bc7b986-4654-4a0f-94b3-84ce6feb1db4\""}, {"name": "tectonic_admin_email", "description": "(internal) The e-mail address used to:\n1. login as the admin user to the Tectonic Console.\n2. generate DNS zones for some providers.\n\nNote: This field MUST be in all lower-case e-mail address format and set manually prior to creating the cluster.\n", "default": ""}, {"name": "tectonic_admin_password", "description": "(internal) The admin user password to login to the Tectonic Console.\n\nNote: This field MUST be set manually prior to creating the cluster. Backslashes and double quotes must\nalso be escaped.\n", "default": ""}, {"name": "tectonic_ca_cert", "description": "(optional) The content of the PEM-encoded CA certificate, used to generate Tectonic Console's server certificate.\nIf left blank, a CA certificate will be automatically generated.\n", "default": "\"\""}, {"name": "tectonic_ca_key", "description": "(optional) The content of the PEM-encoded CA key, used to generate Tectonic Console's server certificate.\nThis field is mandatory if `tectonic_ca_cert` is set.\n", "default": "\"\""}, {"name": "tectonic_ca_key_alg", "description": "(optional) The algorithm used to generate tectonic_ca_key.\nThe default value is currently recommended.\nThis field is mandatory if `tectonic_ca_cert` is set.\n", "default": "\"RSA\""}, {"name": "tectonic_tls_validity_period", "description": "Validity period of the self-signed certificates (in hours).\nDefault is 3 years.\nThis setting is ignored if user provided certificates are used.\n", "default": "\"26280\""}, {"name": "tectonic_vanilla_k8s", "description": "If set to true, a vanilla Kubernetes cluster will be deployed, omitting any Tectonic assets.\n", "default": "false"}, {"name": "tectonic_stats_url", "description": "(internal) The Tectonic statistics collection URL to which to report.", "default": "\"https://stats-collector.tectonic.com\""}, {"name": "tectonic_ddns_server", "description": "(optional) This only applies if you use the modules/dns/ddns module.\n\nSpecifies the RFC2136 Dynamic DNS server IP/host to register IP addresses to.\n", "default": "\"\""}, {"name": "tectonic_ddns_key_name", "description": "(optional) This only applies if you use the modules/dns/ddns module.\n\nSpecifies the RFC2136 Dynamic DNS server key name.\n", "default": "\"\""}, {"name": "tectonic_ddns_key_algorithm", "description": "(optional) This only applies if you use the modules/dns/ddns module.\n\nSpecifies the RFC2136 Dynamic DNS server key algorithm.\n", "default": "\"\""}, {"name": "tectonic_ddns_key_secret", "description": "(optional) This only applies if you use the modules/dns/ddns module.\n\nSpecifies the RFC2136 Dynamic DNS server key secret.\n", "default": "\"\""}, {"name": "tectonic_networking", "description": "(optional) Configures the network to be used in Tectonic. One of the following values can be used:\n\n- \"flannel\": enables overlay networking only. This is implemented by flannel using VXLAN.\n\n- \"canal\": [ALPHA] enables overlay networking including network policy. Overlay is implemented by flannel using VXLAN. Network policy is implemented by Calico.\n\n- \"calico\": [ALPHA] enables BGP based networking. Routing and network policy is implemented by Calico. Note this has been tested on baremetal installations only.\n", "default": "\"flannel\""}, {"name": "tectonic_self_hosted_etcd", "description": "(internal) [ALPHA] If set to one of the following values, self-hosted etcd is deployed:\n\n- \"enabled\": Deploys a self-hosted etcd cluster.\n\n- \"pv_backup\": Deploys a self-hosted etcd cluster including backups to Persistence Volumes.\n`tectonic_etcd_backup_size` and `tectonic_etcd_backup_storage_class` must be configured when using this setting.\n", "default": "\"\""}, {"name": "tectonic_etcd_backup_size", "description": "(optional) The size in MB of the PersistentVolume used for handling etcd backups.", "default": "\"512\""}, {"name": "tectonic_etcd_backup_storage_class", "description": "(optional) The name of an existing Kubernetes StorageClass that will be used for handling etcd backups.", "default": "\"\""}, {"name": "tectonic_bootstrap_upgrade_cl", "description": "(internal) Whether to trigger a ContainerLinux upgrade on node bootstrap.", "default": "\"true\""}, {"name": "tectonic_kubelet_debug_config", "description": "(internal) debug flags for the kubelet (used in CI only)", "default": "\"\""}, {"name": "tectonic_custom_ca_pem_list", "description": "(optional) A list of PEM encoded CA files that will be installed in /etc/ssl/certs on etcd, master, and worker nodes.\n", "default": "[]"}, {"name": "tectonic_iscsi_enabled", "description": "(optional) Start iscsid.service to enable iscsi volume attachment.", "default": "\"false\""}, {"name": "tectonic_http_proxy_address", "description": "(optional) HTTP proxy address.\n\nExample: `http://myproxy.example.com`\n", "default": "\"\""}, {"name": "tectonic_https_proxy_address", "description": "(optional) HTTPS proxy address.\n\nExample: `http://myproxy.example.com`\n", "default": "\"\""}, {"name": "tectonic_no_proxy", "description": "(optional) List of local endpoints that will not use HTTP proxy.\n\nExample: `[\"127.0.0.1\",\"localhost\",\".example.com\",\"10.3.0.1\"]`\n", "default": "[]"}, {"name": "tectonic_ntp_servers", "description": "(optional) If left blank, the default Container Linux NTP servers will be used.\nA list of NTP servers to be used for time synchronization on the cluster nodes.\n", "default": "[]"}, {"name": "tectonic_nfs_config_file", "description": "(optional) the path to an NFS configuration file to be placed in /etc/conf.d/nfs\nfile on the CL nodes.\n", "default": "\"\""}, {"name": "tectonic_proxy_exclusive_units", "description": "(optional) When set to true, it restricts the application of proxy settings to processes started through systemd units.\nGlobal proxy settings will not be affected in this case.\nWhen set to false, the proxy settings will apply globally, including to all processes lauched by users.\n", "default": "false"}, {"name": "tectonic_aws_config_version", "description": "(internal) This declares the version of the AWS configuration variables.\nIt has no impact on generated assets but declares the version contract of the configuration.\n", "default": "\"1.0\""}, {"name": "tectonic_aws_profile", "description": "(optional) This declares the AWS credentials profile to use.\n", "default": "\"default\""}, {"name": "tectonic_aws_ssh_key", "description": "Name of an SSH key located within the AWS region. Example: coreos-user.", "default": ""}, {"name": "tectonic_aws_master_ec2_type", "description": "Instance size for the master node(s). Example: `t2.medium`.", "default": "\"t2.medium\""}, {"name": "tectonic_aws_worker_ec2_type", "description": "Instance size for the worker node(s). Example: `t2.medium`.", "default": "\"t2.medium\""}, {"name": "tectonic_aws_etcd_ec2_type", "description": "  Instance size for the etcd node(s). Example: `t2.medium`. Read the [etcd recommended hardware](https://coreos.com/etcd/docs/latest/op-guide/hardware.html) guide for best performance\n  ", "default": "\"t2.medium\""}, {"name": "tectonic_aws_ec2_ami_override", "description": "(optional) AMI override for all nodes. Example: `ami-foobar123`.", "default": "\"\""}, {"name": "tectonic_aws_etcd_extra_sg_ids", "description": "(optional) List of additional security group IDs for etcd nodes.\n\nExample: `[\"sg-51530134\", \"sg-b253d7cc\"]`\n", "default": "[]"}, {"name": "tectonic_aws_assets_s3_bucket_name", "description": "(optional) Unique name under which the Amazon S3 bucket will be created. Bucket name must start with a lower case name and is limited to 63 characters.\nThe Tectonic Installer uses the bucket to store tectonic assets and kubeconfig.\nIf name is not provided the installer will construct the name using \"tectonic_cluster_name\", current AWS region and \"tectonic_base_domain\"\n", "default": "\"\""}, {"name": "tectonic_aws_master_extra_sg_ids", "description": "(optional) List of additional security group IDs for master nodes.\n\nExample: `[\"sg-51530134\", \"sg-b253d7cc\"]`\n", "default": "[]"}, {"name": "tectonic_aws_worker_extra_sg_ids", "description": "(optional) List of additional security group IDs for worker nodes.\n\nExample: `[\"sg-51530134\", \"sg-b253d7cc\"]`\n", "default": "[]"}, {"name": "tectonic_aws_vpc_cidr_block", "description": "Block of IP addresses used by the VPC.\nThis should not overlap with any other networks, such as a private datacenter connected via Direct Connect.\n", "default": "\"10.0.0.0/16\""}, {"name": "tectonic_aws_external_vpc_id", "description": "(optional) ID of an existing VPC to launch nodes into.\nIf unset a new VPC is created.\n\nExample: `vpc-123456`\n", "default": "\"\""}, {"name": "tectonic_aws_private_endpoints", "description": "(optional) If set to true, create private-facing ingress resources (ELB, A-records).\nIf set to false, no private-facing ingress resources will be provisioned and all DNS records will be created in the public Route53 zone.\n", "default": "true"}, {"name": "tectonic_aws_public_endpoints", "description": "(optional) If set to true, create public-facing ingress resources (ELB, A-records).\nIf set to false, no public-facing ingress resources will be created.\n", "default": "true"}, {"name": "tectonic_aws_external_private_zone", "description": "(optional) If set, the given Route53 zone ID will be used as the internal (private) zone.\nThis zone will be used to create etcd DNS records as well as internal API and internal Ingress records.\nIf set, no additional private zone will be created.\n\nExample: `\"Z1ILINNUJGTAO1\"`\n", "default": "\"\""}, {"name": "tectonic_aws_external_master_subnet_ids", "description": "(optional) List of subnet IDs within an existing VPC to deploy master nodes into.\nRequired to use an existing VPC and the list must match the AZ count.\n\nExample: `[\"subnet-111111\", \"subnet-222222\", \"subnet-333333\"]`\n", "default": "[]"}, {"name": "tectonic_aws_external_worker_subnet_ids", "description": "(optional) List of subnet IDs within an existing VPC to deploy worker nodes into.\nRequired to use an existing VPC and the list must match the AZ count.\n\nExample: `[\"subnet-111111\", \"subnet-222222\", \"subnet-333333\"]`\n", "default": "[]"}, {"name": "tectonic_aws_extra_tags", "description": "(optional) Extra AWS tags to be applied to created resources.", "default": "{}"}, {"name": "tectonic_autoscaling_group_extra_tags", "description": "(optional) Extra AWS tags to be applied to created autoscaling group resources.\nThis is a list of maps having the keys `key`, `value` and `propagate_at_launch`.\n\nExample: `[ { key = \"foo\", value = \"bar\", propagate_at_launch = true } ]`\n", "default": "[]"}, {"name": "tectonic_dns_name", "description": "(optional) DNS prefix used to construct the console and API server endpoints.", "default": "\"\""}, {"name": "tectonic_aws_etcd_root_volume_type", "description": "The type of volume for the root block device of etcd nodes.", "default": "\"gp2\""}, {"name": "tectonic_aws_etcd_root_volume_size", "description": "The size of the volume in gigabytes for the root block device of etcd nodes.", "default": "\"30\""}, {"name": "tectonic_aws_etcd_root_volume_iops", "description": "The amount of provisioned IOPS for the root block device of etcd nodes.\nIgnored if the volume type is not io1.\n", "default": "\"100\""}, {"name": "tectonic_aws_master_root_volume_type", "description": "The type of volume for the root block device of master nodes.", "default": "\"gp2\""}, {"name": "tectonic_aws_master_root_volume_size", "description": "The size of the volume in gigabytes for the root block device of master nodes.", "default": "\"30\""}, {"name": "tectonic_aws_master_root_volume_iops", "description": "The amount of provisioned IOPS for the root block device of master nodes.\nIgnored if the volume type is not io1.\n", "default": "\"100\""}, {"name": "tectonic_aws_worker_root_volume_type", "description": "The type of volume for the root block device of worker nodes.", "default": "\"gp2\""}, {"name": "tectonic_aws_worker_root_volume_size", "description": "The size of the volume in gigabytes for the root block device of worker nodes.", "default": "\"30\""}, {"name": "tectonic_aws_worker_root_volume_iops", "description": "The amount of provisioned IOPS for the root block device of worker nodes.\nIgnored if the volume type is not io1.\n", "default": "\"100\""}, {"name": "tectonic_aws_master_custom_subnets", "description": "(optional) This configures master availability zones and their corresponding subnet CIDRs directly.\n\nExample:\n`{ eu-west-1a = \"10.0.0.0/20\", eu-west-1b = \"10.0.16.0/20\" }`\n", "default": "{}"}, {"name": "tectonic_aws_worker_custom_subnets", "description": "(optional) This configures worker availability zones and their corresponding subnet CIDRs directly.\n\nExample: `{ eu-west-1a = \"10.0.64.0/20\", eu-west-1b = \"10.0.80.0/20\" }`\n", "default": "{}"}, {"name": "tectonic_aws_region", "description": "The target AWS region for the cluster.", "default": "\"eu-west-1\""}, {"name": "tectonic_aws_master_iam_role_name", "description": "(optional) Name of IAM role to use for the instance profiles of master nodes.\nThe name is also the last part of a role's ARN.\n\nExample:\n * Role ARN  = arn:aws:iam::123456789012:role/tectonic-installer\n * Role Name = tectonic-installer\n", "default": "\"\""}, {"name": "tectonic_aws_worker_iam_role_name", "description": "(optional) Name of IAM role to use for the instance profiles of worker nodes.\nThe name is also the last part of a role's ARN.\n\nExample:\n * Role ARN  = arn:aws:iam::123456789012:role/tectonic-installer\n * Role Name = tectonic-installer\n", "default": "\"\""}, {"name": "tectonic_aws_etcd_iam_role_name", "description": "(optional) Name of IAM role to use for the instance profiles of etcd nodes.\nThe name is also the last part of a role's ARN.\n\nExample:\n * Role ARN  = arn:aws:iam::123456789012:role/tectonic-installer\n * Role Name = tectonic-installer\n", "default": "\"\""}, {"name": "tectonic_aws_worker_load_balancers", "description": "(optional) List of ELBs to attach all worker instances to.\nThis is useful for exposing NodePort services via load-balancers managed separately from the cluster.\n\nExample:\n * `[\"ingress-nginx\"]`\n", "default": "[]"}]}, "hashicorp/vault/aws": {"name": "vault", "url": "https://registry.terraform.io/modules/hashicorp/vault/aws", "provider": "aws", "downloads": 1971, "description": "A Terraform Module for how to run Vault on AWS using Terraform and Packer", "source": "hashicorp/vault/aws", "args": [{"name": "vault_domain_name", "description": "The domain name to use in the DNS A record for the Vault ELB (e.g. vault.example.com). Make sure that a) this is a domain within the var.hosted_zone_domain_name hosted zone and b) this is the same domain name you used in the TLS certificates for Vault. Only used if var.create_dns_entry is true.", "default": ""}, {"name": "use_default_vpc", "description": "Whether to use the default VPC - NOT recommended for production! - should more likely change this to false and use the vpc_tags to find your vpc", "default": "true"}, {"name": "vault_cluster_name", "description": "What to name the Vault server cluster and all of its associated resources", "default": "\"vault-example\""}, {"name": "consul_cluster_size", "description": "The number of Consul server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "consul_cluster_tag_key", "description": "The tag the Consul EC2 Instances will look for to automatically discover each other and form a cluster.", "default": "\"consul-servers\""}, {"name": "create_dns_entry", "description": "If set to true, this module will create a Route 53 DNS A record for the ELB in the var.hosted_zone_id hosted zone with the domain name in var.domain_name.", "default": ""}, {"name": "hosted_zone_domain_name", "description": "The domain name of the Route 53 Hosted Zone in which to add a DNS entry for Vault (e.g. example.com). Only used if var.create_dns_entry is true.", "default": ""}, {"name": "ssh_key_name", "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.", "default": ""}, {"name": "subnet_tags", "description": "Tags used to find subnets for vault and consul servers", "default": "{}"}, {"name": "vault_instance_type", "description": "The type of EC2 Instance to run in the Vault ASG", "default": "\"t2.micro\""}, {"name": "vault_cluster_size", "description": "The number of Vault server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "ami_id", "description": "The ID of the AMI to run in the cluster. This should be an AMI built from the Packer template under examples/vault-consul-ami/vault-consul.json. If no AMI is specified, the template will 'just work' by using the example public AMIs. WARNING! Do not use the example AMIs in a production setting!", "default": "\"\""}, {"name": "vpc_tags", "description": "Tags used to find a vpc for building resources in", "default": "{}"}, {"name": "consul_cluster_name", "description": "What to name the Consul server cluster and all of its associated resources", "default": "\"consul-example\""}, {"name": "consul_instance_type", "description": "The type of EC2 Instance to run in the Consul ASG", "default": "\"t2.micro\""}]}, "riboseinc/codecommit-sqs/aws": {"name": "codecommit-sqs", "url": "https://registry.terraform.io/modules/riboseinc/codecommit-sqs/aws", "provider": "aws", "downloads": 1962, "description": "Terraform module for creating an AWS CodeCommit repo with Trigger for SQS and Queue that works with Jenkins CodeCommit Trigger Plugin", "source": "riboseinc/codecommit-sqs/aws", "args": [{"name": "reponame", "description": "", "default": ""}, {"name": "aws-account-id", "description": "", "default": ""}, {"name": "email-sns-arn", "description": "", "default": ""}, {"name": "sqs-arn", "description": "", "default": ""}, {"name": "sqs-id", "description": "", "default": ""}, {"name": "topic-prefix", "description": "", "default": "\"codecommit-\""}, {"name": "topic-suffix", "description": "", "default": "\"-topic\""}]}, "claranet/aurora/aws": {"name": "aurora", "url": "https://registry.terraform.io/modules/claranet/aurora/aws", "provider": "aws", "downloads": 1782, "description": "Terraform module for creating and managing Amazon Aurora clusters", "source": "claranet/aurora/aws", "args": [{"name": "name", "description": "Name given to DB subnet group", "default": ""}, {"name": "subnets", "description": "List of subnet IDs to use", "default": ""}, {"name": "envname", "description": "Environment name (eg,test, stage or prod)", "default": ""}, {"name": "envtype", "description": "Environment type (eg,prod or nonprod)", "default": ""}, {"name": "identifier_prefix", "description": "Prefix for cluster and instance identifier", "default": "\"\""}, {"name": "azs", "description": "List of AZs to use", "default": ""}, {"name": "replica_count", "description": "Number of reader nodes to create.  If `replica_scale_enable` is `true`, the value of `replica_scale_min` is used instead.", "default": "\"0\""}, {"name": "security_groups", "description": "VPC Security Group IDs", "default": ""}, {"name": "instance_type", "description": "Instance type to use", "default": "\"db.t2.small\""}, {"name": "publicly_accessible", "description": "Whether the DB should have a public IP address", "default": "\"false\""}, {"name": "username", "description": "Master DB username", "default": "\"root\""}, {"name": "password", "description": "Master DB password", "default": ""}, {"name": "final_snapshot_identifier", "description": "The name to use when creating a final snapshot on cluster destroy, appends a random 8 digits to name to ensure it's unique too.", "default": "\"final\""}, {"name": "skip_final_snapshot", "description": "Should a final snapshot be created on cluster destroy", "default": "\"false\""}, {"name": "backup_retention_period", "description": "How long to keep backups for (in days)", "default": "\"7\""}, {"name": "preferred_backup_window", "description": "When to perform DB backups", "default": "\"02:00-03:00\""}, {"name": "preferred_maintenance_window", "description": "When to perform DB maintenance", "default": "\"sun:05:00-sun:06:00\""}, {"name": "port", "description": "The port on which to accept connections", "default": "\"3306\""}, {"name": "apply_immediately", "description": "Determines whether or not any DB modifications are applied immediately, or during the maintenance window", "default": "\"false\""}, {"name": "monitoring_interval", "description": "The interval (seconds) between points when Enhanced Monitoring metrics are collected", "default": "\"0\""}, {"name": "auto_minor_version_upgrade", "description": "Determines whether minor engine upgrades will be performed automatically in the maintenance window", "default": "\"true\""}, {"name": "db_parameter_group_name", "description": "The name of a DB parameter group to use", "default": "\"default.aurora5.6\""}, {"name": "db_cluster_parameter_group_name", "description": "The name of a DB Cluster parameter group to use", "default": "\"default.aurora5.6\""}, {"name": "snapshot_identifier", "description": "DB snapshot to create this database from", "default": "\"\""}, {"name": "storage_encrypted", "description": "Specifies whether the underlying storage layer should be encrypted", "default": "\"true\""}, {"name": "cw_alarms", "description": "Whether to enable CloudWatch alarms - requires `cw_sns_topic` is specified", "default": "\"0\""}, {"name": "cw_sns_topic", "description": "An SNS topic to publish CloudWatch alarms to", "default": "\"false\""}, {"name": "cw_max_conns", "description": "Connection count beyond which to trigger a CloudWatch alarm", "default": "\"500\""}, {"name": "cw_max_cpu", "description": "CPU threshold above which to alarm", "default": "\"85\""}, {"name": "cw_max_replica_lag", "description": "Maximum Aurora replica lag in milliseconds above which to alarm", "default": "\"2000\""}, {"name": "engine", "description": "Aurora database engine type, currently aurora, aurora-mysql or aurora-postgresql", "default": "\"aurora\""}, {"name": "engine-version", "description": "Aurora database engine version.", "default": "\"5.6.10a\""}, {"name": "replica_scale_enabled", "description": "Whether to enable autoscaling for RDS Aurora (MySQL) read replicas", "default": "\"0\""}, {"name": "replica_scale_max", "description": "Maximum number of replicas to allow scaling for", "default": "\"0\""}, {"name": "replica_scale_min", "description": "Maximum number of replicas to allow scaling for", "default": "\"2\""}, {"name": "replica_scale_cpu", "description": "CPU usage to trigger autoscaling at", "default": "\"70\""}, {"name": "replica_scale_in_cooldown", "description": "Cooldown in seconds before allowing further scaling operations after a scale in", "default": "\"300\""}, {"name": "replica_scale_out_cooldown", "description": "Cooldown in seconds before allowing further scaling operations after a scale out", "default": "\"300\""}]}, "devops-workflow/lb/aws": {"name": "lb", "url": "https://registry.terraform.io/modules/devops-workflow/lb/aws", "provider": "aws", "downloads": 1780, "description": "A Terraform module to create an AWS new style Load Balancer (ALB/NLB) and associated resources.", "source": "devops-workflow/lb/aws", "args": [{"name": "owner", "description": "TAG: Owner of the service", "default": "\"UNDEF-LB\""}, {"name": "namespace-org", "description": "Prefix name with the organization. If true, format is: <org>-<env namespaced name>. If both env and org namespaces are used, format will be <org>-<env>-<name>", "default": "false"}, {"name": "idle_timeout", "description": "The time in seconds that the connection is allowed to be idle", "default": "\"60\""}, {"name": "internal", "description": "Boolean determining if the LB is internal or externally facing.", "default": "true"}, {"name": "backend_port", "description": "The port the service on the EC2 instances listen on.", "default": "80"}, {"name": "health_check_healthy_threshold", "description": "Number of consecutive positive health checks before a backend instance is considered healthy.", "default": "3"}, {"name": "health_check_path", "description": "The URL the ELB should use for health checks. e.g. /health", "default": "\"/\""}, {"name": "subnets", "description": "A list of subnets to associate with the LB. e.g. ['subnet-1a2b3c4d','subnet-1a2b3c4e','subnet-1a2b3c4f']", "default": ""}, {"name": "instance_http_ports", "description": "Backend HTTP instance (target group) ports", "default": "\"\""}, {"name": "security_groups", "description": "The security groups with which we associate the LB. e.g. [\"sg-edcd9784\",\"sg-edcd9785\"]", "default": "[]"}, {"name": "backend_protocol", "description": "The protocol the backend service speaks. Options: HTTP, HTTPS, TCP, SSL (secure tcp).", "default": "\"HTTP\""}, {"name": "lb_tcp_ports", "description": "Frontend TCP listener ports", "default": "\"\""}, {"name": "target_type", "description": "Type for targets for target group. Can be: instance or ip", "default": "\"instance\""}, {"name": "health_check_unhealthy_threshold", "description": "Number of consecutive positive health checks before a backend instance is considered unhealthy.", "default": "3"}, {"name": "enable_cross_zone_load_balancing", "description": "Enable cross-zone load balancing on NLB", "default": "false"}, {"name": "lb_http_ports", "description": "Frontend HTTP listener ports", "default": "\"\""}, {"name": "vpc_id", "description": "VPC id where the LB and other resources will be deployed.", "default": ""}, {"name": "enable_logging", "description": "Enable the LB to write log entries to S3.", "default": "false"}, {"name": "team", "description": "TAG: Department/team of people responsible for service", "default": "\"UNDEF-LB\""}, {"name": "attributes", "description": "Suffix name with additional attributes (policy, role, etc.)", "default": "[]"}, {"name": "name", "description": "Base name for resource", "default": ""}, {"name": "tags", "description": "A map of additional tags", "default": "{}"}, {"name": "lb_https_ports", "description": "Frontend HTTPS listener ports", "default": "\"\""}, {"name": "certificate_additional_names", "description": "List of additional names of SSL Certificates to look up in ACM and use", "default": "[]"}, {"name": "enable_http2", "description": "Enable HTTP/2 on ALB", "default": "true"}, {"name": "namespace-env", "description": "Prefix name with the environment. If true, format is: <env>-<name>", "default": "true"}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "enable_deletion_protection", "description": "Enable deletion protection. Prevent LB from being deleted", "default": "false"}, {"name": "environment", "description": "Environment (ex: `dev`, `qa`, `stage`, `prod`). (Second or top level namespace. Depending on namespacing options)", "default": ""}, {"name": "health_check_protocol", "description": "The protocol used by the health check.", "default": "\"HTTP\""}, {"name": "security_policy", "description": "The security policy if using HTTPS externally on the LB. See: https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/elb-security-policy-table.html", "default": "\"ELBSecurityPolicy-2016-08\""}, {"name": "log_location_prefix", "description": "S3 prefix within the log_bucket_name under which logs are stored.", "default": "\"\""}, {"name": "cookie_duration", "description": "If load balancer connection stickiness is desired, set this to the duration in seconds that cookie should be valid (e.g. 300). Otherwise, if no stickiness is desired, leave the default.", "default": "0"}, {"name": "product", "description": "TAG: Company/business product", "default": "\"UNDEF-LB\""}, {"name": "service", "description": "TAG: Application (microservice) name", "default": "\"UNDEF-LB\""}, {"name": "certificate_name", "description": "The name of the default SSL Certificate to look up in ACM and use", "default": "\"\""}, {"name": "force_destroy_log_bucket", "description": "If set to true and if the log bucket already exists, it will be destroyed and recreated.", "default": "false"}, {"name": "component", "description": "TAG: Underlying, dedicated piece of service (Cache, DB, ...)", "default": "\"UNDEF-LB\""}, {"name": "bucket_policy", "description": "An S3 bucket policy to apply to the log bucket. If not provided, a minimal policy will be generated from other variables.", "default": "\"\""}, {"name": "create_log_bucket", "description": "Create the S3 bucket (named with the log_bucket_name var) and attach a policy to allow LB logging.", "default": "false"}, {"name": "health_check_port", "description": "The port used by the health check if different from the traffic-port.", "default": "\"traffic-port\""}, {"name": "organization", "description": "Organization name (Top level namespace)", "default": "\"\""}, {"name": "health_check_timeout", "description": "Seconds to leave a health check waiting before terminating it and calling the check unhealthy.", "default": "5"}, {"name": "instance_https_ports", "description": "Backend HTTPS instance (target group) ports", "default": "\"\""}, {"name": "health_check_matcher", "description": "The HTTP codes that are a success when checking TG health.", "default": "\"200-299\""}, {"name": "lb_protocols", "description": "The protocols the LB accepts. e.g.: [\"HTTP\"]", "default": "[\n  \"HTTP\"\n]"}, {"name": "ports", "description": "Default port set. Used fo all instance and LB port sets that are not defined", "default": "\"80\""}, {"name": "monitor", "description": "TAG: Should resource be monitored", "default": "\"UNDEF-LB\""}, {"name": "type", "description": "Type of load balancer. (`application` or `network`)", "default": "\"application\""}, {"name": "log_bucket_name", "description": "S3 bucket for storing LB access logs. To create the bucket \"create_log_bucket\" should be set to true.", "default": "\"\""}, {"name": "instance_tcp_ports", "description": "Backend TCP instance (target group) ports", "default": "\"\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespaces`, `attributes`, etc.", "default": "\"-\""}, {"name": "health_check_interval", "description": "Interval in seconds on which the health check against backend hosts is tried.", "default": "10"}]}, "Smartbrood/ec2-iam-role/aws": {"name": "ec2-iam-role", "url": "https://registry.terraform.io/modules/Smartbrood/ec2-iam-role/aws", "provider": "aws", "downloads": 1737, "description": "Terraform module to create IAM role and instance profile for EC2", "source": "Smartbrood/ec2-iam-role/aws", "args": [{"name": "name", "description": "The name of the IAM Role.", "default": ""}, {"name": "path", "description": "The path to the IAM Role.", "default": "\"/\""}, {"name": "description", "description": "The description of the IAM Role.", "default": "\"This IAM Role generated by Terraform.\""}, {"name": "force_detach_policies", "description": "Forcibly detach the policy of the role.", "default": "false"}, {"name": "policy_arn", "description": "Attache the policies to the IAM Role.", "default": ""}]}, "matti/resource/shell": {"name": "resource", "url": "https://registry.terraform.io/modules/matti/resource/shell", "provider": "shell", "downloads": 1716, "description": "", "source": "matti/resource/shell", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "command", "description": "", "default": "\":\""}, {"name": "command_when_destroy", "description": "", "default": "\":\""}, {"name": "trigger", "description": "", "default": "\"\""}]}, "claranet/lambda/aws": {"name": "lambda", "url": "https://registry.terraform.io/modules/claranet/lambda/aws", "provider": "aws", "downloads": 1705, "description": "Terraform module for AWS Lambda functions", "source": "claranet/lambda/aws", "args": [{"name": "reserved_concurrent_executions", "description": "The amount of reserved concurrent executions for this Lambda function", "default": "0"}, {"name": "environment", "description": "Environment configuration for the Lambda function", "default": "{}"}, {"name": "tags", "description": "A mapping of tags", "default": "{}"}, {"name": "timeout", "description": "The amount of time your Lambda function had to run in seconds", "default": "10"}, {"name": "dead_letter_config", "description": "Dead letter configuration for the Lambda function", "default": "{}"}, {"name": "attach_dead_letter_config", "description": "Set this to true if using the dead_letter_config variable", "default": "false"}, {"name": "description", "description": "Description of what your Lambda function does", "default": "\"Managed by Terraform\""}, {"name": "vpc_config", "description": "VPC configuration for the Lambda function", "default": "{}"}, {"name": "attach_policy", "description": "Set this to true if using the policy variable", "default": "false"}, {"name": "function_name", "description": "A unique name for your Lambda function (and related IAM resources)", "default": ""}, {"name": "memory_size", "description": "Amount of memory in MB your Lambda function can use at runtime", "default": "128"}, {"name": "source_path", "description": "The source file or directory containing your Lambda source code", "default": ""}, {"name": "policy", "description": "An addional policy to attach to the Lambda function", "default": "\"\""}, {"name": "handler", "description": "The function entrypoint in your code", "default": ""}, {"name": "runtime", "description": "The runtime environment for the Lambda function", "default": ""}, {"name": "attach_vpc_config", "description": "Set this to true if using the vpc_config variable", "default": "false"}]}, "Azure/network-security-group/azurerm": {"name": "network-security-group", "url": "https://registry.terraform.io/modules/Azure/network-security-group/azurerm", "provider": "azurerm", "downloads": 1688, "description": "Terraform module to create a network security group and assign it to the specified subnet", "source": "Azure/network-security-group/azurerm", "args": [{"name": "rules", "description": "Standard set of predefined rules", "default": "{\n  \"ActiveDirectory-AllowADDSWebServices\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"9389\",\n    \"AllowADDSWebServices\"\n  ],\n  \"ActiveDirectory-AllowADGCReplication\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"3268\",\n    \"AllowADGCReplication\"\n  ],\n  \"ActiveDirectory-AllowADGCReplicationSSL\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"3269\",\n    \"AllowADGCReplicationSSL\"\n  ],\n  \"ActiveDirectory-AllowADReplication\": [\n    \"Inbound\",\n    \"Allow\",\n    \"*\",\n    \"*\",\n    \"389\",\n    \"AllowADReplication\"\n  ],\n  \"ActiveDirectory-AllowADReplicationSSL\": [\n    \"Inbound\",\n    \"Allow\",\n    \"*\",\n    \"*\",\n    \"636\",\n    \"AllowADReplicationSSL\"\n  ],\n  \"ActiveDirectory-AllowADReplicationTrust\": [\n    \"Inbound\",\n    \"Allow\",\n    \"*\",\n    \"*\",\n    \"445\",\n    \"AllowADReplicationTrust\"\n  ],\n  \"ActiveDirectory-AllowDFSGroupPolicy\": [\n    \"Inbound\",\n    \"Allow\",\n    \"UDP\",\n    \"*\",\n    \"138\",\n    \"AllowDFSGroupPolicy\"\n  ],\n  \"ActiveDirectory-AllowDNS\": [\n    \"Inbound\",\n    \"Allow\",\n    \"*\",\n    \"*\",\n    \"53\",\n    \"AllowDNS\"\n  ],\n  \"ActiveDirectory-AllowFileReplication\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"5722\",\n    \"AllowFileReplication\"\n  ],\n  \"ActiveDirectory-AllowKerberosAuthentication\": [\n    \"Inbound\",\n    \"Allow\",\n    \"*\",\n    \"*\",\n    \"88\",\n    \"AllowKerberosAuthentication\"\n  ],\n  \"ActiveDirectory-AllowNETBIOSAuthentication\": [\n    \"Inbound\",\n    \"Allow\",\n    \"UDP\",\n    \"*\",\n    \"137\",\n    \"AllowNETBIOSAuthentication\"\n  ],\n  \"ActiveDirectory-AllowNETBIOSReplication\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"139\",\n    \"AllowNETBIOSReplication\"\n  ],\n  \"ActiveDirectory-AllowPasswordChangeKerberes\": [\n    \"Inbound\",\n    \"Allow\",\n    \"*\",\n    \"*\",\n    \"464\",\n    \"AllowPasswordChangeKerberes\"\n  ],\n  \"ActiveDirectory-AllowRPCReplication\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"135\",\n    \"AllowRPCReplication\"\n  ],\n  \"ActiveDirectory-AllowSMTPReplication\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"25\",\n    \"AllowSMTPReplication\"\n  ],\n  \"ActiveDirectory-AllowWindowsTime\": [\n    \"Inbound\",\n    \"Allow\",\n    \"UDP\",\n    \"*\",\n    \"123\",\n    \"AllowWindowsTime\"\n  ],\n  \"Cassandra\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"9042\",\n    \"Cassandra\"\n  ],\n  \"Cassandra-JMX\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"7199\",\n    \"Cassandra-JMX\"\n  ],\n  \"Cassandra-Thrift\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"9160\",\n    \"Cassandra-Thrift\"\n  ],\n  \"CouchDB\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"5984\",\n    \"CouchDB\"\n  ],\n  \"CouchDB-HTTPS\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"6984\",\n    \"CouchDB-HTTPS\"\n  ],\n  \"DNS-TCP\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"53\",\n    \"DNS-TCP\"\n  ],\n  \"DNS-UDP\": [\n    \"Inbound\",\n    \"Allow\",\n    \"UDP\",\n    \"*\",\n    \"53\",\n    \"DNS-UDP\"\n  ],\n  \"DynamicPorts\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"49152-65535\",\n    \"DynamicPorts\"\n  ],\n  \"ElasticSearch\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"9200-9300\",\n    \"ElasticSearch\"\n  ],\n  \"FTP\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"21\",\n    \"FTP\"\n  ],\n  \"HTTP\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"80\",\n    \"HTTP\"\n  ],\n  \"HTTPS\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"443\",\n    \"HTTPS\"\n  ],\n  \"IMAP\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"143\",\n    \"IMAP\"\n  ],\n  \"IMAPS\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"993\",\n    \"IMAPS\"\n  ],\n  \"Kestrel\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"22133\",\n    \"Kestrel\"\n  ],\n  \"LDAP\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"389\",\n    \"LDAP\"\n  ],\n  \"MSSQL\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"1433\",\n    \"MSSQL\"\n  ],\n  \"Memcached\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"11211\",\n    \"Memcached\"\n  ],\n  \"MongoDB\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"27017\",\n    \"MongoDB\"\n  ],\n  \"MySQL\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"3306\",\n    \"MySQL\"\n  ],\n  \"Neo4J\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"7474\",\n    \"Neo4J\"\n  ],\n  \"POP3\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"110\",\n    \"POP3\"\n  ],\n  \"POP3S\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"995\",\n    \"POP3S\"\n  ],\n  \"PostgreSQL\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"5432\",\n    \"PostgreSQL\"\n  ],\n  \"RDP\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"3389\",\n    \"RDP\"\n  ],\n  \"RabbitMQ\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"5672\",\n    \"RabbitMQ\"\n  ],\n  \"Redis\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"6379\",\n    \"Redis\"\n  ],\n  \"Riak\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"8093\",\n    \"Riak\"\n  ],\n  \"Riak-JMX\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"8985\",\n    \"Riak-JMX\"\n  ],\n  \"SMTP\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"25\",\n    \"SMTP\"\n  ],\n  \"SMTPS\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"465\",\n    \"SMTPS\"\n  ],\n  \"SSH\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"22\",\n    \"SSH\"\n  ],\n  \"WinRM\": [\n    \"Inbound\",\n    \"Allow\",\n    \"TCP\",\n    \"*\",\n    \"5986\",\n    \"WinRM\"\n  ]\n}"}, {"name": "resource_group_name", "description": "Name of the resource group", "default": "\"nsg_rg\""}, {"name": "location", "description": "", "default": ""}, {"name": "security_group_name", "description": "Network security group name", "default": "\"nsg\""}, {"name": "tags", "description": "The tags to associate with your network security group.", "default": "{}"}, {"name": "predefined_rules", "description": "", "default": "[]"}, {"name": "custom_rules", "description": "Security rules for the network security group using this format name = [priority, direction, access, protocol, source_port_range, destination_port_range, source_address_prefix, destination_address_prefix, description]", "default": "[]"}, {"name": "source_address_prefix", "description": "", "default": "[\n  \"*\"\n]"}, {"name": "destination_address_prefix", "description": "", "default": "[\n  \"*\"\n]"}]}, "jpamies/certificate/aws": {"name": "certificate", "url": "https://registry.terraform.io/modules/jpamies/certificate/aws", "provider": "aws", "downloads": 1671, "description": "Create new certificates on aws using route53 for validation", "source": "jpamies/certificate/aws", "args": [{"name": "dns_zone_id", "description": "Route53 Zone id handleling the domains on the certificate", "default": ""}, {"name": "domain_name", "description": "Main domain name for the SSL certificate", "default": ""}, {"name": "dns_ttl", "description": "DNS records TTL", "default": "60"}, {"name": "tags", "description": "Tags associated to the certificate", "default": "{}"}, {"name": "subject_alternative_names", "description": "Alternate domain names  for the SSL certificate", "default": "[]"}]}, "GoogleCloudPlatform/sql-db/google": {"name": "sql-db", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/sql-db/google", "provider": "google", "downloads": 1662, "description": "Modular Cloud SQL database instance for Terraform.", "source": "GoogleCloudPlatform/sql-db/google", "args": [{"name": "project", "description": "The project to deploy to, if not set the default provider project is used.", "default": "\"\""}, {"name": "region", "description": "Region for cloud resources", "default": "\"us-central1\""}, {"name": "name", "description": "Name for the database instance. Must be unique and cannot be reused for up to one week.", "default": ""}, {"name": "database_version", "description": "The version of of the database. For example, `MYSQL_5_6` or `POSTGRES_9_6`.", "default": "\"MYSQL_5_6\""}, {"name": "tier", "description": "The machine tier (First Generation) or type (Second Generation). See this page for supported tiers and pricing: https://cloud.google.com/sql/pricing", "default": "\"db-f1-micro\""}, {"name": "db_name", "description": "Name of the default database to create", "default": "\"default\""}, {"name": "db_charset", "description": "The charset for the default database", "default": "\"\""}, {"name": "db_collation", "description": "The collation for the default database. Example for MySQL databases: 'utf8', and Postgres: 'en_US.UTF8'", "default": "\"\""}, {"name": "user_name", "description": "The name of the default user", "default": "\"default\""}, {"name": "user_host", "description": "The host for the default user", "default": "\"%\""}, {"name": "user_password", "description": "The password for the default user. If not set, a random one will be generated and available in the generated_user_password output variable.", "default": "\"\""}, {"name": "activation_policy", "description": "This specifies when the instance should be active. Can be either `ALWAYS`, `NEVER` or `ON_DEMAND`.", "default": "\"ALWAYS\""}, {"name": "authorized_gae_applications", "description": "A list of Google App Engine (GAE) project names that are allowed to access this instance.", "default": "[]"}, {"name": "disk_autoresize", "description": "Second Generation only. Configuration to increase storage size automatically.", "default": "true"}, {"name": "disk_size", "description": "Second generation only. The size of data disk, in GB. Size of a running instance cannot be reduced but can be increased.", "default": "10"}, {"name": "disk_type", "description": "Second generation only. The type of data disk: `PD_SSD` or `PD_HDD`.", "default": "\"PD_SSD\""}, {"name": "pricing_plan", "description": "First generation only. Pricing plan for this instance, can be one of `PER_USE` or `PACKAGE`.", "default": "\"PER_USE\""}, {"name": "replication_type", "description": "Replication type for this instance, can be one of `ASYNCHRONOUS` or `SYNCHRONOUS`.", "default": "\"SYNCHRONOUS\""}, {"name": "backup_configuration", "description": "The backup_configuration settings subblock for the database setings", "default": "{}"}, {"name": "ip_configuration", "description": "The ip_configuration settings subblock", "default": "[\n  {}\n]"}, {"name": "location_preference", "description": "The location_preference settings subblock", "default": "[]"}, {"name": "maintenance_window", "description": "The maintenance_window settings subblock", "default": "[]"}, {"name": "replica_configuration", "description": "The optional replica_configuration block for the database instance", "default": "[]"}]}, "scholzj/kubeadm-token/random": {"name": "kubeadm-token", "url": "https://registry.terraform.io/modules/scholzj/kubeadm-token/random", "provider": "random", "downloads": 1471, "description": "Terraform module for generating kubeadm tokens", "source": "scholzj/kubeadm-token/random", "args": []}, "infrablocks/classic-load-balancer/aws": {"name": "classic-load-balancer", "url": "https://registry.terraform.io/modules/infrablocks/classic-load-balancer/aws", "provider": "aws", "downloads": 1438, "description": "A Terraform module for building a classic load balancer in AWS.", "source": "infrablocks/classic-load-balancer/aws", "args": [{"name": "region", "description": "The region into which to deploy the load balancer.", "default": ""}, {"name": "vpc_id", "description": "The ID of the VPC into which to deploy the load balancer.", "default": ""}, {"name": "subnet_ids", "description": "The IDs of the subnets for the ELB.", "default": ""}, {"name": "domain_name", "description": "The domain name of the supplied Route 53 zones.", "default": ""}, {"name": "public_zone_id", "description": "The ID of the public Route 53 zone.", "default": ""}, {"name": "private_zone_id", "description": "The ID of the private Route 53 zone.", "default": ""}, {"name": "component", "description": "The component for which the load balancer is being created.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "listeners", "description": "A list of listener configurations for the ELB.", "default": ""}, {"name": "access_control", "description": "A list of access control configurations for the security groups.", "default": ""}, {"name": "egress_cidrs", "description": "The CIDRs that the load balancer is allowed to access.", "default": "[]"}, {"name": "health_check_target", "description": "The target to use for health checks.", "default": "\"TCP:80\""}, {"name": "health_check_timeout", "description": "The time after which a health check is considered failed in seconds.", "default": "5"}, {"name": "health_check_interval", "description": "The time between health check attempts in seconds.", "default": "30"}, {"name": "health_check_unhealthy_threshold", "description": "The number of failed health checks before an instance is taken out of service.", "default": "2"}, {"name": "health_check_healthy_threshold", "description": "The number of successful health checks before an instance is put into service.", "default": "10"}, {"name": "enable_cross_zone_load_balancing", "description": "Whether or not to enable cross zone load balancing (\"yes\" or \"no\").", "default": "\"yes\""}, {"name": "enable_connection_draining", "description": "Whether or not to enable connection draining (\"yes\" or \"no\").", "default": "\"no\""}, {"name": "connection_draining_timeout", "description": "The time after which connection draining is aborted in seconds.", "default": "300"}, {"name": "idle_timeout", "description": "The time after which idle connections are closed.", "default": "60"}, {"name": "include_public_dns_record", "description": "Whether or not to create a public DNS entry (\"yes\" or \"no\").", "default": "\"no\""}, {"name": "include_private_dns_record", "description": "Whether or not to create a private DNS entry (\"yes\" or \"no\").", "default": "\"yes\""}, {"name": "expose_to_public_internet", "description": "Whether or not to the ELB should be internet facing (\"yes\" or \"no\").", "default": "\"no\""}]}, "devops-workflow/s3-buckets/aws": {"name": "s3-buckets", "url": "https://registry.terraform.io/modules/devops-workflow/s3-buckets/aws", "provider": "aws", "downloads": 1331, "description": "Terraform module to manage AWS S3 buckets", "source": "devops-workflow/s3-buckets/aws", "args": [{"name": "names", "description": "List of S3 bucket names", "default": ""}, {"name": "namespace-env", "description": "Prefix name with the environment. If true, format is: <env>-<name>", "default": "true"}, {"name": "product", "description": "TAG: Company/business product", "default": "\"UNDEF-S3-Buckets\""}, {"name": "team", "description": "TAG: Department/team of people responsible for service", "default": "\"UNDEF-S3-Buckets\""}, {"name": "versioned", "description": "Version the bucket", "default": "false"}, {"name": "environment", "description": "Environment (ex: `dev`, `qa`, `stage`, `prod`). (Second or top level namespace. Depending on namespacing options)", "default": ""}, {"name": "namespace-org", "description": "Prefix name with the organization. If true, format is: <org>-<env namespaced name>. If both env and org namespaces are used, format will be <org>-<env>-<name>", "default": "true"}, {"name": "force_destroy", "description": "Delete all objects in bucket on destroy", "default": "false"}, {"name": "attributes", "description": "Suffix name with additional attributes (policy, role, etc.)", "default": "[]"}, {"name": "component", "description": "TAG: Underlying, dedicated piece of service (Cache, DB, ...)", "default": "\"UNDEF-S3-Buckets\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespaces`, `attributes`, etc.", "default": "\"-\""}, {"name": "organization", "description": "Organization name (Top level namespace)", "default": "\"\""}, {"name": "owner", "description": "TAG: Owner of the service", "default": "\"UNDEF-S3-Buckets\""}, {"name": "principal", "description": "principal", "default": "\"*\""}, {"name": "monitor", "description": "TAG: Should resource be monitored", "default": "\"UNDEF-S3-Buckets\""}, {"name": "service", "description": "TAG: Application (microservice) name", "default": "\"UNDEF-S3-Buckets\""}, {"name": "tags", "description": "A map of additional tags", "default": "{}"}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "public", "description": "Allow public read access to bucket", "default": "false"}]}, "btower-labz/btlabz-pri-sn/aws": {"name": "btlabz-pri-sn", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-pri-sn/aws", "provider": "aws", "downloads": 1287, "description": "BTLabz AWS VPC parts: Private subnet.", "source": "btower-labz/btlabz-pri-sn/aws", "args": [{"name": "vpc_id", "description": "VPC identifier to create the subnet in.", "default": ""}, {"name": "cidr", "description": "Subnet's CIDR range.", "default": ""}, {"name": "az", "description": "Subnet's availability zone.", "default": ""}, {"name": "tags", "description": "Additional tags.", "default": "{}"}, {"name": "name", "description": "Subnet name. Will be used as the 'Name' tag value.", "default": "\"private-subnet\""}, {"name": "rt_name", "description": "Private route table name. Will be used as the 'Name' tag value. Default is subnet name.", "default": "\"\""}]}, "ImageIntelligence/cf-asg/aws": {"name": "cf-asg", "url": "https://registry.terraform.io/modules/ImageIntelligence/cf-asg/aws", "provider": "aws", "downloads": 1258, "description": "Terraform ASG using CloudFormation templates", "source": "ImageIntelligence/cf-asg/aws", "args": [{"name": "lc_name_prefix", "description": "Creates a unique name beginning with this prefix", "default": ""}, {"name": "ami_id", "description": "", "default": ""}, {"name": "instance_type", "description": "", "default": ""}, {"name": "security_groups", "description": "An array of security sg ids", "default": ""}, {"name": "iam_instance_profile", "description": "The ARN of the Instance Profile the LC should launch instances with", "default": ""}, {"name": "key_name", "description": "The name of a keypair", "default": ""}, {"name": "user_data", "description": "A string passed to the `user_data` field on EC2 boot", "default": ""}, {"name": "associate_public_ip_address", "description": "", "default": "true"}, {"name": "asg_name", "description": "", "default": ""}, {"name": "vpc_subnets", "description": "", "default": ""}, {"name": "health_check_grace_period", "description": "Number of seconds to wait before checking the health status of instance", "default": ""}, {"name": "asg_min_instance_size", "description": "", "default": ""}, {"name": "asg_max_instance_size", "description": "", "default": ""}, {"name": "asg_desired_instance_count", "description": "", "default": ""}, {"name": "min_instances_in_service", "description": "Minimum required EC2 boxes to be running during a rolling update", "default": ""}, {"name": "max_update_batch_size", "description": "Maximum number of boxes to update at a single time during a rolling update", "default": ""}, {"name": "timeout_in_minutes", "description": "The amount of time that can pass before the CF stack status becomes CREATE_FAILED", "default": "30"}, {"name": "pause_time", "description": "The amount of time to pause after making a change to a batch of instances", "default": "\"PT0S\""}, {"name": "environment", "description": "A tag added to each EC2 instance in the ASG environment:unknown", "default": "\"unknown\""}]}, "GoogleCloudPlatform/lb-http/google": {"name": "lb-http", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/lb-http/google", "provider": "google", "downloads": 1019, "description": "Modular Global HTTP Load Balancer for GCE using forwarding rules.", "source": "GoogleCloudPlatform/lb-http/google", "args": [{"name": "backends", "description": "Map backend indices to list of backend maps.", "default": ""}, {"name": "create_url_map", "description": "Set to `false` if url_map variable is provided.", "default": "true"}, {"name": "firewall_networks", "description": "Name of the networks to create firewall rules in", "default": "[\n  \"default\"\n]"}, {"name": "private_key", "description": "Content of the private SSL key. Required if `ssl` is `true` and `ssl_certificates` is empty.", "default": "\"\""}, {"name": "ssl_certificates", "description": "SSL cert self_link list. Required if `ssl` is `true` and no `private_key` and `certificate` is provided.", "default": "[]"}, {"name": "region", "description": "Region for cloud resources", "default": "\"us-central1\""}, {"name": "ip_version", "description": "IP version for the Global address (IPv4 or v6) - Empty defaults to IPV4", "default": "\"\""}, {"name": "name", "description": "Name for the forwarding rule and prefix for supporting resources", "default": ""}, {"name": "backend_params", "description": "Comma-separated encoded list of parameters in order: health check path, service port name, service port, backend timeout seconds", "default": ""}, {"name": "url_map", "description": "The url_map resource to use. Default is to send all traffic to first backend.", "default": "\"\""}, {"name": "http_forward", "description": "Set to `false` to disable HTTP port 80 forward", "default": "true"}, {"name": "certificate", "description": "Content of the SSL certificate. Required if `ssl` is `true` and `ssl_certificates` is empty.", "default": "\"\""}, {"name": "project", "description": "The project to deploy to, if not set the default provider project is used.", "default": "\"\""}, {"name": "target_tags", "description": "List of target tags for health check firewall rule.", "default": ""}, {"name": "ssl", "description": "Set to `true` to enable SSL support, requires variable `ssl_certificates` - a list of self_link certs", "default": "false"}, {"name": "use_ssl_certificates", "description": "If true, use the certificates provided by `ssl_certificates`, otherwise, create cert from `private_key` and `certificate`", "default": "false"}]}, "tasdikrahman/network/google": {"name": "network", "url": "https://registry.terraform.io/modules/tasdikrahman/network/google", "provider": "google", "downloads": 968, "description": "Terraform module : GCP : for creation of VPC network ", "source": "tasdikrahman/network/google", "args": [{"name": "name", "description": "Network name a create on GCP", "default": ""}, {"name": "auto_create_subnetworks", "description": "Auto-creation of the associated subnet", "default": "\"false\""}]}, "infrablocks/ecs-load-balancer/aws": {"name": "ecs-load-balancer", "url": "https://registry.terraform.io/modules/infrablocks/ecs-load-balancer/aws", "provider": "aws", "downloads": 928, "description": "Terraform module for deploying a load balancer to be used by a service in an existing ECS cluster in AWS", "source": "infrablocks/ecs-load-balancer/aws", "args": [{"name": "region", "description": "The region into which to deploy the load balancer.", "default": ""}, {"name": "vpc_id", "description": "The ID of the VPC into which to deploy the load balancer.", "default": ""}, {"name": "subnet_ids", "description": "The IDs of the subnets for the ELB to deploy into.", "default": ""}, {"name": "component", "description": "The component for which the load balancer is being created.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "service_name", "description": "The name of the service for which the ELB is being created.", "default": ""}, {"name": "service_port", "description": "The port on which the service containers are listening.", "default": ""}, {"name": "service_certificate_arn", "description": "The ARN of a certificate to use for TLS terminating at the ELB.", "default": ""}, {"name": "domain_name", "description": "The domain name of the supplied Route 53 zones.", "default": ""}, {"name": "public_zone_id", "description": "The ID of the public Route 53 zone.", "default": ""}, {"name": "private_zone_id", "description": "The ID of the private Route 53 zone.", "default": ""}, {"name": "health_check_target", "description": "The target to use for health checks.", "default": "\"HTTP:80/health\""}, {"name": "allow_cidrs", "description": "A list of CIDRs from which the ELB is reachable.", "default": ""}, {"name": "egress_cidrs", "description": "A list of CIDRs which the ELB can reach.", "default": "[]"}, {"name": "include_public_dns_record", "description": "Whether or not to create a public DNS record (\"yes\" or \"no\").", "default": "\"no\""}, {"name": "include_private_dns_record", "description": "Whether or not to create a private DNS record (\"yes\" or \"no\").", "default": "\"yes\""}, {"name": "expose_to_public_internet", "description": "Whether or not the ELB is publicly accessible (\"yes\" or \"no\").", "default": "\"no\""}]}, "buildo/cranehost/aws": {"name": "cranehost", "url": "https://registry.terraform.io/modules/buildo/cranehost/aws", "provider": "aws", "downloads": 917, "description": "Terraform module for creating EC2 instances with Docker and Crane installed", "source": "buildo/cranehost/aws", "args": [{"name": "bellosguardo_sns_topic_arn", "description": "", "default": "{\n  \"buildo\": \"arn:aws:sns:eu-west-1:309416224681:bellosguardo\",\n  \"omnilab\": \"arn:aws:sns:eu-west-1:143727521720:bellosguardo\"\n}"}, {"name": "project_name", "description": "Project name, used for namespacing things", "default": ""}, {"name": "instance_type", "description": "", "default": "\"t2.micro\""}, {"name": "ami", "description": "Custom AMI, if empty will use latest Ubuntu", "default": "\"\""}, {"name": "volume_size", "description": "Volume size", "default": "8"}, {"name": "ssh_private_key", "description": "Used to connect to the instance once created", "default": ""}, {"name": "ssh_key_name", "description": "Name of the key-pair on EC2 (aws-ireland, buildo-aws, ...)", "default": ""}, {"name": "zone_id", "description": "Route53 Zone ID", "default": ""}, {"name": "host_name", "description": "DNS host name", "default": ""}, {"name": "quay_password", "description": "Quay password", "default": ""}, {"name": "init_script", "description": "bash code executed before `crane lift` is called, example: `\"${file(\\\"init.sh\\\")}\"`", "default": "\"\""}, {"name": "in_open_ports", "description": "", "default": "[]"}, {"name": "in_cidr_blocks", "description": "", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "disk_utilization_alarm_threshold", "description": "disk occupation alarm threshold (% of disk utilization)", "default": "\"80\""}, {"name": "bellosguardo_target", "description": "Possible values are 'buildo', 'omnilab'", "default": ""}]}, "cloudposse/dynamodb-autoscaler/aws": {"name": "dynamodb-autoscaler", "url": "https://registry.terraform.io/modules/cloudposse/dynamodb-autoscaler/aws", "provider": "aws", "downloads": 906, "description": "Terraform module to provision DynamoDB autoscaler", "source": "cloudposse/dynamodb-autoscaler/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`, `infra`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "dynamodb_table_name", "description": "DynamoDB table name", "default": ""}, {"name": "dynamodb_table_arn", "description": "DynamoDB table ARN", "default": ""}, {"name": "dynamodb_indexes", "description": "List of DynamoDB indexes", "default": "[]"}, {"name": "autoscale_write_target", "description": "The target value for DynamoDB write autoscaling", "default": "50"}, {"name": "autoscale_read_target", "description": "The target value for DynamoDB read autoscaling", "default": "50"}, {"name": "autoscale_min_read_capacity", "description": "DynamoDB autoscaling min read capacity", "default": "5"}, {"name": "autoscale_max_read_capacity", "description": "DynamoDB autoscaling max read capacity", "default": "20"}, {"name": "autoscale_min_write_capacity", "description": "DynamoDB autoscaling min write capacity", "default": "5"}, {"name": "autoscale_max_write_capacity", "description": "DynamoDB autoscaling max write capacity", "default": "20"}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}]}, "ovh/publiccloud-network/ovh": {"name": "publiccloud-network", "url": "https://registry.terraform.io/modules/ovh/publiccloud-network/ovh", "provider": "ovh", "downloads": 884, "description": "", "source": "ovh/publiccloud-network/ovh", "args": [{"name": "name", "description": "Name to be used on all the resources as identifier", "default": ""}, {"name": "create_network", "description": "Should be false if `network_id` is specified.", "default": "true"}, {"name": "network_id", "description": "The network id of the existing network used to create the subnets.\nEither `network_id` or `network_name` is required if `create_network`\nis set to false.\n\nNOTE: As of today, the network has to pre-created outside this module\nif you want to do cross regions networking with the vrack.\nSee \"multiregion\" example.\n", "default": "\"\""}, {"name": "network_name", "description": "The network name of the existing network used to create the subnets.\nEither `network_id` or `network_name` is required if `create_network`\nis set to false.\n\nNOTE: As of today, the network has to pre-created outside this module\nif you want to do cross regions networking with the vrack.\nSee \"multiregion\" example.\n", "default": "\"\""}, {"name": "cidr", "description": "The CIDR block of the Network. (e.g. 10.0.0.0/16)", "default": ""}, {"name": "public_subnets", "description": "Public subnets are meant for every instances that can be\nreached through the internet (e.g. NATs, LBs, Bastion hosts, ...).\nNote: The NAT Gateways will be fixed to the 2nd ip of these subnets\n      and the allocation pools will start at the 3rd ip\n", "default": "[]"}, {"name": "private_subnets", "description": "A list of private subnets inside the VPC", "default": "[]"}, {"name": "key_pair", "description": "The openstack key pair to be used for nat instances and bastion hosts. Can be used in conjunction with `ssh_public_keys`.", "default": "\"\""}, {"name": "ssh_public_keys", "description": "The ssh public keys to be used for nat instances and bastion hosts. Can be used in conjunction with `key_pair`.", "default": "[]"}, {"name": "nat_instance_flavor_name", "description": "The flavor name region that will be used for NAT Gateways.", "default": "\"\""}, {"name": "nat_instance_flavor_names", "description": "A map of flavor names per openstack region that will be used for NAT Gateways.", "default": "{\n  \"BHS3\": \"s1-2\",\n  \"DE1\": \"s1-2\",\n  \"GRA1\": \"s1-2\",\n  \"GRA3\": \"s1-2\",\n  \"SBG3\": \"s1-2\",\n  \"UK1\": \"s1-2\",\n  \"WAW1\": \"s1-2\"\n}"}, {"name": "default_nat_instance_flavor_name", "description": "Default NAT flavor name", "default": "\"s1-2\""}, {"name": "bastion_instance_flavor_name", "description": "The flavor name region that will be used for bastion hosts.", "default": "\"\""}, {"name": "bastion_instance_flavor_names", "description": "A map of flavor names per openstack region that will be used for Bastion host.", "default": "{\n  \"BHS3\": \"s1-2\",\n  \"DE1\": \"s1-2\",\n  \"GRA1\": \"s1-2\",\n  \"GRA3\": \"s1-2\",\n  \"SBG3\": \"s1-2\",\n  \"UK1\": \"s1-2\",\n  \"WAW1\": \"s1-2\"\n}"}, {"name": "default_bastion_instance_flavor_name", "description": "Default Bastion flavor name", "default": "\"s1-2\""}, {"name": "enable_nat_gateway", "description": "Should be true if you want to provision NAT Gateways for each of your private subnets", "default": "false"}, {"name": "single_nat_gateway", "description": "Should be true if you want to provision only one NAT Gateway for all of your private subnets", "default": "false"}, {"name": "enable_bastion_host", "description": "Should be true if you want to provision a bastion host in the first public subnet.", "default": "false"}, {"name": "nat_as_bastion", "description": "Should be true if you want to make NAT Gateways act as bastion hosts.", "default": "false"}, {"name": "region", "description": "The id of the openstack region", "default": ""}, {"name": "ovh_pub_nets", "description": "A map of ovh public openstack network names.", "default": "{\n  \"BHS1\": \"Ext-Net\",\n  \"BHS3\": \"Ext-Net\",\n  \"DE1\": \"Ext-Net\",\n  \"GRA1\": \"Ext-Net\",\n  \"GRA3\": \"Ext-Net\",\n  \"SBG1\": \"Ext-Net\",\n  \"SBG3\": \"Ext-Net\",\n  \"UK1\": \"Ext-Net\",\n  \"WAW1\": \"Ext-Net\"\n}"}, {"name": "default_ovh_pub_net", "description": "Default ovh public network name", "default": "\"Ext-Net\""}, {"name": "dns_nameservers", "description": "The list of dns servers to be pushed by dhcp", "default": "[\n  \"213.186.33.99\",\n  \"8.8.8.8\"\n]"}, {"name": "metadata", "description": "A map of metadata to add to all resources supporting it.", "default": "{}"}]}, "terraform-aws-modules/sqs/aws": {"name": "sqs", "url": "https://registry.terraform.io/modules/terraform-aws-modules/sqs/aws", "provider": "aws", "downloads": 852, "description": "Terraform module which creates SQS resources on AWS", "source": "terraform-aws-modules/sqs/aws", "args": [{"name": "policy", "description": "The JSON policy for the SQS queue", "default": "\"\""}, {"name": "kms_data_key_reuse_period_seconds", "description": "The length of time, in seconds, for which Amazon SQS can reuse a data key to encrypt or decrypt messages before calling AWS KMS again. An integer representing seconds, between 60 seconds (1 minute) and 86,400 seconds (24 hours)", "default": "300"}, {"name": "name", "description": "This is the human-readable name of the queue. If omitted, Terraform will assign a random name.", "default": "\"\""}, {"name": "visibility_timeout_seconds", "description": "The visibility timeout for the queue. An integer from 0 to 43200 (12 hours)", "default": "30"}, {"name": "message_retention_seconds", "description": "The number of seconds Amazon SQS retains a message. Integer representing seconds, from 60 (1 minute) to 1209600 (14 days)", "default": "345600"}, {"name": "max_message_size", "description": "The limit of how many bytes a message can contain before Amazon SQS rejects it. An integer from 1024 bytes (1 KiB) up to 262144 bytes (256 KiB)", "default": "262144"}, {"name": "fifo_queue", "description": "Boolean designating a FIFO queue", "default": "false"}, {"name": "tags", "description": "A mapping of tags to assign to all resources", "default": "{}"}, {"name": "sqs_queue_with_kms", "description": "Whether to create SQS queue with KMS encryption", "default": "false"}, {"name": "delay_seconds", "description": "The time in seconds that the delivery of all messages in the queue will be delayed. An integer from 0 to 900 (15 minutes)", "default": "0"}, {"name": "redrive_policy", "description": "The JSON policy to set up the Dead Letter Queue, see AWS docs. Note: when specifying maxReceiveCount, you must specify it as an integer (5), and not a string (\"5\")", "default": "\"\""}, {"name": "kms_master_key_id", "description": "The ID of an AWS-managed customer master key (CMK) for Amazon SQS or a custom CMK", "default": "\"\""}, {"name": "create", "description": "Whether to create SQS queue", "default": "true"}, {"name": "content_based_deduplication", "description": "Enables content-based deduplication for FIFO queues", "default": "false"}, {"name": "receive_wait_time_seconds", "description": "The time for which a ReceiveMessage call will wait for a message to arrive (long polling) before returning. An integer from 0 to 20 (seconds)", "default": "0"}]}, "Azure/loadbalancer/azurerm": {"name": "loadbalancer", "url": "https://registry.terraform.io/modules/Azure/loadbalancer/azurerm", "provider": "azurerm", "downloads": 843, "description": "Terraform Azure RM Module for Load Balancer", "source": "Azure/loadbalancer/azurerm", "args": [{"name": "location", "description": "(Required) The location/region where the core network will be created. The full list of Azure regions can be found at https://azure.microsoft.com/regions", "default": ""}, {"name": "resource_group_name", "description": "(Required) The name of the resource group where the load balancer resources will be placed.", "default": "\"azure_lb-rg\""}, {"name": "prefix", "description": "(Required) Default prefix to use with your resource names.", "default": "\"azure_lb\""}, {"name": "remote_port", "description": "Protocols to be used for remote vm access. [protocol, backend_port].  Frontend port will be automatically generated starting at 50000 and in the output.", "default": "{}"}, {"name": "lb_port", "description": "Protocols to be used for lb health probes and rules. [frontend_port, protocol, backend_port]", "default": "{}"}, {"name": "lb_probe_unhealthy_threshold", "description": "Number of times the load balancer health probe has an unsuccessful attempt before considering the endpoint unhealthy.", "default": "2"}, {"name": "lb_probe_interval", "description": "Interval in seconds the load balancer health probe rule does a check", "default": "5"}, {"name": "frontend_name", "description": "(Required) Specifies the name of the frontend ip configuration.", "default": "\"myPublicIP\""}, {"name": "public_ip_address_allocation", "description": "(Required) Defines how an IP address is assigned. Options are Static or Dynamic.", "default": "\"static\""}, {"name": "tags", "description": "", "default": "{\n  \"source\": \"terraform\"\n}"}, {"name": "type", "description": "(Optional) Defined if the loadbalancer is private or public", "default": "\"public\""}, {"name": "frontend_subnet_id", "description": "(Optional) Frontend subnet id to use when in private mode", "default": "\"\""}, {"name": "frontend_private_ip_address", "description": "(Optional) Private ip address to assign to frontend. Use it with type = private", "default": "\"\""}, {"name": "frontend_private_ip_address_allocation", "description": "(Optional) Frontend ip allocation type (Static or Dynamic)", "default": "\"Dynamic\""}]}, "infrablocks/dns-zones/aws": {"name": "dns-zones", "url": "https://registry.terraform.io/modules/infrablocks/dns-zones/aws", "provider": "aws", "downloads": 838, "description": "Terraform module for creating public private DNS zones", "source": "infrablocks/dns-zones/aws", "args": [{"name": "domain_name", "description": "The domain name for the public DNS zone.", "default": ""}, {"name": "private_domain_name", "description": "The domain name for the private DNS zone.", "default": ""}, {"name": "private_zone_vpc_id", "description": "The VPC to attach the private DNS zone to.", "default": ""}, {"name": "private_zone_vpc_region", "description": "The region for the VPC.", "default": ""}]}, "tasdikrahman/network-subnet/google": {"name": "network-subnet", "url": "https://registry.terraform.io/modules/tasdikrahman/network-subnet/google", "provider": "google", "downloads": 798, "description": "Terraform module : GCP : for creation of subnet inside a VPC network", "source": "tasdikrahman/network-subnet/google", "args": [{"name": "name", "description": "Subnet name to create on GCP", "default": ""}, {"name": "vpc", "description": "Direct link to the network", "default": ""}, {"name": "subnetwork-region", "description": "Zone associated with the subnet. This defaults to the region configured in the provider.", "default": "\"\""}, {"name": "ip_cidr_range", "description": "IP range to book", "default": ""}]}, "ovh/publiccloud-cfssl/ovh": {"name": "publiccloud-cfssl", "url": "https://registry.terraform.io/modules/ovh/publiccloud-cfssl/ovh", "provider": "ovh", "downloads": 786, "description": "", "source": "ovh/publiccloud-cfssl/ovh", "args": [{"name": "image_id", "description": "The ID of the glance image to spawn the instance. If `post_install_modules` is set to `false`, this should be an image built from the Packer template under examples/cfssl-glance-image/cfssl.json. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"\""}, {"name": "image_name", "description": "The name of the glance image to spawn the instance. If `post_install_modules` is set to `false`, this should be an image built from the Packer template under examples/cfssl-glance-image/cfssl.json. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"CoreOS Stable\""}, {"name": "flavor_name", "description": "The flavor name that will be used for cfssl nodes.", "default": "\"s1-4\""}, {"name": "name", "description": "What to name the cfssl server and all of its associated resources.", "default": ""}, {"name": "cidr", "description": "The CIDR block of the Network. (e.g. 10.0.0.0/16)", "default": "\"\""}, {"name": "subnet_id", "description": "The subnet id to deploy the cfssl node in.", "default": "\"\""}, {"name": "subnet", "description": "The subnet to deploy the cfssl node in.", "default": "\"\""}, {"name": "security_group_ids", "description": "An optional list of additional security groups to attach to private ports", "default": "[]"}, {"name": "public_security_group_ids", "description": "An optional list of additional security groups to attach to public ports", "default": "[]"}, {"name": "cacert", "description": "Optional ca certificate to add to the nodes. If `cfssl` is set to `true`, cfssl will use `cacert` along with `cakey` to generate certificates. Otherwise will generate a new self signed ca.", "default": "\"\""}, {"name": "cacert_key", "description": "Optional ca certificate key. If `cfssl` is set to `true`, cfssl will use `cacert` along with `cakey` to generate certificates. Otherwise will generate a new self signed ca.", "default": "\"\""}, {"name": "ssh_authorized_keys", "description": "The ssh public keys that can be used to SSH in the instance.", "default": "[]"}, {"name": "post_install_modules", "description": "Setting this variable to true will assume the necessary software to boot the server hasn't been packaged in the image and thus will be post provisionned. Defaults to `false`", "default": "true"}, {"name": "ssh_user", "description": "The ssh username of the image used to boot the cfssl server.", "default": "\"core\""}, {"name": "ssh_bastion_host", "description": "The address of the bastion host used to post provision the cfssl server. This may be required if `post_install_modules` is set to `true`", "default": "\"\""}, {"name": "ssh_bastion_user", "description": "The ssh username of the bastion host used to post provision the cfssl server. This may be required if `post_install_modules` is set to `true`", "default": "\"\""}, {"name": "ignition_mode", "description": "Set to true if os family supports ignition, such as CoreOS/Container Linux distribution", "default": "true"}, {"name": "cfssl_version", "description": "The version of cfssl to install with the post installation script if `post_install_modules` is set to true", "default": "\"1.0.2\""}, {"name": "cfssl_sha256sum", "description": "The sha256 checksum of the cfssl binary to install with the post installation script if `post_install_modules` is set to true", "default": "\"418329f0f4fc3f18ef08674537b576e57df3f3026f258794b4b4b611beae6c9b\""}, {"name": "associate_public_ipv4", "description": "Associate a public ipv4 with the cfssl nodes", "default": "false"}, {"name": "associate_private_ipv4", "description": "Associate a private ipv4 with the cfssl nodes", "default": "true"}, {"name": "ca_validity_period", "description": "validity period for generated CA", "default": "\"43800h\""}, {"name": "cert_validity_period", "description": "default validity period for generated certs", "default": "\"8760h\""}, {"name": "cn", "description": "generated certs common name field ", "default": "\"\""}, {"name": "c", "description": "generated certs country field", "default": "\"\""}, {"name": "l", "description": "generated certs location field", "default": "\"Roubaix\""}, {"name": "o", "description": "generated certs org field", "default": "\"myorg\""}, {"name": "ou", "description": "generated certs ou field", "default": "\"59\""}, {"name": "st", "description": "generated certs state field", "default": "\"Nord\""}, {"name": "key_algo", "description": "generated certs key algo. ECDSA seems to be incompatible with some distros. Choose with caution.", "default": "\"rsa\""}, {"name": "key_size", "description": "generated certs key size", "default": "\"2048\""}, {"name": "bind", "description": "cfssl service bind addr", "default": "\"0.0.0.0\""}, {"name": "port", "description": "cfssl service bind port", "default": "\"8888\""}]}, "terraformworld/iam-account-password-policy/aws": {"name": "iam-account-password-policy", "url": "https://registry.terraform.io/modules/terraformworld/iam-account-password-policy/aws", "provider": "aws", "downloads": 778, "description": "A simple module for setting up the global IAM account password policy", "source": "terraformworld/iam-account-password-policy/aws", "args": [{"name": "aws_region", "description": "AWS region name", "default": "\"eu-west-1\""}, {"name": "minimum_length", "description": "The minimum length of a password", "default": "16"}, {"name": "require_lowercase", "description": "Do we require lowercase characters in the password", "default": "true"}, {"name": "require_uppercase", "description": "Do we require uppercase characters in the password", "default": "true"}, {"name": "require_numbers", "description": "Do we require numbers in the password", "default": "true"}, {"name": "require_symbols", "description": "Do we require symbols in the password", "default": "true"}, {"name": "allow_user_change", "description": "Do we allow people to change their own password?", "default": "true"}, {"name": "hard_expiry", "description": "Do we allow people to change passwords that have expired?", "default": "false"}, {"name": "maximum_age", "description": "The maximum age of a password (in days)", "default": "30"}, {"name": "reuse_history", "description": "The number of previous passwords that users are prevented from reusing.", "default": "24"}]}, "ovh/publiccloud-etcd/ovh": {"name": "publiccloud-etcd", "url": "https://registry.terraform.io/modules/ovh/publiccloud-etcd/ovh", "provider": "ovh", "downloads": 733, "description": "", "source": "ovh/publiccloud-etcd/ovh", "args": [{"name": "name", "description": "Cluster name", "default": ""}, {"name": "ssh_authorized_keys", "description": "SSH public keys", "default": "[]"}, {"name": "domain", "description": "The domain of the cluster.", "default": "\"local\""}, {"name": "datacenter", "description": "The datacenter of the cluster.", "default": "\"dc1\""}, {"name": "image_id", "description": "The ID of the glance image to run in the cluster. If `post_install_module` is set to `false`, this should be an image built from the Packer template under examples/etcd-glance-image/pqcker.json. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"\""}, {"name": "image_name", "description": "The name of the glance image to run in the cluster. If `post_install_module` is set to `false`, this should be an image built from the Packer template under examples/etcd-glance-image/etcd.json. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"CoreOS Stable\""}, {"name": "flavor_name", "description": "The flavor name that will be used for etcd nodes.", "default": "\"s1-4\""}, {"name": "count", "description": "Number of nodes", "default": "\"1\""}, {"name": "metadata", "description": "A map of metadata to add to all resources supporting it.", "default": "{}"}, {"name": "subnet_ids", "description": "The list of subnets ids to deploy etcd nodes in.\nIf `count` is specified, will spawn `count` etcd node\naccross the list of subnets. Conflicts with `subnets`.\n", "default": "[]"}, {"name": "subnets", "description": "The list of subnets CIDR blocks to deploy etcd nodes in.\nIf `count` is specified, will spawn `count` etcd node\naccross the list of subnets. Conflicts with `subnet_ids`.\n", "default": "[\n  \"\"\n]"}, {"name": "public_security_group_ids", "description": "An optional list of additional security groups to attach to public ports", "default": "[]"}, {"name": "cacert", "description": "Optional ca certificate to add to the nodes. If `cfssl` is set to `true`, cfssl will use `cacert` along with `cakey` to generate certificates. Otherwise will generate a new self signed ca.", "default": "\"\""}, {"name": "cacert_key", "description": "Optional ca certificate key. If `cfssl` is set to `true`, cfssl will use `cacert` along with `cakey` to generate certificates. Otherwise will generate a new self signed ca.", "default": "\"\""}, {"name": "cidr", "description": "CIDR IPv4 range to assign to openstack instances", "default": "\"\""}, {"name": "post_install_modules", "description": "Setting this variable to true will assume the necessary software to boot the cluster hasn't packaged in the image and thus will be post provisionned. Defaults to `false`", "default": "true"}, {"name": "ssh_user", "description": "The ssh username of the image used to boot the etcd cluster.", "default": "\"core\""}, {"name": "ssh_bastion_host", "description": "The address of the bastion host used to post provision the etcd cluster. This may be required if `post_install_module` is set to `true`", "default": "\"\""}, {"name": "ssh_bastion_user", "description": "The ssh username of the bastion host used to post provision the etcd cluster. This may be required if `post_install_module` is set to `true`", "default": "\"\""}, {"name": "ignition_mode", "description": "Set to true if os family supports ignition, such as CoreOS/Container Linux distribution", "default": "true"}, {"name": "associate_public_ipv4", "description": "Associate a public ipv4 with the etcd nodes", "default": "false"}, {"name": "associate_private_ipv4", "description": "Associate a private ipv4 with the etcd nodes", "default": "true"}, {"name": "cfssl", "description": "Defines if cfssl shall be used as a pki. If set to `true`\nand no cacert with associated private key is given as argument, cfssl will\ngenerate its own self signed ca cert.\n\nIf `cfssl_endpoint` is left blank, a cfssl server is started on the first cluster node.\nA systemd unit will then get tls keypairs for the etcd service.\n\nAt every etcd agent restart, if tls keypair is older than 1h,\na new keypair will be fetched.\n", "default": "false"}, {"name": "cfssl_endpoint", "description": "If `cfssl` is set to `true`, this argument can be used to specify a target cfssl endpoint. Otherwise the first ipv4 given as argument in `private_ipv4_addrs` will be used as the cfssl endpoint in instances userdata.", "default": "\"\""}, {"name": "cfssl_ca_validity_period", "description": "validity period for generated CA", "default": "\"43800h\""}, {"name": "cfssl_cert_validity_period", "description": "default validity period for generated certs", "default": "\"8760h\""}, {"name": "cfssl_key_algo", "description": "generated certs key algo", "default": "\"rsa\""}, {"name": "cfssl_key_size", "description": "generated certs key size", "default": "\"2048\""}, {"name": "cfssl_bind", "description": "cfssl service bind addr", "default": "\"0.0.0.0\""}, {"name": "cfssl_port", "description": "cfssl service bind port", "default": "\"8888\""}, {"name": "etcd_initial_cluster", "description": "etcd initial cluster. Useful to join an existing cluster.", "default": "\"\""}]}, "claranet/asg-instance-replacement/aws": {"name": "asg-instance-replacement", "url": "https://registry.terraform.io/modules/claranet/asg-instance-replacement/aws", "provider": "aws", "downloads": 731, "description": "Terraform module for AWS ASG instance replacement", "source": "claranet/asg-instance-replacement/aws", "args": [{"name": "name", "description": "Name to use for resources", "default": "\"tf-aws-asg-instance-replacement\""}, {"name": "schedule", "description": "Schedule for running the Lambda function", "default": "\"rate(1 minute)\""}, {"name": "timeout", "description": "Lambda function timeout", "default": "\"60\""}]}, "btower-labz/btlabz-pub-sn/aws": {"name": "btlabz-pub-sn", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-pub-sn/aws", "provider": "aws", "downloads": 662, "description": "BTLabz AWS VPC parts: Public subnet.", "source": "btower-labz/btlabz-pub-sn/aws", "args": [{"name": "vpc_id", "description": "VPC identifier to create the subnet in.", "default": ""}, {"name": "cidr", "description": "Subnet's CIDR range.", "default": ""}, {"name": "az", "description": "Subnet's availability zone.", "default": ""}, {"name": "rt_id", "description": "Public route table to bind subnet to.", "default": ""}, {"name": "tags", "description": "Additional tags.", "default": "{}"}, {"name": "name", "description": "Subnet name. Will be used as the 'Name' tag value.", "default": "\"public-subnet\""}]}, "egarbi/es-cluster/aws": {"name": "es-cluster", "url": "https://registry.terraform.io/modules/egarbi/es-cluster/aws", "provider": "aws", "downloads": 645, "description": "Create an elasticsearch domain with VPC support in AWS", "source": "egarbi/es-cluster/aws", "args": [{"name": "name", "description": "Elastic Search Service cluster name.", "default": "\"\""}, {"name": "subnet_ids", "description": "List of VPC Subnet IDs for the Elastic Search Service EndPoints will be created.", "default": ""}, {"name": "vpc_id", "description": "Vpc id where the Elastic Search Service cluster will be launched.", "default": "\"\""}, {"name": "zone_id", "description": "", "default": "\"Route 53 zone id where our \""}, {"name": "access_policies", "description": "IAM policy document specifying the access policies for the domain.", "default": "\"\""}, {"name": "dedicated_master", "description": "Indicates whether our cluster have dedicated master nodes enabled.", "default": "\"0\""}, {"name": "encryption_enabled", "description": "Enable encription in Elastic Search.", "default": "\"false\""}, {"name": "encryption_kms_key_id", "description": "Enable encription in Elastic Search.", "default": "\"\""}, {"name": "elasticsearch_version", "description": "Elastic Search Service cluster version number.", "default": "\"5.5\""}, {"name": "icount", "description": "Elastic Search Service cluster Ec2 instance number.", "default": "\"1\""}, {"name": "indices_fielddata_cache_size", "description": "Percentage of Java heap space allocated to field data.", "default": "\"\""}, {"name": "indices_query_bool_max_clause_count", "description": "Maximum number of clauses allowed in a Lucene boolean query.", "default": "\"1024\""}, {"name": "ingress_allow_cidr_blocks", "description": "Specifies the ingress CIDR blocks allowed.", "default": "[]"}, {"name": "ingress_allow_security_groups", "description": "Specifies the ingress security groups allowed.", "default": "[]"}, {"name": "itype", "description": "Elastic Search Service cluster Ec2 instance type.", "default": "\"m4.large.elasticsearch\""}, {"name": "mcount", "description": "Elastic Search Service cluster dedicated master Ec2 instance number.", "default": "\"0\""}, {"name": "mtype", "description": "Elastic Search Service cluster dedicated master Ec2 instance type.", "default": "\"\""}, {"name": "zone_awareness", "description": "Indicates whether zone awareness is enabled.", "default": "\"0\""}, {"name": "rest_action_multi_allow_explicit_index", "description": "Specifies whether explicit references to indices are allowed inside the body of HTTP requests.", "default": "\"true\""}, {"name": "snapshot_start", "description": "Elastic Search Service maintenance/snapshot start time.", "default": "\"0\""}, {"name": "volume_size", "description": "Default size of the EBS volumes.", "default": "\"35\""}, {"name": "volume_type", "description": "Default type of the EBS volumes.", "default": "\"gp2\""}]}, "claranet/s3-yum-repo/aws": {"name": "s3-yum-repo", "url": "https://registry.terraform.io/modules/claranet/s3-yum-repo/aws", "provider": "aws", "downloads": 628, "description": "Manages a YUM repository in an S3 bucket", "source": "claranet/s3-yum-repo/aws", "args": [{"name": "codebuild_name", "description": "CodeBuild project name", "default": ""}, {"name": "repo_bucket", "description": "S3 bucket for the repo", "default": ""}, {"name": "repo_dir", "description": "S3 key for the repo directory, no leading or trailing slashes", "default": "\"\""}, {"name": "build_timeout", "description": "Maximum number of minutes for the build to run before timing out", "default": "\"5\""}]}, "infrablocks/rds-postgres/aws": {"name": "rds-postgres", "url": "https://registry.terraform.io/modules/infrablocks/rds-postgres/aws", "provider": "aws", "downloads": 627, "description": "", "source": "infrablocks/rds-postgres/aws", "args": [{"name": "region", "description": "The region into which to deploy the database.", "default": ""}, {"name": "vpc_id", "description": "The ID of the VPC into which to deploy the database.", "default": ""}, {"name": "private_subnet_ids", "description": "The IDs of the private subnets to deploy the database into.", "default": ""}, {"name": "private_network_cidr", "description": "The CIDR of the private network allowed access to the database.", "default": ""}, {"name": "component", "description": "The component this database will serve.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "database_instance_class", "description": "The instance type of the database instance.", "default": "\"db.t2.micro\""}, {"name": "database_version", "description": "The database version. If omitted, it lets Amazon decide.", "default": "\"\""}, {"name": "database_name", "description": "The name of the database schema to create. If omitted, no database schema is created initially.", "default": ""}, {"name": "database_master_user", "description": "The password for the master database user.", "default": ""}, {"name": "database_master_user_password", "description": "The username for the master database user.", "default": ""}, {"name": "use_multiple_availability_zones", "description": "Whether or not to create a multi-availability zone database (\"yes\" or \"no\").", "default": "\"no\""}, {"name": "use_encrypted_storage", "description": "Whether or not to use encrypted storage for the database (\"yes\" or \"no\").", "default": "\"no\""}, {"name": "snapshot_identifier", "description": "The identifier of the snapshot to use to create the database.", "default": "\"\""}, {"name": "backup_retention_period", "description": "The number of days to retain database backups.", "default": "7"}, {"name": "backup_window", "description": "The time window in which backups should take place.", "default": "\"01:00-03:00\""}, {"name": "maintenance_window", "description": "The time window in which maintenance should take place.", "default": "\"mon:03:01-mon:05:00\""}]}, "Smartbrood/key-pair/aws": {"name": "key-pair", "url": "https://registry.terraform.io/modules/Smartbrood/key-pair/aws", "provider": "aws", "downloads": 616, "description": "Terraform module for importing a SSH public key file into AWS.", "source": "Smartbrood/key-pair/aws", "args": [{"name": "key_name_prefix", "description": "Key name prefix for ssh rsa public key", "default": "\"terraform-\""}, {"name": "public_key_path", "description": "Path to ssh rsa public key", "default": "\"~/.ssh/id_rsa.pub\""}]}, "Azure/vnet/azurerm": {"name": "vnet", "url": "https://registry.terraform.io/modules/Azure/vnet/azurerm", "provider": "azurerm", "downloads": 578, "description": "Terraform module to create/provision Azure vnet ", "source": "Azure/vnet/azurerm", "args": [{"name": "vnet_name", "description": "Name of the vnet to create", "default": "\"acctvnet\""}, {"name": "resource_group_name", "description": "Default resource group name that the network will be created in.", "default": "\"myapp-rg\""}, {"name": "location", "description": "The location/region where the core network will be created. The full list of Azure regions can be found at https://azure.microsoft.com/regions", "default": "\"westus\""}, {"name": "address_space", "description": "The address space that is used by the virtual network.", "default": "\"10.0.0.0/16\""}, {"name": "dns_servers", "description": "The DNS servers to be used with vNet.", "default": "[]"}, {"name": "subnet_prefixes", "description": "The address prefix to use for the subnet.", "default": "[\n  \"10.0.1.0/24\"\n]"}, {"name": "subnet_names", "description": "A list of public subnets inside the vNet.", "default": "[\n  \"subnet1\"\n]"}, {"name": "tags", "description": "The tags to associate with your network and subnets.", "default": "{\n  \"tag1\": \"\",\n  \"tag2\": \"\"\n}"}]}, "anonymint/iam-role/aws": {"name": "iam-role", "url": "https://registry.terraform.io/modules/anonymint/iam-role/aws", "provider": "aws", "downloads": 572, "description": "Terraform module for creating iam role with or without instance profile", "source": "anonymint/iam-role/aws", "args": [{"name": "role_name", "description": "Role name", "default": ""}, {"name": "iam_role_policy_document_json", "description": "  Valid JSON Policy String\n  this can be constructed from\n  * terraform data.aws_iam_policy_document\n  * terraform file provider\n", "default": ""}, {"name": "policy_arns", "description": "List of policy arns to attach to this role", "default": "[]"}, {"name": "policy_arns_count", "description": "number of policy arns due to bug with length of computed value", "default": ""}, {"name": "create_instance_role", "description": "Need to create a same name instance role or not", "default": "false"}]}, "Smartbrood/security-group/aws": {"name": "security-group", "url": "https://registry.terraform.io/modules/Smartbrood/security-group/aws", "provider": "aws", "downloads": 546, "description": "Terraform module for vpc security groups on AWS", "source": "Smartbrood/security-group/aws", "args": [{"name": "rules", "description": "Map of security group rules, defined as 'name' = ['from port', 'to port', 'protocol', 'description'])", "default": "{\n  \"any\": [\n    0,\n    0,\n    \"-1\",\n    \"ANY\"\n  ],\n  \"http-80-tcp\": [\n    80,\n    80,\n    \"tcp\",\n    \"HTTP\"\n  ],\n  \"https-443-tcp\": [\n    443,\n    443,\n    \"tcp\",\n    \"HTTPS\"\n  ],\n  \"icmp\": [\n    \"-1\",\n    \"-1\",\n    \"icmp\",\n    \"ICMP\"\n  ],\n  \"ldap-389-tcp\": [\n    389,\n    389,\n    \"tcp\",\n    \"HTTP\"\n  ],\n  \"mysql-3306-tcp\": [\n    3306,\n    3306,\n    \"tcp\",\n    \"MYSQL\"\n  ],\n  \"ssh-22-tcp\": [\n    22,\n    22,\n    \"tcp\",\n    \"HTTP\"\n  ]\n}"}, {"name": "vpc_id", "description": "ID of the VPC where to create security group", "default": ""}, {"name": "name", "description": "Name of security group", "default": ""}, {"name": "description", "description": "Description of security group", "default": "\"Security Group managed by Terraform\""}, {"name": "tags", "description": "A mapping of tags to assign to security group", "default": "{}"}, {"name": "ingress_rules", "description": "List of ingress rules to create by name", "default": "[]"}, {"name": "ingress_rules_from_any", "description": "List of ingress rules to create by name from 0.0.0.0/0", "default": "[]"}, {"name": "ingress_cidr_blocks", "description": "List of IPv4 CIDR ranges to use on all ingress rules", "default": "[]"}, {"name": "egress_rules", "description": "List of egress rules to create by name", "default": "[]"}, {"name": "egress_rules_to_any", "description": "List of egress rules to create by name to 0.0.0.0/0", "default": "[]"}, {"name": "egress_cidr_blocks", "description": "List of IPv4 CIDR ranges to use on all egress rules", "default": "[]"}]}, "GoogleCloudPlatform/managed-instance-group/google": {"name": "managed-instance-group", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/managed-instance-group/google", "provider": "google", "downloads": 515, "description": "Modular Google Compute Engine managed instance group for Terraform.", "source": "GoogleCloudPlatform/managed-instance-group/google", "args": [{"name": "hc_interval", "description": "Health check, check interval in seconds.", "default": "30"}, {"name": "hc_timeout", "description": "Health check, timeout in seconds.", "default": "10"}, {"name": "hc_healthy_threshold", "description": "Health check, healthy threshold.", "default": "1"}, {"name": "hc_unhealthy_threshold", "description": "Health check, unhealthy threshold.", "default": "10"}, {"name": "hc_port", "description": "Health check, health check port, if different from var.service_port, if not given, var.service_port is used.", "default": "\"\""}, {"name": "hc_path", "description": "Health check, the http path to check.", "default": "\"/\""}, {"name": "http_health_check", "description": "Enable or disable the http health check for auto healing.", "default": "true"}, {"name": "hc_initial_delay", "description": "Health check, intial delay in seconds.", "default": "300"}]}, "egarbi/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/egarbi/ecs-service/aws", "provider": "aws", "downloads": 505, "description": "Create a ECS service in an ECS cluster associated to an target_group passed as an argument", "source": "egarbi/ecs-service/aws", "args": [{"name": "name", "description": "The service name", "default": ""}, {"name": "cluster", "description": "The cluster name", "default": ""}, {"name": "vpc_id", "description": "The VPC ID were the ECS is running", "default": ""}, {"name": "zone_id", "description": "Zone ID where the ECS service (record) will be added", "default": ""}, {"name": "container_definitions", "description": "here you should include the full container definitions", "default": ""}, {"name": "iam_role", "description": "IAM Role ARN to use", "default": ""}, {"name": "alb_listener", "description": "Listener where the rule will be added", "default": ""}, {"name": "alb_dns_name", "description": "DNS name of the ALB where the rule will be added", "default": ""}, {"name": "alb_zone_id", "description": "Zone ID where the ALB is hosted", "default": ""}, {"name": "rule_priority", "description": "This is the priority number of the listener's rule", "default": ""}, {"name": "environment", "description": "Environment tag, e.g prod", "default": "\"default\""}, {"name": "container_port", "description": "The container port", "default": "8080"}, {"name": "healthcheck", "description": "", "default": "{\n  \"healthy_threshold\": 2,\n  \"interval\": 30,\n  \"matcher\": 200,\n  \"path\": \"/health\",\n  \"timeout\": 5,\n  \"unhealthy_threshold\": 5\n}"}, {"name": "desired_count", "description": "The desired count", "default": "1"}, {"name": "policy", "description": "IAM custom policy to be attached to the task role", "default": "\"\""}, {"name": "cookie_duration", "description": "The time period, in seconds, during which requests from a client should be routed to the same target.The range is 1 second to 1 week (604800 seconds)", "default": "\"86400\""}, {"name": "stick_enabled", "description": "Boolen to enable / disable stickiness", "default": "\"false\""}]}, "SweetOps/storage-bucket/google": {"name": "storage-bucket", "url": "https://registry.terraform.io/modules/SweetOps/storage-bucket/google", "provider": "google", "downloads": 504, "description": "Terraform module : GCP : for creation storage buckets", "source": "SweetOps/storage-bucket/google", "args": [{"name": "name", "description": "The name of the bucket.", "default": ""}, {"name": "location", "description": "The GCS location.", "default": "\"\""}, {"name": "project", "description": "The project in which the resource belongs. If it is not provided, the provider project is used.", "default": "\"\""}, {"name": "force_destroy", "description": "When deleting a bucket, this boolean option will delete all contained objects.", "default": "\"false\""}, {"name": "storage_class", "description": "The Storage Class of the new bucket. Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE.", "default": "\"REGIONAL\""}, {"name": "age", "description": "Minimum age of an object in days to satisfy this condition.", "default": "\"60\""}, {"name": "created_before", "description": "Creation date of an object in RFC 3339 (e.g. 2017-06-13) to satisfy this condition.", "default": "\"2017-06-13\""}, {"name": "is_live", "description": "Relevant only for versioned objects. If true, this condition matches live objects, archived objects otherwise.", "default": "\"false\""}, {"name": "matches_storage_class", "description": "Storage Class of objects to satisfy this condition. Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE, STANDARD, DURABLE_REDUCED_AVAILABILITY.", "default": "[\n  \"REGIONAL\"\n]"}, {"name": "num_newer_versions", "description": "Relevant only for versioned objects. The number of newer versions of an object to satisfy this condition.", "default": "\"10\""}, {"name": "action_type", "description": "The type of the action of this Lifecycle Rule. Supported values include: Delete and SetStorageClass.", "default": "\"SetStorageClass\""}, {"name": "action_storage_class", "description": "The target Storage Class of objects affected by this Lifecycle Rule. Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE.", "default": "\"NEARLINE\""}, {"name": "versioning_enabled", "description": "While set to true, versioning is fully enabled for this bucket.", "default": "\"true\""}, {"name": "default_acl", "description": "Configure this ACL to be the default ACL.", "default": "\"private\""}, {"name": "role_entity", "description": "List of role/entity pairs in the form ROLE:entity.", "default": "[]"}]}, "Smartbrood/data-ami/aws": {"name": "data-ami", "url": "https://registry.terraform.io/modules/Smartbrood/data-ami/aws", "provider": "aws", "downloads": 494, "description": "Terraform module to get Ubuntu, Centos, AWS ECS optimized AMI IDs for working region", "source": "Smartbrood/data-ami/aws", "args": [{"name": "distribution", "description": "Linux distribution for AWS AMI, supported: ecs, centos7, ubuntu1604, ubuntu1204", "default": ""}]}, "salte-io/serverless/aws": {"name": "serverless", "url": "https://registry.terraform.io/modules/salte-io/serverless/aws", "provider": "aws", "downloads": 472, "description": "Terraform Module for simplifying the deployment of Lambda Functions to API Gateway.", "source": "salte-io/serverless/aws", "args": [{"name": "api_id", "description": "The ID of the API Gateway to deploy to.", "default": ""}, {"name": "function_name", "description": "The name of the lambda function.", "default": ""}, {"name": "invoke_arn", "description": "The ARN used by the API Gateway for invocation.", "default": ""}, {"name": "resource_id", "description": "The ID of the API Gateway Resource.", "default": ""}, {"name": "http_method", "description": "The HTTP method the resource will be available at.", "default": ""}]}, "withmethod/repository/github": {"name": "repository", "url": "https://registry.terraform.io/modules/withmethod/repository/github", "provider": "github", "downloads": 463, "description": "Terraform Module for managing Github Repository and Branch Protection resources", "source": "withmethod/repository/github", "args": [{"name": "name", "description": "The name of the repository", "default": "\"\""}, {"name": "description", "description": "A description of the repository", "default": "\"\""}, {"name": "homepage_url", "description": "URL of a page describing the project", "default": "\"\""}, {"name": "private", "description": "Set to `true` to create a private repository", "default": "true"}, {"name": "has_issues", "description": "Set to `true` to enable the Github Issues features on the repository", "default": "true"}, {"name": "has_wiki", "description": "Set to `true` to enable the Github Wiki features on the repository", "default": "true"}, {"name": "allow_merge_commit", "description": "Set to `false` to disable merge commits on the repository", "default": "true"}, {"name": "allow_squash_merge", "description": "Set to `false` to disable squash merges on the repository", "default": "true"}, {"name": "allow_rebase_merge", "description": "Set to `false` to disable rebase merges on the repository", "default": "true"}, {"name": "has_downloads", "description": "Set to `true` to enable the (deprecated) downloads features on the repository", "default": "false"}, {"name": "auto_init", "description": "Set to `true` to produce an initial commit in the repository", "default": "true"}, {"name": "gitignore_template", "description": "Set to a template to use for the `.gitignore` file", "default": "\"\""}, {"name": "license_template", "description": "Set to a template to use for the license", "default": "\"apache-2.0\""}, {"name": "branch", "description": "The name of the default branch of the repository", "default": "\"master\""}, {"name": "enable_team_repository", "description": "Boolean to toggle team repository settings", "default": "0"}, {"name": "team_repository_team", "description": "The GitHub team ID", "default": "\"\""}, {"name": "team_repository_permission", "description": "The permissions of team members regarding the repository", "default": "\"pull\""}, {"name": "enable_branch_protection", "description": "Boolean to toggle branch protection settings. Only works when repository has been created", "default": "\"0\""}, {"name": "enforce_admins", "description": "Boolean to toggle enforcement of status checks for administrators", "default": "true"}, {"name": "req_status_checks_strict", "description": "Boolean to toggle strictness of status checks", "default": "\"0\""}, {"name": "req_status_checks_context", "description": "List of status checks to require in order to merge into this branch", "default": "[]"}, {"name": "req_pr_reviews_dismiss_stale_reviews", "description": "Boolean to toggle dismissal of reviews when a new commit is pushed", "default": "true"}, {"name": "req_pr_reviews_dismissal_users", "description": "The list of user logins with dismissal access", "default": "[]"}, {"name": "req_pr_reviews_dismissal_teams", "description": "The list of team slugs with dismissal access", "default": "[]"}, {"name": "restrictions_users", "description": "The list of user logins with push access", "default": "[]"}, {"name": "restrictions_teams", "description": "The list of team slugs with push access", "default": "[]"}]}, "connect-group/lambda-exec/aws": {"name": "lambda-exec", "url": "https://registry.terraform.io/modules/connect-group/lambda-exec/aws", "provider": "aws", "downloads": 448, "description": "Execute a Lambda and obtain its results during a Terraform apply", "source": "connect-group/lambda-exec/aws", "args": [{"name": "lambda_inputs", "description": "Map of inputs which are passed into the Lambda function via the event['ResourceProperties'] object.", "default": "{}"}, {"name": "lambda_outputs", "description": "List of outputs from the Lambda function.  The Lambda must ALWAYS return these outputs, and they can only be of type String.  Maps/Objects will result in a CloudFormation error.", "default": ""}, {"name": "tags", "description": "Any tags to add to the CloudFormation stack.", "default": "{}"}, {"name": "name", "description": "Unique name for the result of executing the lambda.", "default": ""}, {"name": "lambda_function_arn", "description": "Lambda ARN - identify the lambda to execute.", "default": ""}, {"name": "timeout_in_minutes", "description": "Maximum Time to wait for a response from CloudFormation/Lambda.  The Lambda itself may have its own timeout; this does not override it.", "default": "\"5\""}]}, "vistaprint/cloudfront-cloudwatch-alarms/aws": {"name": "cloudfront-cloudwatch-alarms", "url": "https://registry.terraform.io/modules/vistaprint/cloudfront-cloudwatch-alarms/aws", "provider": "aws", "downloads": 433, "description": "This Terraform module simplifies creating cloudwatch alarms for a cloudfront distribution.", "source": "vistaprint/cloudfront-cloudwatch-alarms/aws", "args": [{"name": "default_threshold", "description": "The default threshold for the metric.", "default": "5"}, {"name": "default_evaluation_periods", "description": "The default amount of evaluation periods.", "default": "2"}, {"name": "default_period", "description": "The default evaluation period.", "default": "60"}, {"name": "default_comparison_operator", "description": "The default comparison operator.", "default": "\"GreaterThanOrEqualToThreshold\""}, {"name": "default_statistic", "description": "The default statistic.", "default": "\"Average\""}, {"name": "domain", "description": "The domain to attach the alarms to.", "default": ""}, {"name": "distribution_id", "description": "The distribution_id of the domain.", "default": ""}, {"name": "alarms", "description": "Alarms information. The keys of the map are the metric names. The values\nof the map contain the information for a metric alarm.\n\nThe following arguments are supported:\n  - comparison_operator: The operation to use for comparing the statistic to the threshold.\n    - GreaterThanOrEqualToThreshold\n    - GreaterThanThreshold\n    - LessThanThreshold\n    - LessThanOrEqualToThreshold\n  - evaluation_periods: The number of periods over which data is compared to the specified threshold.\n  - period: The period in seconds over which the specified statistic is applied.\n  - statistic: The statistic to apply to the alarm's associated metric.\n  - threshold: The number of occurances over a given period.\n  - actions: The actions to execute when the alarm transitions into an ALARM state.\n      Due to a limitation in Terraform, this list must be given as a comma-separated string.\n", "default": "{}"}, {"name": "alarm_count", "description": "The number of alarms to create.", "default": "0"}]}, "terraform-aws-modules/eks/aws": {"name": "eks", "url": "https://registry.terraform.io/modules/terraform-aws-modules/eks/aws", "provider": "aws", "downloads": 430, "description": "A Terraform module to create an Elastic Kubernetes (EKS) cluster and associated worker instances on AWS.", "source": "terraform-aws-modules/eks/aws", "args": [{"name": "kubeconfig_aws_authenticator_additional_args", "description": "Any additional arguments to pass to the authenticator such as the role to assume [\"-r\", \"MyEksRole\"]", "default": "[]"}, {"name": "workstation_cidr", "description": "Override the default ingress rule that allows communication with the EKS cluster API. If not given, will use current IP/32.    ", "default": "\"\""}, {"name": "tags", "description": "A map of tags to add to all resources.", "default": "{}"}, {"name": "worker_security_group_id", "description": "If provided, all workers will be attached to this security group. If not given, a security group will be created with necessary ingres/egress to work with the EKS cluster.", "default": "\"\""}, {"name": "kubeconfig_user_name", "description": "Name of the kubeconfig user.", "default": "\"aws\""}, {"name": "kubeconfig_context_name", "description": "Name of the kubeconfig context.", "default": "\"aws\""}, {"name": "kubeconfig_aws_authenticator_env_variables", "description": "Environment variables that should be used when executing the authenticator i.e. { AWS_PROFILE = \"eks\"}", "default": "{}"}, {"name": "cluster_security_group_id", "description": "If provided, the EKS cluster will be attached to this security group. If not given, a security group will be created with necessary ingres/egress to work with the workers and provide API access to your current IP/32.", "default": "\"\""}, {"name": "configure_kubectl_session", "description": "Configure the current session's kubectl to use the instantiated EKS cluster.", "default": "true"}, {"name": "vpc_id", "description": "VPC where the cluster and workers will be deployed.", "default": ""}, {"name": "worker_groups", "description": "A list of maps defining worker group configurations. See workers_group_defaults for valid keys.", "default": "[\n  {\n    \"name\": \"default\"\n  }\n]"}, {"name": "cluster_name", "description": "Name of the EKS cluster. Also used as a prefix in names of related resources.", "default": ""}, {"name": "worker_sg_ingress_from_port", "description": "Minimum port number from which pods will accept communication. Must be changed to a lower value if some pods in your cluster will expose a port lower than 1025 (e.g. 22, 80, or 443).", "default": "\"1025\""}, {"name": "kubeconfig_aws_authenticator_command", "description": "Command to use to to fetch AWS EKS credentials", "default": "\"heptio-authenticator-aws\""}, {"name": "cluster_version", "description": "Kubernetes version to use for the EKS cluster.", "default": "\"1.10\""}, {"name": "config_output_path", "description": "Determines where config files are placed if using configure_kubectl_session and you want config files to land outside the current working directory.", "default": "\"./\""}, {"name": "subnets", "description": "A list of subnets to place the EKS cluster and workers within.", "default": ""}, {"name": "workers_group_defaults", "description": "Default values for target groups as defined by the list of maps.", "default": "{\n  \"additional_userdata\": \"\",\n  \"ami_id\": \"\",\n  \"asg_desired_capacity\": \"1\",\n  \"asg_max_size\": \"3\",\n  \"asg_min_size\": \"1\",\n  \"ebs_optimized\": true,\n  \"instance_type\": \"m4.large\",\n  \"key_name\": \"\",\n  \"name\": \"count.index\",\n  \"pre_userdata\": \"\",\n  \"public_ip\": false\n}"}]}, "cloudposse/rds-cluster/aws": {"name": "rds-cluster", "url": "https://registry.terraform.io/modules/cloudposse/rds-cluster/aws", "provider": "aws", "downloads": 404, "description": "Terraform module to provision an RDS Aurora cluster for MySQL or Postgres", "source": "cloudposse/rds-cluster/aws", "args": [{"name": "subnets", "description": "List of VPC subnet IDs", "default": ""}, {"name": "db_name", "description": "Database name", "default": ""}, {"name": "engine_version", "description": "The version number of the database engine to use", "default": "\"\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}, {"name": "publicly_accessible", "description": "Set to true if you want your cluster to be publicly accessible (such as via QuickSight)", "default": "\"false\""}, {"name": "zone_id", "description": "Route53 parent zone ID. The module will create sub-domain DNS records in the parent zone for the DB master and replicas", "default": ""}, {"name": "vpc_id", "description": "VPC ID to create the cluster in (e.g. `vpc-a22222ee`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "apply_immediately", "description": "Specifies whether any cluster modifications are applied immediately, or during the next maintenance window", "default": "\"true\""}, {"name": "db_port", "description": "Database port", "default": "\"3306\""}, {"name": "cluster_family", "description": "The family of the DB cluster parameter group", "default": "\"aurora5.6\""}, {"name": "storage_encrypted", "description": "Set to true if you want your cluster to be encrypted at rest", "default": "\"false\""}, {"name": "skip_final_snapshot", "description": "Determines whether a final DB snapshot is created before the DB cluster is deleted", "default": "\"true\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "name", "description": "Name of the application", "default": ""}, {"name": "availability_zones", "description": "List of Availability Zones that instances in the DB cluster can be created in", "default": ""}, {"name": "instance_type", "description": "Instance type to use", "default": "\"db.t2.small\""}, {"name": "maintenance_window", "description": "Weekly time range during which system maintenance can occur, in UTC", "default": "\"wed:03:00-wed:04:00\""}, {"name": "snapshot_identifier", "description": "Specifies whether or not to create this cluster from a snapshot", "default": "\"\""}, {"name": "admin_password", "description": "(Required unless a snapshot_identifier is provided) Password for the master DB user", "default": ""}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "cluster_parameters", "description": "List of DB parameters to apply", "default": "[]"}, {"name": "engine", "description": "The name of the database engine to be used for this DB cluster. Valid values: `aurora`, `aurora-postgresql`", "default": "\"aurora\""}, {"name": "admin_user", "description": "(Required unless a snapshot_identifier is provided) Username for the master DB user", "default": "\"admin\""}, {"name": "retention_period", "description": "Number of days to retain backups for", "default": "\"5\""}, {"name": "backup_window", "description": "Daily time range during which the backups happen", "default": "\"07:00-09:00\""}, {"name": "iam_database_authentication_enabled", "description": "Specifies whether or mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.", "default": "\"false\""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "security_groups", "description": "List of security groups to be allowed to connect to the DB instance", "default": ""}, {"name": "cluster_size", "description": "Number of DB instances to create in the cluster", "default": "\"2\""}, {"name": "allowed_cidr_blocks", "description": "List of CIDR blocks allowed to access", "default": "[]"}]}, "scholzj/minikube/aws": {"name": "minikube", "url": "https://registry.terraform.io/modules/scholzj/minikube/aws", "provider": "aws", "downloads": 398, "description": "Terraform module for single node Kubernetes instance bootstrapped using kubeadm", "source": "scholzj/minikube/aws", "args": [{"name": "cluster_name", "description": "Name of the AWS Minikube cluster - will be used to name all created resources", "default": ""}, {"name": "tags", "description": "Tags used for the AWS resources created by this template", "default": ""}, {"name": "addons", "description": "list of YAML files with Kubernetes addons which should be installed", "default": ""}, {"name": "aws_instance_type", "description": "Type of instance", "default": "\"t2.medium\""}, {"name": "hosted_zone", "description": "Hosted zone to be used for the alias", "default": ""}, {"name": "ami_image_id", "description": "ID of the AMI image which should be used. If empty, the latest CentOS 7 image will be used. See README.md for AMI image requirements.", "default": "\"\""}, {"name": "aws_region", "description": "Region where Cloud Formation is created", "default": "\"eu-central-1\""}, {"name": "aws_subnet_id", "description": "The subnet-id to be used for the instance", "default": ""}, {"name": "ssh_public_key", "description": "Path to the pulic part of SSH key which should be used for the instance", "default": "\"~/.ssh/id_rsa.pub\""}, {"name": "hosted_zone_private", "description": "Is the hosted zone public or private", "default": "false"}]}, "cloudposse/label/null": {"name": "label", "url": "https://registry.terraform.io/modules/cloudposse/label/null", "provider": "null", "downloads": 384, "description": "Terraform Module to define a consistent naming convention by (namespace, stage, name, [attributes])", "source": "cloudposse/label/null", "args": [{"name": "namespace", "description": "Namespace, which could be your organization name, e.g. 'cp' or 'cloudposse'", "default": ""}, {"name": "stage", "description": "Stage, e.g. 'prod', 'staging', 'dev', or 'test'", "default": ""}, {"name": "name", "description": "Solution name, e.g. 'app' or 'jenkins'", "default": ""}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. `map('BusinessUnit','XYZ')`", "default": "{}"}, {"name": "additional_tag_map", "description": "Additional tags for appending to each tag map.", "default": "{}"}]}, "alibaba/security-group/alicloud": {"name": "security-group", "url": "https://registry.terraform.io/modules/alibaba/security-group/alicloud", "provider": "alicloud", "downloads": 375, "description": "Terraform module which creates Security Group and sets rules for it on Alibaba Cloud.", "source": "alibaba/security-group/alicloud", "args": [{"name": "group_name", "description": "The security group name used to launch a new security group when 'group_id' is not specified.", "default": "\"TF_Security_Group\""}, {"name": "group_description", "description": "The security group descripton used to launch a new security group when 'group_id' is not specified.", "default": "\"TF_Security_Group\""}, {"name": "rule_directions", "description": "The security group rules direction used to set one or more rules.", "default": "[\n  \"ingress\"\n]"}, {"name": "ip_protocols", "description": "The security group rules ip protocol used to set one or more rules.", "default": "[\n  \"tcp\",\n  \"tcp\"\n]"}, {"name": "source_security_group_ids", "description": "The source/destination security group ids used to set one or more rules.", "default": "[]"}, {"name": "source_group_owner_accounts", "description": "The source/destination security group owner accounts used to set one or more rules.", "default": "[\n  \"\"\n]"}, {"name": "group_id", "description": "The security group id used to launch its rules.", "default": "\"\""}, {"name": "vpc_id", "description": "The vpc id used to launch vswitch, security group and instance.", "default": ""}, {"name": "policies", "description": "The security group policy used to set one or more rules.", "default": "[\n  \"accept\"\n]"}, {"name": "port_ranges", "description": "The security group rules port range used to set one or more rules.", "default": "[\n  \"-1/-1\"\n]"}, {"name": "priorities", "description": "The security group rules priority used to set one or more rules.", "default": "[\n  1\n]"}, {"name": "cidr_ips", "description": "The security group rules cidr_ip used to set one or more rules.", "default": "[]"}, {"name": "region", "description": "The region to launch resources.", "default": "\"cn-hangzhou\""}]}, "zoitech/account/aws": {"name": "account", "url": "https://registry.terraform.io/modules/zoitech/account/aws", "provider": "aws", "downloads": 355, "description": "Terraform module which setup the most generic aws-accounts settings.", "source": "zoitech/account/aws", "args": [{"name": "trail_bucket_default_encryption", "description": "Defines if the Bucket is encrypted, defaults to AES256", "default": "\"AES256\""}, {"name": "create_ec2_limit_policy_name", "description": "Name of the IAM_Policy for EC2 Limit", "default": "\"AmazonEC2LimitInstanceCreation\""}, {"name": "create_ec2_limit_policy_type", "description": "Type of EC2 Instances, for example, xlarge; wildcards can be used", "default": "\"*xlarge\""}, {"name": "create_marketplace_disable_policy_name", "description": "Disables Access to marketplace software", "default": "\"deny_marketplace\""}, {"name": "guardduty_enable", "description": "Defines if guardduty should be enabled.", "default": "0"}, {"name": "password_max_age", "description": "The maximum age before a password will expire.", "default": "0"}, {"name": "trail_bucketname", "description": "Name of the cloudtrail bucket. Will defaults to <account-id>-logs.", "default": "\"\""}, {"name": "trail_bucketname_create", "description": "Defines if the bucket should be created.", "default": "1"}, {"name": "create_rds_limit_policy_type", "description": "Type of RDS Instances, for example, xlarge; wildcards can be used", "default": "\"*xlarge\""}, {"name": "create_reserved_instances_limit_policy_name", "description": "Name of the IAM_Policy for Reserved Instances Limit", "default": "\"AmazonRILimitInstanceCreation\""}, {"name": "password_reuse_prevention", "description": "Prevent reuse of the given amount of passwords.", "default": "10"}, {"name": "trail_bucket_default_encryption_key", "description": "Defines if the KMS encryption key, used if trail_bucket_default_encryption is set to aws:kms", "default": "\"\""}, {"name": "create_rds_limit_policy_name", "description": "Name of the IAM_Policy for RDS Limit", "default": "\"AmazonRDSLimitInstanceCreation\""}, {"name": "create_rds_limit_policy", "description": "Activate (1) or deactivate (0) this policy", "default": "\"0\""}, {"name": "create_reserved_instances_limit_policy", "description": "Activate (1) or deactivate (0) this policy", "default": "\"0\""}, {"name": "password_hard_expiry", "description": "Requires administrative reset of the user after expiring.", "default": "false"}, {"name": "name_tag_name", "description": "Name of the 'name' tag that is added to, for example, the S3 resources", "default": "\"Name\""}, {"name": "create_ec2_limit_policy", "description": "Activate (1) or deactivate (0) this policy", "default": "\"0\""}, {"name": "trail_name", "description": "Name of the cloudtrail trail.", "default": "\"Default\""}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "create_marketplace_disable_policy", "description": "Activate (1) or deactivate (0) this policy", "default": "\"0\""}, {"name": "aws_region", "description": "The AWS region to deploy into (e.g. us-east-1).", "default": "\"eu-central-1\""}, {"name": "account_name", "description": "The name of the account.", "default": "\"not_set\""}, {"name": "password_min_length", "description": "The minimal length of passwords.", "default": "10"}]}, "coreos/kubernetes/azurerm": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/coreos/kubernetes/azurerm", "provider": "azurerm", "downloads": 350, "description": "Install a Kubernetes cluster the CoreOS Tectonic Way: HA, self-hosted, RBAC, etcd Operator, and more", "source": "coreos/kubernetes/azurerm", "args": [{"name": "tectonic_config_version", "description": "(internal) This declares the version of the global configuration variables.\nIt has no impact on generated assets but declares the version contract of the configuration.\n", "default": "\"1.0\""}, {"name": "tectonic_image_re", "description": "(internal) Regular expression used to extract repo and tag components\n", "default": "\"/^([^/]+/[^/]+/[^/]+):(.*)$/\""}, {"name": "tectonic_container_images", "description": "(internal) Container images to use", "default": "{\n  \"addon_resizer\": \"gcr.io/google_containers/addon-resizer:2.1\",\n  \"awscli\": \"quay.io/coreos/awscli:025a357f05242fdad6a81e8a6b520098aa65a600\",\n  \"bootkube\": \"quay.io/coreos/bootkube:v0.8.1\",\n  \"calico\": \"quay.io/calico/node:v2.6.1\",\n  \"calico_cni\": \"quay.io/calico/cni:v1.11.0\",\n  \"console\": \"quay.io/coreos/tectonic-console:v5.0.4\",\n  \"error_server\": \"quay.io/coreos/tectonic-error-server:1.1\",\n  \"etcd\": \"quay.io/coreos/etcd:v3.1.8\",\n  \"etcd_operator\": \"quay.io/coreos/etcd-operator:v0.5.0\",\n  \"flannel\": \"quay.io/coreos/flannel:v0.8.0-amd64\",\n  \"flannel_cni\": \"quay.io/coreos/flannel-cni:v0.2.0\",\n  \"gcloudsdk\": \"google/cloud-sdk:178.0.0-alpine\",\n  \"heapster\": \"gcr.io/google_containers/heapster:v1.4.1\",\n  \"hyperkube\": \"quay.io/coreos/hyperkube:v1.8.9_coreos.1\",\n  \"identity\": \"quay.io/coreos/dex:v2.8.1\",\n  \"ingress_controller\": \"quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.9.0-beta.17\",\n  \"kenc\": \"quay.io/coreos/kenc:0.0.2\",\n  \"kube_version\": \"quay.io/coreos/kube-version:0.1.0\",\n  \"kube_version_operator\": \"quay.io/coreos/kube-version-operator:v1.8.9-kvo.2\",\n  \"kubedns\": \"gcr.io/google_containers/k8s-dns-kube-dns-amd64:1.14.5\",\n  \"kubedns_sidecar\": \"gcr.io/google_containers/k8s-dns-sidecar-amd64:1.14.5\",\n  \"kubednsmasq\": \"gcr.io/google_containers/k8s-dns-dnsmasq-nanny-amd64:1.14.5\",\n  \"node_agent\": \"quay.io/coreos/node-agent:cd69b4a0f65b0d3a3b30edfce3bb184fd2a22c26\",\n  \"pod_checkpointer\": \"quay.io/coreos/pod-checkpointer:e22cc0e3714378de92f45326474874eb602ca0ac\",\n  \"stats_emitter\": \"quay.io/coreos/tectonic-stats:6e882361357fe4b773adbf279cddf48cb50164c1\",\n  \"stats_extender\": \"quay.io/coreos/tectonic-stats-extender:487b3da4e175da96dabfb44fba65cdb8b823db2e\",\n  \"tectonic_alm_operator\": \"quay.io/coreos/tectonic-alm-operator:v0.3.0\",\n  \"tectonic_channel_operator\": \"quay.io/coreos/tectonic-channel-operator:0.6.2\",\n  \"tectonic_cluo_operator\": \"quay.io/coreos/tectonic-cluo-operator:v0.3.1\",\n  \"tectonic_etcd_operator\": \"quay.io/coreos/tectonic-etcd-operator:v0.0.2\",\n  \"tectonic_prometheus_operator\": \"quay.io/coreos/tectonic-prometheus-operator:v1.9.5\",\n  \"tectonic_torcx\": \"quay.io/coreos/tectonic-torcx:v0.2.0\"\n}"}, {"name": "tectonic_container_base_images", "description": "(internal) Base images of the components to use", "default": "{\n  \"addon_resizer\": \"quay.io/coreos/addon-resizer\",\n  \"alertmanager\": \"quay.io/prometheus/alertmanager\",\n  \"config_reload\": \"quay.io/coreos/configmap-reload\",\n  \"grafana\": \"quay.io/coreos/monitoring-grafana\",\n  \"grafana_watcher\": \"quay.io/coreos/grafana-watcher\",\n  \"kube_rbac_proxy\": \"quay.io/coreos/kube-rbac-proxy\",\n  \"kube_state_metrics\": \"quay.io/coreos/kube-state-metrics\",\n  \"node_exporter\": \"quay.io/prometheus/node-exporter\",\n  \"prometheus\": \"quay.io/prometheus/prometheus\",\n  \"prometheus_config_reload\": \"quay.io/coreos/prometheus-config-reloader\",\n  \"prometheus_operator\": \"quay.io/coreos/prometheus-operator\",\n  \"tectonic_monitoring_auth\": \"quay.io/coreos/tectonic-monitoring-auth\"\n}"}, {"name": "tectonic_versions", "description": "(internal) Versions of the components to use", "default": "{\n  \"alm\": \"0.3.0\",\n  \"cluo\": \"0.3.1\",\n  \"etcd\": \"3.1.8\",\n  \"kubernetes\": \"1.8.9+tectonic.1\",\n  \"monitoring\": \"1.9.5\",\n  \"tectonic\": \"1.8.9-tectonic.1\",\n  \"tectonic-etcd\": \"0.0.1\"\n}"}, {"name": "tectonic_service_cidr", "description": "(optional) This declares the IP range to assign Kubernetes service cluster IPs in CIDR notation.\nThe maximum size of this IP range is /12\n", "default": "\"10.3.0.0/16\""}, {"name": "tectonic_cluster_cidr", "description": "(optional) This declares the IP range to assign Kubernetes pod IPs in CIDR notation.", "default": "\"10.2.0.0/16\""}, {"name": "tectonic_master_count", "description": "The number of master nodes to be created.\nThis applies only to cloud platforms.\n", "default": "\"1\""}, {"name": "tectonic_worker_count", "description": "The number of worker nodes to be created.\nThis applies only to cloud platforms.\n", "default": "\"3\""}, {"name": "tectonic_etcd_count", "description": "The number of etcd nodes to be created.\nIf set to zero, the count of etcd nodes will be determined automatically.\n\nNote: This is not supported on bare metal.\n", "default": "\"0\""}, {"name": "tectonic_etcd_servers", "description": "(optional) List of external etcd v3 servers to connect with (hostnames/IPs only).\nNeeds to be set if using an external etcd cluster.\nNote: If this variable is defined, the installer will not create self-signed certs.\nTo provide a CA certificate to trust the etcd servers, set \"tectonic_etcd_ca_cert_path\".\n\nExample: `[\"etcd1\", \"etcd2\", \"etcd3\"]`\n", "default": "[]"}, {"name": "tectonic_etcd_tls_enabled", "description": "(optional) If set to `true`, all etcd endpoints will be configured to use the \"https\" scheme.\n\nNote: If `tectonic_experimental` is set to `true` this variable has no effect, because the experimental self-hosted etcd always uses TLS.\n", "default": "true"}, {"name": "tectonic_etcd_ca_cert_path", "description": "(optional) The path of the file containing the CA certificate for TLS communication with etcd.\n\nNote: This works only when used in conjunction with an external etcd cluster.\nIf set, the variable `tectonic_etcd_servers` must also be set.\n", "default": "\"/dev/null\""}, {"name": "tectonic_etcd_client_cert_path", "description": "(optional) The path of the file containing the client certificate for TLS communication with etcd.\n\nNote: This works only when used in conjunction with an external etcd cluster.\nIf set, the variables `tectonic_etcd_servers`, `tectonic_etcd_ca_cert_path`, and `tectonic_etcd_client_key_path` must also be set.\n", "default": "\"/dev/null\""}, {"name": "tectonic_etcd_client_key_path", "description": "(optional) The path of the file containing the client key for TLS communication with etcd.\n\nNote: This works only when used in conjunction with an external etcd cluster.\nIf set, the variables `tectonic_etcd_servers`, `tectonic_etcd_ca_cert_path`, and `tectonic_etcd_client_cert_path` must also be set.\n", "default": "\"/dev/null\""}, {"name": "tectonic_base_domain", "description": "The base DNS domain of the cluster. It must NOT contain a trailing period. Some\nDNS providers will automatically add this if necessary.\n\nExample: `openstack.dev.coreos.systems`.\n\nNote: This field MUST be set manually prior to creating the cluster.\nThis applies only to cloud platforms.\n\n[Azure-specific NOTE]\nTo use Azure-provided DNS, `tectonic_base_domain` should be set to `\"\"`\nIf using DNS records, ensure that `tectonic_base_domain` is set to a properly configured external DNS zone.\nInstructions for configuring delegated domains for Azure DNS can be found here: https://docs.microsoft.com/en-us/azure/dns/dns-delegate-domain-azure-dns\n", "default": ""}, {"name": "tectonic_cluster_name", "description": "The name of the cluster.\nIf used in a cloud-environment, this will be prepended to `tectonic_base_domain` resulting in the URL to the Tectonic console.\n\nNote: This field MUST be set manually prior to creating the cluster.\nWarning: Special characters in the name like '.' may cause errors on OpenStack platforms due to resource name constraints.\n", "default": ""}, {"name": "tectonic_pull_secret_path", "description": "The path the pull secret file in JSON format.\nThis is known to be a \"Docker pull secret\" as produced by the docker login [1] command.\nA sample JSON content is shown in [2].\nYou can download the pull secret from your Account overview page at [3].\n\n[1] https://docs.docker.com/engine/reference/commandline/login/\n\n[2] https://coreos.com/os/docs/latest/registry-authentication.html#manual-registry-auth-setup\n\n[3] https://account.coreos.com/overview\n\nNote: This field MUST be set manually prior to creating the cluster unless `tectonic_vanilla_k8s` is set to `true`.\n", "default": "\"\""}, {"name": "tectonic_license_path", "description": "The path to the tectonic licence file.\nYou can download the Tectonic license file from your Account overview page at [1].\n\n[1] https://account.coreos.com/overview\n\nNote: This field MUST be set manually prior to creating the cluster unless `tectonic_vanilla_k8s` is set to `true`.\n", "default": "\"\""}, {"name": "tectonic_container_linux_channel", "description": "(optional) The Container Linux update channel.\n\nExamples: `stable`, `beta`, `alpha`\n", "default": "\"stable\""}, {"name": "tectonic_container_linux_version", "description": "The Container Linux version to use. Set to `latest` to select the latest available version for the selected update channel.\n\nExamples: `latest`, `1465.6.0`\n", "default": "\"latest\""}, {"name": "tectonic_update_server", "description": "(internal) The URL of the Tectonic Omaha update server", "default": "\"https://tectonic.update.core-os.net\""}, {"name": "tectonic_update_channel", "description": "(internal) The Tectonic Omaha update channel", "default": "\"tectonic-1.8-production\""}, {"name": "tectonic_update_app_id", "description": "(internal) The Tectonic Omaha update App ID", "default": "\"6bc7b986-4654-4a0f-94b3-84ce6feb1db4\""}, {"name": "tectonic_admin_email", "description": "(internal) The e-mail address used to:\n1. login as the admin user to the Tectonic Console.\n2. generate DNS zones for some providers.\n\nNote: This field MUST be in all lower-case e-mail address format and set manually prior to creating the cluster.\n", "default": ""}, {"name": "tectonic_admin_password", "description": "(internal) The admin user password to login to the Tectonic Console.\n\nNote: This field MUST be set manually prior to creating the cluster. Backslashes and double quotes must\nalso be escaped.\n", "default": ""}, {"name": "tectonic_ca_cert", "description": "(optional) The content of the PEM-encoded CA certificate, used to generate Tectonic Console's server certificate.\nIf left blank, a CA certificate will be automatically generated.\n", "default": "\"\""}, {"name": "tectonic_ca_key", "description": "(optional) The content of the PEM-encoded CA key, used to generate Tectonic Console's server certificate.\nThis field is mandatory if `tectonic_ca_cert` is set.\n", "default": "\"\""}, {"name": "tectonic_ca_key_alg", "description": "(optional) The algorithm used to generate tectonic_ca_key.\nThe default value is currently recommended.\nThis field is mandatory if `tectonic_ca_cert` is set.\n", "default": "\"RSA\""}, {"name": "tectonic_tls_validity_period", "description": "Validity period of the self-signed certificates (in hours).\nDefault is 3 years.\nThis setting is ignored if user provided certificates are used.\n", "default": "\"26280\""}, {"name": "tectonic_vanilla_k8s", "description": "If set to true, a vanilla Kubernetes cluster will be deployed, omitting any Tectonic assets.\n", "default": "false"}, {"name": "tectonic_stats_url", "description": "(internal) The Tectonic statistics collection URL to which to report.", "default": "\"https://stats-collector.tectonic.com\""}, {"name": "tectonic_ddns_server", "description": "(optional) This only applies if you use the modules/dns/ddns module.\n\nSpecifies the RFC2136 Dynamic DNS server IP/host to register IP addresses to.\n", "default": "\"\""}, {"name": "tectonic_ddns_key_name", "description": "(optional) This only applies if you use the modules/dns/ddns module.\n\nSpecifies the RFC2136 Dynamic DNS server key name.\n", "default": "\"\""}, {"name": "tectonic_ddns_key_algorithm", "description": "(optional) This only applies if you use the modules/dns/ddns module.\n\nSpecifies the RFC2136 Dynamic DNS server key algorithm.\n", "default": "\"\""}, {"name": "tectonic_ddns_key_secret", "description": "(optional) This only applies if you use the modules/dns/ddns module.\n\nSpecifies the RFC2136 Dynamic DNS server key secret.\n", "default": "\"\""}, {"name": "tectonic_networking", "description": "(optional) Configures the network to be used in Tectonic. One of the following values can be used:\n\n- \"flannel\": enables overlay networking only. This is implemented by flannel using VXLAN.\n\n- \"canal\": [ALPHA] enables overlay networking including network policy. Overlay is implemented by flannel using VXLAN. Network policy is implemented by Calico.\n\n- \"calico\": [ALPHA] enables BGP based networking. Routing and network policy is implemented by Calico. Note this has been tested on baremetal installations only.\n", "default": "\"flannel\""}, {"name": "tectonic_self_hosted_etcd", "description": "(internal) [ALPHA] If set to one of the following values, self-hosted etcd is deployed:\n\n- \"enabled\": Deploys a self-hosted etcd cluster.\n\n- \"pv_backup\": Deploys a self-hosted etcd cluster including backups to Persistence Volumes.\n`tectonic_etcd_backup_size` and `tectonic_etcd_backup_storage_class` must be configured when using this setting.\n", "default": "\"\""}, {"name": "tectonic_etcd_backup_size", "description": "(optional) The size in MB of the PersistentVolume used for handling etcd backups.", "default": "\"512\""}, {"name": "tectonic_etcd_backup_storage_class", "description": "(optional) The name of an existing Kubernetes StorageClass that will be used for handling etcd backups.", "default": "\"\""}, {"name": "tectonic_bootstrap_upgrade_cl", "description": "(internal) Whether to trigger a ContainerLinux upgrade on node bootstrap.", "default": "\"true\""}, {"name": "tectonic_kubelet_debug_config", "description": "(internal) debug flags for the kubelet (used in CI only)", "default": "\"\""}, {"name": "tectonic_custom_ca_pem_list", "description": "(optional) A list of PEM encoded CA files that will be installed in /etc/ssl/certs on etcd, master, and worker nodes.\n", "default": "[]"}, {"name": "tectonic_iscsi_enabled", "description": "(optional) Start iscsid.service to enable iscsi volume attachment.", "default": "\"false\""}, {"name": "tectonic_http_proxy_address", "description": "(optional) HTTP proxy address.\n\nExample: `http://myproxy.example.com`\n", "default": "\"\""}, {"name": "tectonic_https_proxy_address", "description": "(optional) HTTPS proxy address.\n\nExample: `http://myproxy.example.com`\n", "default": "\"\""}, {"name": "tectonic_no_proxy", "description": "(optional) List of local endpoints that will not use HTTP proxy.\n\nExample: `[\"127.0.0.1\",\"localhost\",\".example.com\",\"10.3.0.1\"]`\n", "default": "[]"}, {"name": "tectonic_ntp_servers", "description": "(optional) If left blank, the default Container Linux NTP servers will be used.\nA list of NTP servers to be used for time synchronization on the cluster nodes.\n", "default": "[]"}, {"name": "tectonic_nfs_config_file", "description": "(optional) the path to an NFS configuration file to be placed in /etc/conf.d/nfs\nfile on the CL nodes.\n", "default": "\"\""}, {"name": "tectonic_proxy_exclusive_units", "description": "(optional) When set to true, it restricts the application of proxy settings to processes started through systemd units.\nGlobal proxy settings will not be affected in this case.\nWhen set to false, the proxy settings will apply globally, including to all processes lauched by users.\n", "default": "false"}, {"name": "tectonic_azure_config_version", "description": "(internal) This declares the version of the Azure configuration variables.\nIt has no impact on generated assets but declares the version contract of the configuration.\n", "default": "\"1.1\""}, {"name": "tectonic_azure_ssh_network_internal", "description": "(optional) Network (internal) to allow SSH access from. Maps to `source_address_prefix` in Azure.\nDefaults to `VirtualNetwork`. Should be internal to Azure environment.\nAllowed values: [network CIDR (i.e., 10.0.0.0/16) \\| `VirtualNetwork` \\| `Internet` \\| `*` ]\n", "default": "\"VirtualNetwork\""}, {"name": "tectonic_azure_ssh_network_external", "description": "(optional) Network (external) to allow SSH access from. Maps to `source_address_prefix` in Azure.\nDefaults to `*`. Can be external to Azure environment.\nAllowed values: [network CIDR (i.e., 10.0.0.0/16) \\| `VirtualNetwork` \\| `Internet` \\| `*` ]\n", "default": "\"*\""}, {"name": "tectonic_azure_location", "description": "(internal) An Azure location where the cluster will be built.\nUse the location name as returned in the *Name* column by `az account list-locations` CLI command.\nLowercase string with no spaces between words. Example: southcentralus\n", "default": ""}, {"name": "tectonic_azure_ssh_key", "description": "(required) Path to an SSH public key file to be provisioned as the SSH key for the 'core' user.", "default": ""}, {"name": "tectonic_azure_master_vm_size", "description": "(optional) Instance size for the master node(s). Example: Standard_DS2_v2.", "default": "\"Standard_DS2_v2\""}, {"name": "tectonic_azure_worker_vm_size", "description": "(optional) Instance size for the worker node(s). Example: Standard_DS2_v2.", "default": "\"Standard_DS2_v2\""}, {"name": "tectonic_azure_etcd_vm_size", "description": "(optional) Instance size for the etcd node(s). Example: Standard_DS2_v2.", "default": "\"Standard_DS2_v2\""}, {"name": "tectonic_azure_master_storage_type", "description": "(optional) Storage account type for the master node(s). Example: Premium_LRS.\nUsing Premium storage is constrained by the of instance specified in 'tectonic_azure_master_vm_size'.\nSee https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage#supported-vms\n", "default": "\"Premium_LRS\""}, {"name": "tectonic_azure_master_root_volume_size", "description": "The size of the volume in gigabytes for the root block device of master nodes.", "default": "\"32\""}, {"name": "tectonic_azure_worker_storage_type", "description": "(optional) Storage account type for the worker node(s). Example: Premium_LRS.\nUsing Premium storage is constrained by the of instance specified in 'tectonic_azure_worker_vm_size'.\nSee https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage#supported-vms\n", "default": "\"Premium_LRS\""}, {"name": "tectonic_azure_worker_root_volume_size", "description": "The size of the volume in gigabytes for the root block device of worker nodes.", "default": "\"32\""}, {"name": "tectonic_azure_etcd_storage_type", "description": "(optional) Storage account type for the etcd node(s). Example: Premium_LRS.\nUsing Premium storage is constrained by the of instance specified in 'tectonic_azure_etcd_vm_size'.\nSee https://docs.microsoft.com/en-us/azure/storage/storage-premium-storage#supported-vms\n", "default": "\"Premium_LRS\""}, {"name": "tectonic_azure_etcd_root_volume_size", "description": "The size of the volume in gigabytes for the root block device of etcd nodes.", "default": "\"32\""}, {"name": "tectonic_azure_vnet_cidr_block", "description": "(optional) Range of IP addresses assigned to the Virtual Network in which the cluster nodes run.\nThis should not overlap with any other networks, such as the Kubernetes cluster (pod) range,\nservice range or a private datacenter connected via ExpressRoute.\"\n", "default": "\"10.0.0.0/16\""}, {"name": "tectonic_azure_external_vnet_id", "description": "(optional) Resource ID of an existing Virtual Network to launch nodes into.\nLeave blank to create a new Virtual Network.\n\nNote this is the complete ID as returned in the \"id\" field by the Azure client, not just the name of the resource.\n\nExample: /subscriptions/b520eabf-d6c0-4757-8a5e-0fa7d2fe12b5/resourceGroups/my-k8s-cluster/providers/Microsoft.Network/virtualNetworks/my-k8s-vnet\n", "default": "\"\""}, {"name": "tectonic_azure_external_master_subnet_id", "description": "(optional) Subnet ID within an existing VNet to deploy master nodes into.\nRequired to use an existing VNet.\n\nNote this is the complete ID as returned in the \"id\" field by the Azure client, not just the name of the resource.\n\nExample: \"/subscriptions/b520eabf-d6c0-4757-8a5e-0fa7d2fe12b5/resourceGroups/my-k8s-cluster/providers/Microsoft.Network/virtualNetworks/test-pre-vnet/subnets/my-k8s-subnet\n", "default": "\"\""}, {"name": "tectonic_azure_external_worker_subnet_id", "description": "(optional) Subnet ID within an existing VNet to deploy worker nodes into.\nRequired to use an existing VNet.\n\nNote this is the complete ID as returned in the \"id\" field by the Azure client, not just the name of the resource.\n\nExample: \"/subscriptions/b520eabf-d6c0-4757-8a5e-0fa7d2fe12b5/resourceGroups/my-k8s-cluster/providers/Microsoft.Network/virtualNetworks/test-pre-vnet/subnets/my-k8s-subnet\n", "default": "\"\""}, {"name": "tectonic_azure_external_resource_group", "description": "(optional) Name of an external resource group to place created resources in.\nLeave blank to have a new one created.\n", "default": "\"\""}, {"name": "tectonic_azure_external_nsg_master_id", "description": "(optional) The ID of the external Network Security Group used for masters.\nLeave blank to have a new one created.\n\nNote this is the complete ID as returned in the \"id\" field by the Azure client, not just the name of the resource.\n\nExample: \"/subscriptions/b520eabf-d6c0-4757-8a5e-0fa7d2fe12b5/resourceGroups/my-k8s-cluster/providers/Microsoft.Network/networkSecurityGroups/my-master-nsg\n", "default": "\"\""}, {"name": "tectonic_azure_external_nsg_worker_id", "description": "(optional) The ID of the external Network Security Group used for workers.\nLeave blank to have a new one created.\n\nNote this is the complete ID as returned in the \"id\" field by the Azure client, not just the name of the resource.\n\nExample: \"/subscriptions/b520eabf-d6c0-4757-8a5e-0fa7d2fe12b5/resourceGroups/my-k8s-cluster/providers/Microsoft.Network/networkSecurityGroups/my-worker-nsg\n", "default": "\"\""}, {"name": "tectonic_azure_external_dns_zone_id", "description": "(optional) The ID of the external Azure DNS zone used for nodes & endpoints FQDNs.\nRequired when 'tectonic_base_domain' is set.\nThis must be a pre-existing, properly configured Azure DNS zone that the Azure service principal running the Tectonic installer has permission to perform operations on.\n\nNote this is the complete ID as returned in the \"id\" field by the Azure client, not just the name of the resource.\n\nExample: \"/subscriptions/b520eabf-d6c0-4757-8a5e-0fa7d2fe12b5/resourceGroups/my-k8s-cluster/providers/Microsoft.Network/dnszones/my-k8s-dns\n", "default": "\"\""}, {"name": "tectonic_azure_cloud_environment", "description": "(optional) Azure cloud environment to use. See\nhttps://github.com/Azure/go-autorest/blob/ec5f4903f77ed9927ac95b19ab8e44ada64c1356/autorest/azure/environments.go#L13\nfor available environments.\n", "default": "\"AZUREPUBLICCLOUD\""}, {"name": "tectonic_azure_client_secret", "description": "(internal) The client secret to use.", "default": ""}, {"name": "tectonic_azure_extra_tags", "description": "(optional) A map of extra Azure tags to be applied to created resources.\nNOTE: Tags MUST NOT contain reserved characters '<,>,%,&,\\,?,/' or control characters.\n", "default": "{}"}, {"name": "tectonic_azure_private_cluster", "description": "(optional) Setting this to true will result in NO public facing endpoints being created. All traffic is contained within the VNET.\nA VNET with an already configured and active VPN connection is required and needs to be supplied via 'tectonic_azure_external_vnet_id'.\nDNS is currently required, either the Azure managed one or configured via the generic DNS module.\n", "default": "false"}, {"name": "tectonic_azure_location_fault_domains", "description": "(internal) This mapping is for internal use only. It should not be overriden by users.\nIt holds the correspondent number of fault domains for each location,\nbecause Azure doesn't provide an API call to query this data per location.\nThe latest version of this data is always available at this location:\nhttps://docs.microsoft.com/en-us/azure/virtual-machines/windows/manage-availability\n", "default": "{\n  \"australiaeast\": 2,\n  \"australiasoutheast\": 2,\n  \"brazilsouth\": 2,\n  \"canadacentral\": 2,\n  \"canadaeast\": 2,\n  \"centralindia\": 2,\n  \"centralus\": 3,\n  \"eastasia\": 2,\n  \"eastus\": 3,\n  \"eastus2\": 3,\n  \"japaneast\": 2,\n  \"japanwest\": 2,\n  \"koreacentral\": 2,\n  \"koreasouth\": 2,\n  \"northcentralus\": 3,\n  \"northeurope\": 3,\n  \"southcentralus\": 3,\n  \"southeastasia\": 2,\n  \"southindia\": 2,\n  \"uksouth\": 2,\n  \"ukwest\": 2,\n  \"usdodcentral\": 2,\n  \"usdodeast\": 2,\n  \"usgovarizona\": 2,\n  \"usgovtexas\": 2,\n  \"usgovvirginia\": 2,\n  \"westcentralus\": 2,\n  \"westeurope\": 3,\n  \"westindia\": 2,\n  \"westus\": 3,\n  \"westus2\": 2\n}"}]}, "kchugalinskiy/assert/null": {"name": "assert", "url": "https://registry.terraform.io/modules/kchugalinskiy/assert/null", "provider": "null", "downloads": 344, "description": "Terraform assertion module", "source": "kchugalinskiy/assert/null", "args": [{"name": "condition", "description": "Boolean condition which is assumed to be true", "default": ""}]}, "buildo/website/aws": {"name": "website", "url": "https://registry.terraform.io/modules/buildo/website/aws", "provider": "aws", "downloads": 324, "description": "Terraform module for creating static websites hosted on S3 and served via CloudFront", "source": "buildo/website/aws", "args": [{"name": "domain", "description": "The domain where to host the site. This must be the naked domain, e.g. `example.com`", "default": ""}, {"name": "enable_health_check", "description": "If true, it creates a Route53 health check that monitors the www endpoint and an alarm that triggers whenever it's not reachable. Please note this comes at an extra monthly cost on your AWS account", "default": "\"0\""}, {"name": "health_check_alarm_sns_topics", "description": "A list of SNS topics to notify whenever the health check fails or comes back to normal", "default": "[]"}, {"name": "enable_gzip", "description": "Whether to make CloudFront automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header", "default": "\"1\""}]}, "anoff/functionapp/azurerm": {"name": "functionapp", "url": "https://registry.terraform.io/modules/anoff/functionapp/azurerm", "provider": "azurerm", "downloads": 322, "description": "Deploy a dedicated or consumption based Function App with all dependencies and minimal config", "source": "anoff/functionapp/azurerm", "args": [{"name": "location", "description": "Region where the resources are created.", "default": ""}, {"name": "name", "description": "The name of the function app", "default": ""}, {"name": "plan_type", "description": "What kind of plan to use (dedicated or consumption)", "default": ""}, {"name": "resource_group_name", "description": "The name of the resource group in which the resources will be created, default = $function_app_name", "default": "\"\""}, {"name": "plan_settings", "description": "Definition of the dedicated plan to use", "default": "{\n  \"capacity\": 1,\n  \"kind\": \"Linux\",\n  \"size\": \"S1\"\n}"}, {"name": "storage_account_name", "description": "The name of the storage account for WebJobs, default = $function_app_name", "default": "\"\""}, {"name": "service_plan_name", "description": "The name of the App Service Plan, default = $function_app_name", "default": "\"\""}, {"name": "func_version", "description": "The runtime version associated with the Function App. Possible values are `~1` and `beta`", "default": "\"~1\""}, {"name": "app_settings", "description": "A key-value pair of App Settings", "default": "{}"}, {"name": "connection_string", "description": "A block containing connection string definitions, see https://www.terraform.io/docs/providers/azurerm/r/function_app.html#connection_string", "default": "[]"}, {"name": "client_affinity_enabled", "description": "Enable client affinity a.k.a. sticky sessions", "default": "false"}, {"name": "git_enabled", "description": "Set deployment mode to local git", "default": "true"}, {"name": "site_config", "description": "A key-value pair for Site Config", "default": "[\n  {\n    \"always_on\": true\n  }\n]"}]}, "kurron/api-gateway-deployment/aws": {"name": "api-gateway-deployment", "url": "https://registry.terraform.io/modules/kurron/api-gateway-deployment/aws", "provider": "aws", "downloads": 316, "description": "Terraform module that attaches an integration and deployment to established API Gateway resource", "source": "kurron/api-gateway-deployment/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "api_gateway_id", "description": "ID of the API Gateway, e.g. f6wayvdtd1", "default": ""}, {"name": "parent_resource_id", "description": "ID of the root resource, e.g. rx3pwr22hf", "default": ""}, {"name": "parent_method_http_method", "description": "The parent method's HTTP method, e.g. GET.", "default": ""}, {"name": "target_url", "description": "URL to proxy requests to, e.g. http://httpbin.org", "default": ""}, {"name": "child_resource_id", "description": "The child resource's identifier, e.g. rx3pwr22hf", "default": ""}, {"name": "child_method_http_method", "description": "The child method's HTTP method, e.g. GET.", "default": ""}, {"name": "stage_name", "description": "Current place in the API's lifecycle, e.g. production", "default": ""}, {"name": "stage_description", "description": "Short description of the stage, e.g. API released for public consumption", "default": ""}, {"name": "deployment_description", "description": "Short description of the first deployment, e.g. initial cut of the API", "default": ""}, {"name": "metrics_enabled", "description": "Specifies whether Amazon CloudWatch metrics are enabled for this method.", "default": ""}, {"name": "logging_level", "description": "Specifies the logging level for this method, which effects the log entries pushed to Amazon CloudWatch Logs. The available levels are OFF, ERROR, and INFO.", "default": ""}, {"name": "data_trace_enabled", "description": "Specifies whether data trace logging is enabled for this method, which effects the log entries pushed to Amazon CloudWatch Logs.", "default": ""}, {"name": "throttling_burst_limit", "description": "Specifies the throttling burst limit.", "default": ""}, {"name": "throttling_rate_limit", "description": "Specifies the throttling rate limit.", "default": ""}]}, "terraform-aws-modules/redshift/aws": {"name": "redshift", "url": "https://registry.terraform.io/modules/terraform-aws-modules/redshift/aws", "provider": "aws", "downloads": 312, "description": "Terraform module which creates Redshift resources on AWS", "source": "terraform-aws-modules/redshift/aws", "args": [{"name": "cluster_identifier", "description": "Custom name of the cluster", "default": ""}, {"name": "cluster_version", "description": "Version of Redshift engine cluster", "default": "\"1.0\""}, {"name": "cluster_node_type", "description": "Node Type of Redshift cluster", "default": ""}, {"name": "cluster_number_of_nodes", "description": "Number of nodes in the cluster (values greater than 1 will trigger 'cluster_type' of 'multi-node')", "default": "3"}, {"name": "cluster_database_name", "description": "The name of the database to create", "default": ""}, {"name": "cluster_master_username", "description": "", "default": ""}, {"name": "cluster_master_password", "description": "", "default": ""}, {"name": "cluster_port", "description": "", "default": "5439"}, {"name": "cluster_parameter_group", "description": "Parameter group, depends on DB engine used", "default": "\"redshift-1.0\""}, {"name": "cluster_iam_roles", "description": "A list of IAM Role ARNs to associate with the cluster. A Maximum of 10 can be associated to the cluster at any time.", "default": "[]"}, {"name": "publicly_accessible", "description": "Determines if Cluster can be publicly available (NOT recommended)", "default": "false"}, {"name": "redshift_subnet_group_name", "description": "The name of a cluster subnet group to be associated with this cluster. If not specified, new subnet will be created.", "default": "\"\""}, {"name": "parameter_group_name", "description": "The name of the parameter group to be associated with this cluster. If not specified new parameter group will be created.", "default": "\"\""}, {"name": "subnets", "description": "List of subnets DB should be available at. It might be one subnet.", "default": "[]"}, {"name": "vpc_security_group_ids", "description": "A list of Virtual Private Cloud (VPC) security groups to be associated with the cluster.", "default": "[]"}, {"name": "final_snapshot_identifier", "description": "(Optional) The identifier of the final snapshot that is to be created immediately before deleting the cluster. If this parameter is provided, 'skip_final_snapshot' must be false.", "default": "false"}, {"name": "skip_final_snapshot", "description": "If true (default), no snapshot will be made before deleting DB", "default": "true"}, {"name": "preferred_maintenance_window", "description": "When AWS can run snapshot, can't overlap with maintenance window", "default": "\"sat:10:00-sat:10:30\""}, {"name": "automated_snapshot_retention_period", "description": "How long will we retain backups", "default": "0"}, {"name": "enable_logging", "description": "Enables logging information such as queries and connection attempts, for the specified Amazon Redshift cluster.", "default": "false"}, {"name": "logging_bucket_name", "description": "(Optional, required when enable_logging is true) The name of an existing S3 bucket where the log files are to be stored. Must be in the same region as the cluster and the cluster must have read bucket and put object permissions.", "default": "false"}, {"name": "logging_s3_key_prefix", "description": "(Optional) The prefix applied to the log file names.", "default": "false"}, {"name": "wlm_json_configuration", "description": "", "default": "\"[{\\\"query_concurrency\\\": 5}]\""}, {"name": "tags", "description": "A mapping of tags to assign to all resources", "default": "{}"}, {"name": "encrypted", "description": "(Optional) If true , the data in the cluster is encrypted at rest.", "default": "false"}, {"name": "kms_key_id", "description": "(Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.", "default": "\"\""}, {"name": "enhanced_vpc_routing", "description": "(Optional) If true, enhanced VPC routing is enabled.", "default": "false"}, {"name": "allow_version_upgrade", "description": "(Optional) If true, major version upgrades can be applied during the maintenance window to the Amazon Redshift engine that is running on the cluster.", "default": "true"}]}, "connect-group/rds-finalsnapshot/aws": {"name": "rds-finalsnapshot", "url": "https://registry.terraform.io/modules/connect-group/rds-finalsnapshot/aws", "provider": "aws", "downloads": 312, "description": "Terraform module which manages RDS Final Snapshots (Database and Aurora Cluster)", "source": "connect-group/rds-finalsnapshot/aws", "args": [{"name": "database_name", "description": "(Optional) The name of the database to create when the DB instance is created. If this parameter is not specified, no database is created in the DB instance.", "default": "\"\""}, {"name": "instance_class", "description": "(Optional) The instance type of the RDS instance. Defaults to 'db.t2.micro'", "default": "\"db.t2.micro\""}, {"name": "instance_identifier", "description": "(Required) Unique Database Instance identifier.  IMPORTANT: This cannot be randomly generated, since to restore a snapshot you need to know the instance identifier!", "default": ""}, {"name": "override_restore_snapshot_identifier", "description": "(Optional) Use with care.  If present, the database will be restored from this snapshot instead of the last final snapshot.  If you have number_of_snapshot_to_retain=0, the final snapshot will be deleted forever!  This should usually be blank but could be overriddent from the command line to restore a database from another environment or previous (not most recent) final snapshot.", "default": "\"\""}, {"name": "number_of_snapshots_to_retain", "description": "(Optional) Number of final snapshots to retain after restoration.  Minimum 0.  Can be set to the string 'ALL' in which case snapshots are never deleted.  Default: 1", "default": "1"}, {"name": "username", "description": "(Required unless a snapshot_identifier is provided) Username for the master DB user.", "default": "\"\""}, {"name": "password", "description": "(Required unless a snapshot_identifier is provided) Password for the master DB user. Note that this may show up in logs, and it will be stored in the state file.", "default": "\"\""}, {"name": "allocated_storage", "description": "(Required unless a snapshot_identifier is provided) The allocated storage in gigabytes.", "default": "\"\""}]}, "kurron/alb-service-attachment/aws": {"name": "alb-service-attachment", "url": "https://registry.terraform.io/modules/kurron/alb-service-attachment/aws", "provider": "aws", "downloads": 309, "description": "Terraform module that simplifies the process of adding a new port and backing EC2 instances to an ALB.", "source": "kurron/alb-service-attachment/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "service_port", "description": "Port that the service is exposing to the load balancer, e.g. 8080", "default": ""}, {"name": "health_check_path", "description": "Health endpoint to use, e.g. /operations/health", "default": ""}, {"name": "vpc_id", "description": "ID of the VPC the service lives in.", "default": ""}, {"name": "alb_arn", "description": "ARN of the load balancer to attach to.", "default": ""}, {"name": "instance_ids", "description": "List of EC2 instance IDs that the balancer should forward traffic to.", "default": ""}, {"name": "instance_count", "description": "The number of instances contained in the instance_ids.  Terraform cannot calculate the value under some circumstances so we must provide it.", "default": ""}, {"name": "security_group_id", "description": "ID of the ALB's security group. We'll add an ingress rule for the service port.", "default": ""}, {"name": "vpc_cidr", "description": "CIDR range of VPC.  Ensures traffic only flows to the VPC, e.g. [10.20.0.0/16]", "default": ""}]}, "cloudposse/s3-website/aws": {"name": "s3-website", "url": "https://registry.terraform.io/modules/cloudposse/s3-website/aws", "provider": "aws", "downloads": 304, "description": "Terraform Module for Creating S3 backed Websites and Route53 DNS", "source": "cloudposse/s3-website/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "namespace", "description": "", "default": ""}, {"name": "stage", "description": "", "default": ""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "tags", "description": "", "default": "{}"}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "hostname", "description": "", "default": ""}, {"name": "parent_zone_id", "description": "ID of the hosted zone to contain the record", "default": "\"\""}, {"name": "parent_zone_name", "description": "Name of the hosted zone to contain the record", "default": "\"\""}, {"name": "index_document", "description": "", "default": "\"index.html\""}, {"name": "error_document", "description": "", "default": "\"404.html\""}, {"name": "routing_rules", "description": "", "default": "\"\""}, {"name": "cors_allowed_headers", "description": "", "default": "[\n  \"*\"\n]"}, {"name": "cors_allowed_methods", "description": "", "default": "[\n  \"GET\"\n]"}, {"name": "cors_allowed_origins", "description": "", "default": "[\n  \"*\"\n]"}, {"name": "cors_expose_headers", "description": "", "default": "[\n  \"ETag\"\n]"}, {"name": "cors_max_age_seconds", "description": "", "default": "\"3600\""}, {"name": "logs_standard_transition_days", "description": "Number of days to persist in the standard storage tier before moving to the glacier tier", "default": "\"30\""}, {"name": "logs_glacier_transition_days", "description": "Number of days after which to move the data to the glacier storage tier", "default": "\"60\""}, {"name": "logs_expiration_days", "description": "Number of days after which to expunge the objects", "default": "\"90\""}, {"name": "lifecycle_rule_enabled", "description": "", "default": "\"\""}, {"name": "prefix", "description": "", "default": "\"\""}, {"name": "noncurrent_version_transition_days", "description": "", "default": "\"30\""}, {"name": "noncurrent_version_expiration_days", "description": "", "default": "\"90\""}, {"name": "region", "description": "", "default": "\"\""}, {"name": "versioning_enabled", "description": "", "default": "\"\""}, {"name": "force_destroy", "description": "", "default": "\"\""}, {"name": "replication_source_principal_arns", "description": "(Optional) List of principal ARNs to grant replication access from different AWS accounts", "default": "[]"}, {"name": "deployment_arns", "description": "(Optional) Map of deployment ARNs to lists of S3 path prefixes to grant `deployment_actions` permissions", "default": "{}"}, {"name": "deployment_actions", "description": "List of actions to permit deployment ARNs to perform", "default": "[\n  \"s3:PutObject\",\n  \"s3:PutObjectAcl\",\n  \"s3:GetObject\",\n  \"s3:DeleteObject\",\n  \"s3:ListBucket\",\n  \"s3:ListBucketMultipartUploads\",\n  \"s3:GetBucketLocation\",\n  \"s3:AbortMultipartUpload\"\n]"}]}, "Azure/computegroup/azurerm": {"name": "computegroup", "url": "https://registry.terraform.io/modules/Azure/computegroup/azurerm", "provider": "azurerm", "downloads": 302, "description": "Terraform Azure RM Compute Group Module", "source": "Azure/computegroup/azurerm", "args": [{"name": "resource_group_name", "description": "The name of the resource group in which the resources will be created", "default": "\"vmssrg\""}, {"name": "location", "description": "The location where the resources will be created", "default": "\"\""}, {"name": "vm_size", "description": "Size of the Virtual Machine based on Azure sizing", "default": "\"Standard_A0\""}, {"name": "vmscaleset_name", "description": "The name of the VM scale set that will be created in Azure", "default": "\"vmscaleset\""}, {"name": "computer_name_prefix", "description": "The prefix that will be used for the hostname of the instances part of the VM scale set", "default": "\"vmss\""}, {"name": "managed_disk_type", "description": "Type of managed disk for the VMs that will be part of this compute group. Allowable values are 'Standard_LRS' or 'Premium_LRS'.", "default": "\"Standard_LRS\""}, {"name": "admin_username", "description": "The admin username of the VMSS that will be deployed", "default": "\"azureuser\""}, {"name": "admin_password", "description": "The admin password to be used on the VMSS that will be deployed. The password must meet the complexity requirements of Azure", "default": "\"\""}, {"name": "ssh_key", "description": "Path to the public key to be used for ssh access to the VM", "default": "\"~/.ssh/id_rsa.pub\""}, {"name": "nb_instance", "description": "Specify the number of vm instances", "default": "\"1\""}, {"name": "vnet_subnet_id", "description": "The subnet id of the virtual network on which the vm scale set will be connected", "default": ""}, {"name": "network_profile", "description": "The name of the network profile that will be used in the VM scale set", "default": "\"terraformnetworkprofile\""}, {"name": "vm_os_simple", "description": "Specify Ubuntu or Windows to get the latest version of each os", "default": "\"\""}, {"name": "vm_os_publisher", "description": "The name of the publisher of the image that you want to deploy", "default": "\"\""}, {"name": "vm_os_offer", "description": "The name of the offer of the image that you want to deploy", "default": "\"\""}, {"name": "vm_os_sku", "description": "The sku of the image that you want to deploy", "default": "\"\""}, {"name": "vm_os_version", "description": "The version of the image that you want to deploy.", "default": "\"latest\""}, {"name": "vm_os_id", "description": "The ID of the image that you want to deploy if you are using a custom image.", "default": "\"\""}, {"name": "load_balancer_backend_address_pool_ids", "description": "The id of the backend address pools of the loadbalancer to which the VM scale set is attached", "default": ""}, {"name": "cmd_extension", "description": "Command to be excuted by the custom script extension", "default": "\"echo hello\""}, {"name": "tags", "description": "A map of the tags to use on the resources that are deployed with this module.", "default": "{\n  \"source\": \"terraform\"\n}"}]}, "Smartbrood/ec2-instance/aws": {"name": "ec2-instance", "url": "https://registry.terraform.io/modules/Smartbrood/ec2-instance/aws", "provider": "aws", "downloads": 295, "description": "Terraform module to EC2 instance.", "source": "Smartbrood/ec2-instance/aws", "args": [{"name": "name", "description": "Name to be used on all resources as prefix", "default": ""}, {"name": "count", "description": "Number of instances to launch", "default": "1"}, {"name": "ami", "description": "ID of AMI to use for the instance", "default": ""}, {"name": "availability_zone", "description": "The AZ to start the instance in", "default": "\"\""}, {"name": "tenancy", "description": "The tenancy of the instance (if the instance is running in a VPC). Available values: default, dedicated, host.", "default": "\"default\""}, {"name": "ebs_optimized", "description": "If true, the launched EC2 instance will be EBS-optimized", "default": "false"}, {"name": "disable_api_termination", "description": "If true, enables EC2 Instance Termination Protection", "default": "false"}, {"name": "instance_initiated_shutdown_behavior", "description": "Shutdown behavior for the instance", "default": "\"\""}, {"name": "instance_type", "description": "The type of instance to start", "default": ""}, {"name": "key_name", "description": "The key name to use for the instance", "default": "\"\""}, {"name": "monitoring", "description": "If true, the launched EC2 instance will have detailed monitoring enabled", "default": "false"}, {"name": "vpc_security_group_ids", "description": "A list of security group IDs to associate with", "default": ""}, {"name": "subnet_id", "description": "The VPC Subnet ID to launch in", "default": "\"\""}, {"name": "associate_public_ip_address", "description": "If true, the EC2 instance will have associated public IP address", "default": "false"}, {"name": "private_ip", "description": "Private IP address to associate with the instance in a VPC", "default": "\"\""}, {"name": "source_dest_check", "description": "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs.", "default": "true"}, {"name": "user_data", "description": "The user data to provide when launching the instance", "default": "\"\""}, {"name": "iam_instance_profile", "description": "The IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile.", "default": "\"\""}, {"name": "ipv6_address_count", "description": "A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.", "default": "0"}, {"name": "ipv6_addresses", "description": "Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface", "default": "[]"}, {"name": "tags", "description": "A mapping of tags to assign to the resource", "default": "{}"}, {"name": "volume_tags", "description": "A mapping of tags to assign to the devices created by the instance at launch time", "default": "{}"}, {"name": "root_block_device", "description": "Customize details about the root block device of the instance.", "default": "[]"}, {"name": "ebs_block_device", "description": "Additional EBS block devices to attach to the instance", "default": "[]"}, {"name": "ephemeral_block_device", "description": "Customize Ephemeral (also known as Instance Store) volumes on the instance", "default": "[]"}, {"name": "network_interface", "description": "Customize network interfaces to be attached at instance boot time", "default": "[]"}]}, "kurron/api-gateway-binding/aws": {"name": "api-gateway-binding", "url": "https://registry.terraform.io/modules/kurron/api-gateway-binding/aws", "provider": "aws", "downloads": 287, "description": "Terraform module that attaches a proxy endpoint to an API Gateway", "source": "kurron/api-gateway-binding/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "api_gateway_id", "description": "ID of the API Gateway, e.g. f6wayvdtd1", "default": ""}, {"name": "api_gateway_root_resource_id", "description": "ID of the API Gateway's root resource, e.g. rx3pwr22hf", "default": ""}, {"name": "api_root_path", "description": "Base path of the API, e.g. api", "default": ""}, {"name": "root_api_key_required", "description": "If true, then an API key must be sent with each request when accessing the / resource, e.g. true", "default": ""}, {"name": "child_api_key_required", "description": "If true, then an API key must be sent with each request when accessing the /* resource, e.g. true", "default": ""}]}, "devops-workflow/sns-topics/aws": {"name": "sns-topics", "url": "https://registry.terraform.io/modules/devops-workflow/sns-topics/aws", "provider": "aws", "downloads": 285, "description": "Terraform module to manage AWS SNS topics", "source": "devops-workflow/sns-topics/aws", "args": [{"name": "names", "description": "List of SNS Topic Names", "default": ""}, {"name": "environment", "description": "Environment (ex: dev, qa, stage, prod)", "default": ""}, {"name": "namespaced", "description": "Namespace all resources (prefixed with the environment)?", "default": "true"}]}, "kurron/cloudwatch-log/aws": {"name": "cloudwatch-log", "url": "https://registry.terraform.io/modules/kurron/cloudwatch-log/aws", "provider": "aws", "downloads": 283, "description": "Terraform module that provides a simple CloudWatch Log setup", "source": "kurron/cloudwatch-log/aws", "args": [{"name": "region", "description": "The AWS region to deploy into, e.g. us-east-1", "default": ""}, {"name": "group_name", "description": "What to name the log group, e.g. docker-logs", "default": ""}, {"name": "retention_days", "description": "How many days to save logs for, e.g. 14", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for, e.g. violet-sloth", "default": ""}, {"name": "purpose", "description": "The reason for creating the group, e.g. Holds Docker logs", "default": ""}, {"name": "creator", "description": "Person creating these resources, e.g. operations@example.com", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags, e.g. let the Docker driver specify the stream", "default": ""}]}, "egarbi/target-group-alarms/aws": {"name": "target-group-alarms", "url": "https://registry.terraform.io/modules/egarbi/target-group-alarms/aws", "provider": "aws", "downloads": 283, "description": "This will add basic alarms for ecs services", "source": "egarbi/target-group-alarms/aws", "args": [{"name": "tg_arn_suffix", "description": "The Target Groups' ARN Suffix for which you need to add alerts", "default": ""}, {"name": "lb_arn", "description": "The ALB's ARN associated with all TGs (need to be the same)", "default": ""}, {"name": "sns_arn", "description": "SNS associated with the email, slack, push service paging your Team", "default": ""}, {"name": "time_response_thresholds", "description": "", "default": "{\n  \"period\": \"60\",\n  \"statistic\": \"Average\",\n  \"threshold\": \"30\"\n}"}, {"name": "fiveXXs_thresholds", "description": "", "default": "{\n  \"period\": \"60\",\n  \"statistic\": \"Average\",\n  \"threshold\": \"1\"\n}"}]}, "vistaprint/dynamodb-tables/aws": {"name": "dynamodb-tables", "url": "https://registry.terraform.io/modules/vistaprint/dynamodb-tables/aws", "provider": "aws", "downloads": 277, "description": "", "source": "vistaprint/dynamodb-tables/aws", "args": [{"name": "table_info", "description": "A list of maps containing the information for each table. The following fields can be used:\n  - name (required)\n  - read_capacity  (defaults to 1)\n  - write_capacity (defaults to 1)\n", "default": ""}, {"name": "tags", "description": "Tags to add to the dynamodb tables.", "default": "{}"}]}, "hmarcelodn/acsenginek8scluster/azurerm": {"name": "acsenginek8scluster", "url": "https://registry.terraform.io/modules/hmarcelodn/acsenginek8scluster/azurerm", "provider": "azurerm", "downloads": 271, "description": "Terraform Module to Create Kubernetes cluster using acs-engine", "source": "hmarcelodn/acsenginek8scluster/azurerm", "args": [{"name": "subscription_id", "description": "Microsoft Azure Subscription ID", "default": ""}, {"name": "location_name", "description": "Location for Kubernetes Cluster Name (East US 2, Central US, etc)", "default": ""}, {"name": "cluster_resource_group", "description": "Resource Group for ACS-ENGINE Deployment Resources", "default": ""}, {"name": "master_count", "description": "Number of master nodes to be created", "default": "1"}, {"name": "rsa_public_key", "description": "RSA Public Key to login into the kubernetes cluster", "default": ""}, {"name": "agent_pool_count", "description": "Agent Pool Count", "default": "1"}, {"name": "master_subnet_id", "description": "Kubernetes Masters Subnet ID (Azure Resource ID)", "default": ""}, {"name": "master_vm_size", "description": "Master Nodes Azure VM Size Type", "default": ""}, {"name": "service_principal_password", "description": "Subscription scoped service principal password user which logins into azure to upload output files.", "default": ""}, {"name": "service_principal_tenant", "description": "Subscription scoped service principal tenant user which logins into azure to upload output files.", "default": ""}, {"name": "terraform_container_name", "description": "Account Container Name where the acs-engine deployment output files will be uploaded to. (Must exist before execution)", "default": ""}, {"name": "kubernetes_max_pods", "description": "Indicates the max number of pods to deploy by machine.", "default": "\"110\""}, {"name": "cluster_k8s_resource_group", "description": "", "default": ""}, {"name": "service_principal_client_id", "description": "Cluster Service Principal used to self-provisioning.", "default": ""}, {"name": "service_principal_client_secret", "description": "Cluster Service Principal Password used to self-provisioning.", "default": ""}, {"name": "kubernetes_storage_profile", "description": "Comma Separated Attached Disks", "default": "\"30\""}, {"name": "node_os_disk_gb", "description": "OS Disk GiB Size for nodes", "default": "\"250\""}, {"name": "kubernetes_rbac_enabled", "description": "Indicates if the cluster RBAC is enabled.", "default": "\"false\""}, {"name": "nodes_subnet_id", "description": "Kubernetes Nodes Subnet ID (Azure Resource ID)", "default": ""}, {"name": "dns_prefix", "description": "DNS Cluster Prefix", "default": ""}, {"name": "node_vm_size", "description": "Agent Nodes Azure VM Size Type", "default": ""}, {"name": "terraform_account_name", "description": "Account Name where the acs-engine deployment output files will be uploaded to. (Must exist before execution)", "default": ""}, {"name": "service_principal_user", "description": "Subscription scoped service principal user which logins into azure to upload output files.", "default": ""}, {"name": "terraform_account_key", "description": "Account Key where the acs-engine deployment output files will be uploaded to.", "default": ""}, {"name": "kubernetes_network_policy", "description": "Indicate network policy (azure, calico, none = kubenet ). Default: Kubenet", "default": "\"none\""}, {"name": "kubernetes_attached_disk_sizes", "description": "Comma Separated Attached Disks", "default": "\"30\""}, {"name": "master_os_disk_gb", "description": "OS Disk GiB Size for master", "default": "\"250\""}, {"name": "master_first_consecutive_static_ip", "description": "Master First Consecutive Static IP", "default": ""}, {"name": "agents_subnet_name", "description": "Subnet Name used by Kubernetes Agents which will be used to the route table", "default": ""}, {"name": "vnet_name", "description": "Virtual Net Name", "default": ""}, {"name": "masters_subnet_name", "description": "Subnet Name used by Kubernetes masters which will be used to the route table", "default": ""}, {"name": "kubernetes_release_version", "description": "Kubernetes Release version to deploy.", "default": ""}]}, "btower-labz/btlabz-vpc-base/aws": {"name": "btlabz-vpc-base", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-vpc-base/aws", "provider": "aws", "downloads": 253, "description": "BTLabz AWS VPC parts: VPC base.", "source": "btower-labz/btlabz-vpc-base/aws", "args": [{"name": "vpc_name", "description": "VPC name. This will be uses as the 'Name' tag value.", "default": "\"main-vpc\""}, {"name": "cidr", "description": "VPC's CIDR range.", "default": ""}, {"name": "rt_name", "description": "VPC's main public route table name.", "default": "\"public-rt\""}, {"name": "tags", "description": "Additional tags.", "default": "{}"}, {"name": "igw_name", "description": "Internet gateway name. This will be uses as the 'Name' tag value.", "default": "\"main-igw\""}]}, "GoogleCloudPlatform/lb/google": {"name": "lb", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/lb/google", "provider": "google", "downloads": 252, "description": "Modular Regional TCP Load Balancer for GCE using target pool and forwarding rule.", "source": "GoogleCloudPlatform/lb/google", "args": [{"name": "project", "description": "The project to deploy to, if not set the default provider project is used.", "default": "\"\""}, {"name": "region", "description": "Region for cloud resources.", "default": "\"us-central1\""}, {"name": "network", "description": "Name of the network to create resources in.", "default": "\"default\""}, {"name": "firewall_project", "description": "Name of the project to create the firewall rule in. Useful for shared VPC. Default is var.project.", "default": "\"\""}, {"name": "name", "description": "Name for the forwarding rule and prefix for supporting resources.", "default": ""}, {"name": "service_port", "description": "TCP port your service is listening on.", "default": ""}, {"name": "target_tags", "description": "List of target tags to allow traffic using firewall rule.", "default": ""}, {"name": "session_affinity", "description": "How to distribute load. Options are `NONE`, `CLIENT_IP` and `CLIENT_IP_PROTO`", "default": "\"NONE\""}]}, "Smartbrood/role-policy/aws": {"name": "role-policy", "url": "https://registry.terraform.io/modules/Smartbrood/role-policy/aws", "provider": "aws", "downloads": 248, "description": "Terraform module/role (role means that module contains other modules) to create some default policy resources.", "source": "Smartbrood/role-policy/aws", "args": [{"name": "ssh_key_name_prefix", "description": "Key name prefix for ssh rsa public key", "default": "\"terraform-\""}, {"name": "ssh_public_key_path", "description": "Path to ssh rsa public key", "default": "\"~/.ssh/id_rsa.pub\""}, {"name": "iam_role_name", "description": "The name of the IAM Role.", "default": ""}, {"name": "iam_role_path", "description": "The path to the IAM Role.", "default": "\"/\""}, {"name": "iam_role_description", "description": "The description of the IAM Role.", "default": "\"This IAM Role generated by Terraform.\""}, {"name": "iam_role_force_detach_policies", "description": "Forcibly detach the policy of the role.", "default": "false"}, {"name": "iam_role_policy_arn", "description": "Attache the policies to the IAM Role.", "default": ""}]}, "kurron/alb-target-group/aws": {"name": "alb-target-group", "url": "https://registry.terraform.io/modules/kurron/alb-target-group/aws", "provider": "aws", "downloads": 241, "description": "Terraform module that sets up a Target Group for an Application Load Balancer", "source": "kurron/alb-target-group/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "port", "description": "The port on which targets receive traffic.", "default": ""}, {"name": "protocol", "description": "The protocol to use for routing traffic to the targets.", "default": ""}, {"name": "vpc_id", "description": "The identifier of the VPC in which to create the target group.", "default": ""}, {"name": "enable_stickiness", "description": "If set to Yes, the balancer will attempt to route clients to a consistent back end.", "default": ""}, {"name": "health_check_interval", "description": "The approximate amount of time, in seconds, between health checks of an individual target.", "default": ""}, {"name": "health_check_path", "description": "The destination for the health check request.", "default": ""}, {"name": "health_check_protocol", "description": "The protocol to use to connect with the target.", "default": ""}, {"name": "health_check_timeout", "description": "The amount of time, in seconds, during which no response means a failed health check.", "default": ""}, {"name": "health_check_healthy_threshold", "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy.", "default": ""}, {"name": "unhealthy_threshold", "description": "The number of consecutive health check failures required before considering the target unhealthy.", "default": ""}, {"name": "matcher", "description": "The HTTP codes to use when checking for a successful response from a target.", "default": ""}, {"name": "load_balancer_arn", "description": "The ARN of the load balancer to bind the listener to.", "default": ""}]}, "smrutimandal/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/smrutimandal/vpc/aws", "provider": "aws", "downloads": 238, "description": "", "source": "smrutimandal/vpc/aws", "args": [{"name": "vpc_cidr", "description": "This is the CIDR used to create the VPC", "default": "\"10.0.0.0/16\""}, {"name": "tag", "description": "This is used to tag all the resources managed by the module", "default": ""}]}, "jonathanio/s3-cloudfront/module": {"name": "s3-cloudfront", "url": "https://registry.terraform.io/modules/jonathanio/s3-cloudfront/module", "provider": "module", "downloads": 222, "description": "Terraform module which creates a CloudFront-enabled S3 bucket for static website hosting.", "source": "jonathanio/s3-cloudfront/module", "args": [{"name": "name", "description": "Name to give this environment.", "default": "\"example\""}, {"name": "hostname", "description": "Hostname for this website.", "default": "\"example.com\""}, {"name": "wildcard_ssl", "description": "Wildcard SSL certificate domain name.  E.g. *.example.com", "default": "\"\""}, {"name": "aliases", "description": "Additional aliases to host this website for.", "default": "[]"}, {"name": "cache_ttl", "description": "Default TTL to give objects requested from S3 in CloudFront for caching.", "default": "3600"}, {"name": "logs_transition_ia", "description": "How long to wait before transitioning log files into S3-IA.", "default": "30"}, {"name": "logs_transition_glacier", "description": "How long to wait before transitioning log files into Glacier.", "default": "60"}, {"name": "logs_expiration", "description": "How long to wait before deleting old log files.", "default": "365"}, {"name": "price_class", "description": "Which price_class to enable in CloudFront.", "default": "\"PriceClass_100\""}, {"name": "index_document", "description": "Default index document for directories and website root.", "default": "\"index.html\""}, {"name": "error_document", "description": "Default html document to display for errors (e.g. 404).", "default": "\"error.html\""}, {"name": "tags", "description": "A map of tags (in addition to Name) to add to all resources.", "default": "{}"}, {"name": "force_destroy", "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.", "default": "\"false\""}]}, "azavea/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/azavea/ecs-cluster/aws", "provider": "aws", "downloads": 221, "description": "A Terraform module to create an Amazon Web Services (AWS) EC2 Container Service (ECS) cluster.", "source": "azavea/ecs-cluster/aws", "args": [{"name": "min_size", "description": "", "default": "\"1\""}, {"name": "low_cpu_evaluation_periods", "description": "", "default": "\"2\""}, {"name": "ami_id", "description": "", "default": "\"ami-6944c513\""}, {"name": "root_block_device_type", "description": "", "default": "\"gp2\""}, {"name": "health_check_grace_period", "description": "", "default": "\"600\""}, {"name": "max_size", "description": "", "default": "\"1\""}, {"name": "lookup_latest_ami", "description": "", "default": "false"}, {"name": "instance_type", "description": "", "default": "\"t2.micro\""}, {"name": "key_name", "description": "", "default": ""}, {"name": "scale_up_cooldown_seconds", "description": "", "default": "\"300\""}, {"name": "scale_down_cooldown_seconds", "description": "", "default": "\"300\""}, {"name": "high_memory_threshold_percent", "description": "", "default": "\"90\""}, {"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "cloud_config_content_type", "description": "", "default": "\"text/cloud-config\""}, {"name": "enabled_metrics", "description": "", "default": "[\n  \"GroupMinSize\",\n  \"GroupMaxSize\",\n  \"GroupDesiredCapacity\",\n  \"GroupInServiceInstances\",\n  \"GroupPendingInstances\",\n  \"GroupStandbyInstances\",\n  \"GroupTerminatingInstances\",\n  \"GroupTotalInstances\"\n]"}, {"name": "private_subnet_ids", "description": "", "default": ""}, {"name": "low_cpu_threshold_percent", "description": "", "default": "\"10\""}, {"name": "project", "description": "", "default": "\"Unknown\""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "root_block_device_size", "description": "", "default": "\"8\""}, {"name": "high_memory_evaluation_periods", "description": "", "default": "\"2\""}, {"name": "low_memory_evaluation_periods", "description": "", "default": "\"2\""}, {"name": "low_memory_threshold_percent", "description": "", "default": "\"10\""}, {"name": "high_cpu_period_seconds", "description": "", "default": "\"300\""}, {"name": "high_cpu_threshold_percent", "description": "", "default": "\"90\""}, {"name": "low_cpu_period_seconds", "description": "", "default": "\"300\""}, {"name": "high_cpu_evaluation_periods", "description": "", "default": "\"2\""}, {"name": "low_memory_period_seconds", "description": "", "default": "\"300\""}, {"name": "high_memory_period_seconds", "description": "", "default": "\"300\""}, {"name": "ami_owners", "description": "", "default": "[\n  \"self\",\n  \"amazon\",\n  \"aws-marketplace\"\n]"}, {"name": "cloud_config_content", "description": "", "default": ""}, {"name": "desired_capacity", "description": "", "default": "\"1\""}]}, "devops-workflow/security-group/aws": {"name": "security-group", "url": "https://registry.terraform.io/modules/devops-workflow/security-group/aws", "provider": "aws", "downloads": 216, "description": "Terraform module which creates EC2-VPC security groups on AWS", "source": "devops-workflow/security-group/aws", "args": [{"name": "rules", "description": "Map of known security group rules (define as 'name' = ['from port', 'to port', 'protocol', 'description'])", "default": "{\n  \"_\": [\n    \"\",\n    \"\",\n    \"\",\n    \"x\"\n  ],\n  \"all-all\": [\n    -1,\n    -1,\n    \"-1\",\n    \"All protocols\"\n  ],\n  \"all-icmp\": [\n    -1,\n    -1,\n    \"icmp\",\n    \"All IPV4 ICMP\"\n  ],\n  \"all-ipv6-icmp\": [\n    -1,\n    -1,\n    58,\n    \"All IPV6 ICMP\"\n  ],\n  \"all-tcp\": [\n    0,\n    65535,\n    \"tcp\",\n    \"All TCP ports\"\n  ],\n  \"all-udp\": [\n    0,\n    65535,\n    \"udp\",\n    \"All UDP ports\"\n  ],\n  \"carbon-admin-tcp\": [\n    2004,\n    2004,\n    \"tcp\",\n    \"Carbon admin\"\n  ],\n  \"carbon-gui-udp\": [\n    8081,\n    8081,\n    \"tcp\",\n    \"Carbon GUI\"\n  ],\n  \"carbon-line-in-tcp\": [\n    2003,\n    2003,\n    \"tcp\",\n    \"Carbon line-in\"\n  ],\n  \"carbon-line-in-udp\": [\n    2003,\n    2003,\n    \"udp\",\n    \"Carbon line-in\"\n  ],\n  \"carbon-pickle-tcp\": [\n    2013,\n    2013,\n    \"tcp\",\n    \"Carbon pickle\"\n  ],\n  \"carbon-pickle-udp\": [\n    2013,\n    2013,\n    \"udp\",\n    \"Carbon pickle\"\n  ],\n  \"cassandra-clients-tcp\": [\n    9042,\n    9042,\n    \"tcp\",\n    \"Cassandra clients\"\n  ],\n  \"cassandra-jmx-tcp\": [\n    7199,\n    7199,\n    \"tcp\",\n    \"JMX\"\n  ],\n  \"cassandra-thrift-clients-tcp\": [\n    9160,\n    9160,\n    \"tcp\",\n    \"Cassandra Thrift clients\"\n  ],\n  \"consul-dns-tcp\": [\n    8600,\n    8600,\n    \"tcp\",\n    \"Consul DNS\"\n  ],\n  \"consul-dns-udp\": [\n    8600,\n    8600,\n    \"udp\",\n    \"Consul DNS\"\n  ],\n  \"consul-serf-lan-tcp\": [\n    8301,\n    8301,\n    \"tcp\",\n    \"Serf LAN\"\n  ],\n  \"consul-serf-lan-udp\": [\n    8301,\n    8301,\n    \"udp\",\n    \"Serf LAN\"\n  ],\n  \"consul-serf-wan-tcp\": [\n    8302,\n    8302,\n    \"tcp\",\n    \"Serf WAN\"\n  ],\n  \"consul-serf-wan-udp\": [\n    8302,\n    8302,\n    \"udp\",\n    \"Serf WAN\"\n  ],\n  \"consul-tcp\": [\n    8300,\n    8300,\n    \"tcp\",\n    \"Consul server\"\n  ],\n  \"consul-webui-tcp\": [\n    8500,\n    8500,\n    \"tcp\",\n    \"Consul web UI\"\n  ],\n  \"dns-tcp\": [\n    53,\n    53,\n    \"tcp\",\n    \"DNS\"\n  ],\n  \"dns-udp\": [\n    53,\n    53,\n    \"udp\",\n    \"DNS\"\n  ],\n  \"docker-swarm-mngmt-tcp\": [\n    2377,\n    2377,\n    \"tcp\",\n    \"Docker Swarm cluster management\"\n  ],\n  \"docker-swarm-node-tcp\": [\n    7946,\n    7946,\n    \"tcp\",\n    \"Docker Swarm node\"\n  ],\n  \"docker-swarm-node-udp\": [\n    7946,\n    7946,\n    \"udp\",\n    \"Docker Swarm node\"\n  ],\n  \"docker-swarm-overlay-udp\": [\n    4789,\n    4789,\n    \"udp\",\n    \"Docker Swarm Overlay Network Traffic\"\n  ],\n  \"elasticsearch-java-tcp\": [\n    9300,\n    9300,\n    \"tcp\",\n    \"Elasticsearch Java interface\"\n  ],\n  \"elasticsearch-rest-tcp\": [\n    9200,\n    9200,\n    \"tcp\",\n    \"Elasticsearch REST interface\"\n  ],\n  \"http-80-tcp\": [\n    80,\n    80,\n    \"tcp\",\n    \"HTTP\"\n  ],\n  \"http-8080-tcp\": [\n    8080,\n    8080,\n    \"tcp\",\n    \"HTTP\"\n  ],\n  \"https-443-tcp\": [\n    443,\n    443,\n    \"tcp\",\n    \"HTTPS\"\n  ],\n  \"ipsec-4500-udp\": [\n    4500,\n    4500,\n    \"udp\",\n    \"IPSEC NAT-T\"\n  ],\n  \"ipsec-500-udp\": [\n    500,\n    500,\n    \"udp\",\n    \"IPSEC ISAKMP\"\n  ],\n  \"kafka-broker-tcp\": [\n    9092,\n    9092,\n    \"tcp\",\n    \"Kafka broker 0.8.2+\"\n  ],\n  \"kibana-tcp\": [\n    9000,\n    9000,\n    \"tcp\",\n    \"Kibana\"\n  ],\n  \"ldaps-tcp\": [\n    636,\n    636,\n    \"tcp\",\n    \"LDAPS\"\n  ],\n  \"logstash-tcp\": [\n    5043,\n    5044,\n    \"tcp\",\n    \"Logstash\"\n  ],\n  \"memcached-tcp\": [\n    11211,\n    11211,\n    \"tcp\",\n    \"Memcached\"\n  ],\n  \"mongodb-tcp\": [\n    27017,\n    27017,\n    \"tcp\",\n    \"MongoDB\"\n  ],\n  \"mssql-tcp\": [\n    1433,\n    1433,\n    \"tcp\",\n    \"MSSQL Server\"\n  ],\n  \"mysql-tcp\": [\n    3306,\n    3306,\n    \"tcp\",\n    \"MySQL/Aurora\"\n  ],\n  \"nomad-http-tcp\": [\n    4646,\n    4646,\n    \"tcp\",\n    \"Nomad HTTP\"\n  ],\n  \"nomad-rpc-tcp\": [\n    4647,\n    4647,\n    \"tcp\",\n    \"Nomad RPC\"\n  ],\n  \"nomad-serf-tcp\": [\n    4648,\n    4648,\n    \"tcp\",\n    \"Serf\"\n  ],\n  \"nomad-serf-udp\": [\n    4648,\n    4648,\n    \"udp\",\n    \"Serf\"\n  ],\n  \"openvpn-https-tcp\": [\n    443,\n    443,\n    \"tcp\",\n    \"OpenVPN\"\n  ],\n  \"openvpn-tcp\": [\n    943,\n    943,\n    \"tcp\",\n    \"OpenVPN\"\n  ],\n  \"openvpn-udp\": [\n    1194,\n    1194,\n    \"udp\",\n    \"OpenVPN\"\n  ],\n  \"portainer-tcp\": [\n    5601,\n    5601,\n    \"tcp\",\n    \"Portainer\"\n  ],\n  \"postgresql-tcp\": [\n    5432,\n    5432,\n    \"tcp\",\n    \"PostgreSQL\"\n  ],\n  \"puppet-tcp\": [\n    8140,\n    8140,\n    \"tcp\",\n    \"Puppet\"\n  ],\n  \"redis-tcp\": [\n    6379,\n    6379,\n    \"tcp\",\n    \"Redis\"\n  ],\n  \"ssh-tcp\": [\n    22,\n    22,\n    \"tcp\",\n    \"SSH\"\n  ],\n  \"storm-nimbus-tcp\": [\n    6627,\n    6627,\n    \"tcp\",\n    \"Nimbus\"\n  ],\n  \"storm-supervisor-tcp\": [\n    6700,\n    6703,\n    \"tcp\",\n    \"Supervisor\"\n  ],\n  \"storm-ui-tcp\": [\n    8080,\n    8080,\n    \"tcp\",\n    \"Storm UI\"\n  ],\n  \"web-jmx-tcp\": [\n    1099,\n    1099,\n    \"tcp\",\n    \"JMX\"\n  ],\n  \"zipkin-admin-query-tcp\": [\n    9901,\n    9901,\n    \"tcp\",\n    \"Zipkin Admin port query\"\n  ],\n  \"zipkin-admin-tcp\": [\n    9990,\n    9990,\n    \"tcp\",\n    \"Zipkin Admin port collector\"\n  ],\n  \"zipkin-admin-web-tcp\": [\n    9991,\n    9991,\n    \"tcp\",\n    \"Zipkin Admin port web\"\n  ],\n  \"zipkin-query-tcp\": [\n    9411,\n    9411,\n    \"tcp\",\n    \"Zipkin query port\"\n  ],\n  \"zipkin-web-tcp\": [\n    8080,\n    8080,\n    \"tcp\",\n    \"Zipkin web port\"\n  ],\n  \"zookeeper-2181-tcp\": [\n    2181,\n    2181,\n    \"tcp\",\n    \"Zookeeper\"\n  ],\n  \"zookeeper-2888-tcp\": [\n    2888,\n    2888,\n    \"tcp\",\n    \"Zookeeper\"\n  ],\n  \"zookeeper-3888-tcp\": [\n    3888,\n    3888,\n    \"tcp\",\n    \"Zookeeper\"\n  ],\n  \"zookeeper-jmx-tcp\": [\n    7199,\n    7199,\n    \"tcp\",\n    \"JMX\"\n  ]\n}"}, {"name": "auto_groups", "description": "Map of groups of security group rules to use to generate modules (see update_groups.sh)", "default": "{\n  \"carbon-relay-ng\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"carbon-line-in-tcp\",\n        \"carbon-line-in-udp\",\n        \"carbon-pickle-tcp\",\n        \"carbon-pickle-udp\",\n        \"carbon-gui-udp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"cassandra\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"cassandra-clients-tcp\",\n        \"cassandra-thrift-clients-tcp\",\n        \"cassandra-jmx-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"consul\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"consul-tcp\",\n        \"consul-webui-tcp\",\n        \"consul-dns-tcp\",\n        \"consul-dns-udp\",\n        \"consul-serf-lan-tcp\",\n        \"consul-serf-lan-udp\",\n        \"consul-serf-wan-tcp\",\n        \"consul-serf-wan-udp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"docker-swarm\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"docker-swarm-mngmt-tcp\",\n        \"docker-swarm-node-tcp\",\n        \"docker-swarm-node-udp\",\n        \"docker-swarm-overlay-udp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"elasticsearch\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"elasticsearch-rest-tcp\",\n        \"elasticsearch-java-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"http-80\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"http-80-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"https-443\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"https-443-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"ipsec-4500\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"ipsec-4500-udp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"ipsec-500\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"ipsec-500-udp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"kafka\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"kafka-broker-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"ldaps\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"ldaps-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"memcached\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"memcached-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"mssql\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"mssql-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"mysql\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"mysql-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"nomad\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"nomad-http-tcp\",\n        \"nomad-rpc-tcp\",\n        \"nomad-serf-tcp\",\n        \"nomad-serf-udp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"openvpn\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"openvpn-udp\",\n        \"openvpn-tcp\",\n        \"openvpn-443-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"postgresql\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"postgresql-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"redis\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"redis-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"ssh\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"ssh-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"storm\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"storm-nimbus-tcp\",\n        \"storm-ui-tcp\",\n        \"storm-supervisor-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"web\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"http-80-tcp\",\n        \"http-8080-tcp\",\n        \"https-443-tcp\",\n        \"web-jmx-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"zipkin\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"zipkin-admin-tcp\",\n        \"zipkin-admin-query-tcp\",\n        \"zipkin-admin-web-tcp\",\n        \"zipkin-query-tcp\",\n        \"zipkin-web-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ],\n  \"zookeeper\": [\n    {\n      \"egress_rules\": [\n        \"all-all\"\n      ],\n      \"ingress_rules\": [\n        \"zookeeper-2181-tcp\",\n        \"zookeeper-2888-tcp\",\n        \"zookeeper-3888-tcp\",\n        \"zookeeper-jmx-tcp\"\n      ],\n      \"ingress_with_self\": [\n        \"all-all\"\n      ]\n    }\n  ]\n}"}, {"name": "attributes", "description": "Suffix name with additional attributes (policy, role, etc.)", "default": "[]"}, {"name": "component", "description": "TAG: Underlying, dedicated piece of service (Cache, DB, ...)", "default": "\"UNDEF-SG\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespaces`, `attributes`, etc.", "default": "\"-\""}, {"name": "environment", "description": "Environment (ex: `dev`, `qa`, `stage`, `prod`). (Second or top level namespace. Depending on namespacing options)", "default": ""}, {"name": "monitor", "description": "TAG: Should resource be monitored", "default": "\"UNDEF-SG\""}, {"name": "name", "description": "Base name for resource", "default": ""}, {"name": "namespace-env", "description": "Prefix name with the environment. If true, format is: <env>-<name>", "default": "true"}, {"name": "namespace-org", "description": "Prefix name with the organization. If true, format is: <org>-<env namespaced name>. If both env and org namespaces are used, format will be <org>-<env>-<name>", "default": "false"}, {"name": "organization", "description": "Organization name (Top level namespace)", "default": "\"\""}, {"name": "owner", "description": "TAG: Owner of the service", "default": "\"UNDEF-SG\""}, {"name": "product", "description": "TAG: Company/business product", "default": "\"UNDEF-SG\""}, {"name": "service", "description": "TAG: Application (microservice) name", "default": "\"UNDEF-SG\""}, {"name": "tags", "description": "A map of additional tags", "default": "{}"}, {"name": "team", "description": "TAG: Department/team of people responsible for service", "default": "\"UNDEF-SG\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "vpc_id", "description": "ID of the VPC where to create security group", "default": ""}, {"name": "description", "description": "Description of security group", "default": "\"Security Group managed by Terraform\""}, {"name": "ingress_rules", "description": "List of ingress rules to create by name", "default": "[]"}, {"name": "ingress_with_self", "description": "List of ingress rules to create where 'self' is defined", "default": "[]"}, {"name": "ingress_with_cidr_blocks", "description": "List of ingress rules to create where 'cidr_blocks' is used", "default": "[]"}, {"name": "ingress_with_ipv6_cidr_blocks", "description": "List of ingress rules to create where 'ipv6_cidr_blocks' is used", "default": "[]"}, {"name": "ingress_with_source_security_group_id", "description": "List of ingress rules to create where 'source_security_group_id' is used", "default": "[]"}, {"name": "ingress_cidr_blocks", "description": "List of IPv4 CIDR ranges to use on all ingress rules", "default": "[]"}, {"name": "ingress_ipv6_cidr_blocks", "description": "List of IPv6 CIDR ranges to use on all ingress rules", "default": "[]"}, {"name": "ingress_prefix_list_ids", "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all ingress rules", "default": "[]"}, {"name": "egress_rules", "description": "List of egress rules to create by name", "default": "[]"}, {"name": "egress_with_self", "description": "List of egress rules to create where 'self' is defined", "default": "[]"}, {"name": "egress_with_cidr_blocks", "description": "List of egress rules to create where 'cidr_blocks' is used", "default": "[]"}, {"name": "egress_with_ipv6_cidr_blocks", "description": "List of egress rules to create where 'ipv6_cidr_blocks' is used", "default": "[]"}, {"name": "egress_with_source_security_group_id", "description": "List of egress rules to create where 'source_security_group_id' is used", "default": "[]"}, {"name": "egress_cidr_blocks", "description": "List of IPv4 CIDR ranges to use on all egress rules", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "egress_ipv6_cidr_blocks", "description": "List of IPv6 CIDR ranges to use on all egress rules", "default": "[\n  \"::/0\"\n]"}, {"name": "egress_prefix_list_ids", "description": "List of prefix list IDs (for allowing access to VPC endpoints) to use on all egress rules", "default": "[]"}]}, "hashicorp/module-installer-acctest/aws": {"name": "module-installer-acctest", "url": "https://registry.terraform.io/modules/hashicorp/module-installer-acctest/aws", "provider": "aws", "downloads": 206, "description": "A placeholder Terraform module for acceptance tests of Terraform's module installer", "source": "hashicorp/module-installer-acctest/aws", "args": [{"name": "v", "description": "in root module", "default": "\"\""}]}, "sidick/elb-ssl-negotiation/aws": {"name": "elb-ssl-negotiation", "url": "https://registry.terraform.io/modules/sidick/elb-ssl-negotiation/aws", "provider": "aws", "downloads": 204, "description": "Terraform module which creates ELB SSL Negotiation Policy", "source": "sidick/elb-ssl-negotiation/aws", "args": [{"name": "adh_aes256_sha", "description": "ADH-AES256-SHA", "default": "\"false\""}, {"name": "idea_cbc_sha", "description": "IDEA-CBC-SHA", "default": "\"false\""}, {"name": "psk_aes256_cbc_sha", "description": "PSK-AES256-CBC-SHA", "default": "\"false\""}, {"name": "adh_aes256_gcm_sha384", "description": "ADH-AES256-GCM-SHA384", "default": "\"false\""}, {"name": "aes128_gcm_sha256", "description": "AES128-GCM-SHA256", "default": "\"false\""}, {"name": "dhe_dss_aes256_gcm_sha384", "description": "DHE-DSS-AES256-GCM-SHA384", "default": "\"false\""}, {"name": "exp_des_cbc_sha", "description": "EXP-DES-CBC-SHA", "default": "\"false\""}, {"name": "exp_krb5_des_cbc_md5", "description": "EXP-KRB5-DES-CBC-MD5", "default": "\"false\""}, {"name": "protocol_tlsv11", "description": "Protocol-TLSv1.1", "default": "\"false\""}, {"name": "rc4_md5", "description": "RC4-MD5", "default": "\"false\""}, {"name": "adh_seed_sha", "description": "ADH-SEED-SHA", "default": "\"false\""}, {"name": "protocol_tlsv1", "description": "Protocol-TLSv1", "default": "\"false\""}, {"name": "camellia128_sha", "description": "CAMELLIA128-SHA", "default": "\"false\""}, {"name": "edh_rsa_des_cbc_sha", "description": "EDH-RSA-DES-CBC-SHA", "default": "\"false\""}, {"name": "krb5_rc4_sha", "description": "KRB5-RC4-SHA", "default": "\"false\""}, {"name": "server_defined_cipher_order", "description": "Server-Defined-Cipher-Order", "default": "\"false\""}, {"name": "dhe_dss_aes128_sha", "description": "DHE-DSS-AES128-SHA", "default": "\"false\""}, {"name": "aes256_gcm_sha384", "description": "AES256-GCM-SHA384", "default": "\"false\""}, {"name": "dhe_dss_aes128_gcm_sha256", "description": "DHE-DSS-AES128-GCM-SHA256", "default": "\"false\""}, {"name": "dhe_dss_aes256_sha256", "description": "DHE-DSS-AES256-SHA256", "default": "\"false\""}, {"name": "dhe_rsa_aes128_gcm_sha256", "description": "DHE-RSA-AES128-GCM-SHA256", "default": "\"false\""}, {"name": "ecdhe_rsa_aes128_sha256", "description": "ECDHE-RSA-AES128-SHA256", "default": "\"false\""}, {"name": "adh_des_cbc_sha", "description": "ADH-DES-CBC-SHA", "default": "\"false\""}, {"name": "aes128_sha256", "description": "AES128-SHA256", "default": "\"false\""}, {"name": "des_cbc_md5", "description": "DES-CBC-MD5", "default": "\"false\""}, {"name": "ecdhe_ecdsa_aes256_gcm_sha384", "description": "ECDHE-ECDSA-AES256-GCM-SHA384", "default": "\"false\""}, {"name": "exp_krb5_rc2_cbc_sha", "description": "EXP-KRB5-RC2-CBC-SHA", "default": "\"false\""}, {"name": "krb5_des_cbc3_md5", "description": "KRB5-DES-CBC3-MD5", "default": "\"false\""}, {"name": "krb5_rc4_md5", "description": "KRB5-RC4-MD5", "default": "\"false\""}, {"name": "adh_aes256_sha256", "description": "ADH-AES256-SHA256", "default": "\"false\""}, {"name": "des_cbc3_sha", "description": "DES-CBC3-SHA", "default": "\"false\""}, {"name": "dhe_rsa_camellia128_sha", "description": "DHE-RSA-CAMELLIA128-SHA", "default": "\"false\""}, {"name": "dhe_rsa_camellia256_sha", "description": "DHE-RSA-CAMELLIA256-SHA", "default": "\"false\""}, {"name": "dhe_rsa_seed_sha", "description": "DHE-RSA-SEED-SHA", "default": "\"false\""}, {"name": "ecdhe_ecdsa_aes128_sha256", "description": "ECDHE-ECDSA-AES128-SHA256", "default": "\"false\""}, {"name": "ecdhe_rsa_aes128_gcm_sha256", "description": "ECDHE-RSA-AES128-GCM-SHA256", "default": "\"false\""}, {"name": "ecdhe_rsa_aes128_sha", "description": "ECDHE-RSA-AES128-SHA", "default": "\"false\""}, {"name": "adh_camellia128_sha", "description": "ADH-CAMELLIA128-SHA", "default": "\"false\""}, {"name": "protocol_sslv3", "description": "Protocol-SSLv3", "default": "\"false\""}, {"name": "psk_aes128_cbc_sha", "description": "PSK-AES128-CBC-SHA", "default": "\"false\""}, {"name": "seed_sha", "description": "SEED-SHA", "default": "\"false\""}, {"name": "krb5_des_cbc_md5", "description": "KRB5-DES-CBC-MD5", "default": "\"false\""}, {"name": "adh_aes128_sha256", "description": "ADH-AES128-SHA256", "default": "\"false\""}, {"name": "aes256_sha", "description": "AES256-SHA", "default": "\"false\""}, {"name": "dhe_dss_aes128_sha256", "description": "DHE-DSS-AES128-SHA256", "default": "\"false\""}, {"name": "dhe_rsa_aes256_sha", "description": "DHE-RSA-AES256-SHA", "default": "\"false\""}, {"name": "ecdhe_rsa_aes256_sha", "description": "ECDHE-RSA-AES256-SHA", "default": "\"false\""}, {"name": "ecdhe_rsa_aes256_sha384", "description": "ECDHE-RSA-AES256-SHA384", "default": "\"false\""}, {"name": "adh_aes128_sha", "description": "ADH-AES128-SHA", "default": "\"false\""}, {"name": "dhe_dss_aes256_sha", "description": "DHE-DSS-AES256-SHA", "default": "\"false\""}, {"name": "edh_dss_des_cbc3_sha", "description": "EDH-DSS-DES-CBC3-SHA", "default": "\"false\""}, {"name": "adh_aes128_gcm_sha256", "description": "ADH-AES128-GCM-SHA256", "default": "\"false\""}, {"name": "camellia256_sha", "description": "CAMELLIA256-SHA", "default": "\"false\""}, {"name": "dhe_rsa_aes128_sha", "description": "DHE-RSA-AES128-SHA", "default": "\"false\""}, {"name": "ecdhe_rsa_rc4_sha", "description": "ECDHE-RSA-RC4-SHA", "default": "\"false\""}, {"name": "rc2_cbc_md5", "description": "RC2-CBC-MD5", "default": "\"false\""}, {"name": "adh_rc4_md5", "description": "ADH-RC4-MD5", "default": "\"false\""}, {"name": "aes128_sha", "description": "AES128-SHA", "default": "\"false\""}, {"name": "des_cbc_sha", "description": "DES-CBC-SHA", "default": "\"false\""}, {"name": "ecdhe_ecdsa_aes256_sha384", "description": "ECDHE-ECDSA-AES256-SHA384", "default": "\"false\""}, {"name": "exp_adh_des_cbc_sha", "description": "EXP-ADH-DES-CBC-SHA", "default": "\"false\""}, {"name": "protocol_tlsv12", "description": "Protocol-TLSv1.2", "default": "\"false\""}, {"name": "psk_3des_ede_cbc_sha", "description": "PSK-3DES-EDE-CBC-SHA", "default": "\"false\""}, {"name": "load_balancer_port", "description": "TCP Port to affect", "default": ""}, {"name": "adh_des_cbc3_sha", "description": "ADH-DES-CBC3-SHA", "default": "\"false\""}, {"name": "des_cbc3_md5", "description": "DES-CBC3-MD5", "default": "\"false\""}, {"name": "dhe_dss_seed_sha", "description": "DHE-DSS-SEED-SHA", "default": "\"false\""}, {"name": "dhe_rsa_aes256_sha256", "description": "DHE-RSA-AES256-SHA256", "default": "\"false\""}, {"name": "ecdhe_ecdsa_rc4_sha", "description": "ECDHE-ECDSA-RC4-SHA", "default": "\"false\""}, {"name": "edh_dss_des_cbc_sha", "description": "EDH-DSS-DES-CBC-SHA", "default": "\"false\""}, {"name": "krb5_des_cbc3_sha", "description": "KRB5-DES-CBC3-SHA", "default": "\"false\""}, {"name": "load_balancer_id", "description": "ID of the ELB", "default": ""}, {"name": "rc4_sha", "description": "RC4-SHA", "default": "\"false\""}, {"name": "krb5_des_cbc_sha", "description": "KRB5-DES-CBC-SHA", "default": "\"false\""}, {"name": "dhe_dss_camellia256_sha", "description": "DHE-DSS-CAMELLIA256-SHA", "default": "\"false\""}, {"name": "ecdhe_ecdsa_aes128_sha", "description": "ECDHE-ECDSA-AES128-SHA", "default": "\"false\""}, {"name": "ecdhe_ecdsa_aes256_sha", "description": "ECDHE-ECDSA-AES256-SHA", "default": "\"false\""}, {"name": "dhe_dss_camellia128_sha", "description": "DHE-DSS-CAMELLIA128-SHA", "default": "\"false\""}, {"name": "exp_edh_dss_des_cbc_sha", "description": "EXP-EDH-DSS-DES-CBC-SHA", "default": "\"false\""}, {"name": "exp_krb5_rc4_md5", "description": "EXP-KRB5-RC4-MD5", "default": "\"false\""}, {"name": "exp_krb5_rc4_sha", "description": "EXP-KRB5-RC4-SHA", "default": "\"false\""}, {"name": "exp_rc2_cbc_md5", "description": "EXP-RC2-CBC-MD5", "default": "\"false\""}, {"name": "adh_camellia256_sha", "description": "ADH-CAMELLIA256-SHA", "default": "\"false\""}, {"name": "exp_edh_rsa_des_cbc_sha", "description": "EXP-EDH-RSA-DES-CBC-SHA", "default": "\"false\""}, {"name": "exp_krb5_des_cbc_sha", "description": "EXP-KRB5-DES-CBC-SHA", "default": "\"false\""}, {"name": "exp_krb5_rc2_cbc_md5", "description": "EXP-KRB5-RC2-CBC-MD5", "default": "\"false\""}, {"name": "exp_rc4_md5", "description": "EXP-RC4-MD5", "default": "\"false\""}, {"name": "psk_rc4_sha", "description": "PSK-RC4-SHA", "default": "\"false\""}, {"name": "aes256_sha256", "description": "AES256-SHA256", "default": "\"false\""}, {"name": "dhe_rsa_aes128_sha256", "description": "DHE-RSA-AES128-SHA256", "default": "\"false\""}, {"name": "dhe_rsa_aes256_gcm_sha384", "description": "DHE-RSA-AES256-GCM-SHA384", "default": "\"false\""}, {"name": "ecdhe_ecdsa_aes128_gcm_sha256", "description": "ECDHE-ECDSA-AES128-GCM-SHA256", "default": "\"false\""}, {"name": "ecdhe_rsa_aes256_gcm_sha384", "description": "ECDHE-RSA-AES256-GCM-SHA384", "default": "\"false\""}, {"name": "edh_rsa_des_cbc3_sha", "description": "EDH-RSA-DES-CBC3-SHA", "default": "\"false\""}, {"name": "exp_adh_rc4_md5", "description": "EXP-ADH-RC4-MD5", "default": "\"false\""}, {"name": "ssl_policy_name", "description": "Name of SSL Policy", "default": ""}]}, "alvin-huang/datadog-integration/aws": {"name": "datadog-integration", "url": "https://registry.terraform.io/modules/alvin-huang/datadog-integration/aws", "provider": "aws", "downloads": 203, "description": "Terraform Module to set up the Datadog AWS Integration", "source": "alvin-huang/datadog-integration/aws", "args": [{"name": "external_id", "description": "The external_id provided in the Datadog AWS Integration (https://app.datadoghq.com/account/settings#integrations/amazon_web_services)", "default": ""}]}, "telia-oss/asg/aws": {"name": "asg", "url": "https://registry.terraform.io/modules/telia-oss/asg/aws", "provider": "aws", "downloads": 198, "description": "Autoscaling group module for Terraform", "source": "telia-oss/asg/aws", "args": [{"name": "vpc_id", "description": "The VPC ID.", "default": ""}, {"name": "subnet_ids", "description": "ID of subnets where instances can be provisioned.", "default": ""}, {"name": "instance_volume_size", "description": "The size of the volume in gigabytes.", "default": "\"8\""}, {"name": "instance_policy", "description": "A policy document to apply to the instance profile.", "default": "\"{\\n    \\\"Version\\\": \\\"2012-10-17\\\",\\n    \\\"Statement\\\": [\\n        {\\n            \\\"Sid\\\": \\\"denynothing\\\",\\n            \\\"Effect\\\": \\\"Deny\\\",\\n            \\\"NotAction\\\": \\\"*\\\",\\n            \\\"NotResource\\\": \\\"*\\\"\\n        }\\n    ]\\n}\\n\""}, {"name": "pause_time", "description": "Pause time for the autoscaling rolling update policy.", "default": "\"PT5M\""}, {"name": "min_size", "description": "The minimum (and desired) size of the auto scale group.", "default": "\"1\""}, {"name": "max_size", "description": "The maximum size of the auto scale group.", "default": "\"3\""}, {"name": "health_check_type", "description": "EC2 or ELB. Controls how health checking is done.", "default": "\"EC2\""}, {"name": "user_data", "description": "The user data to provide when launching the instance.", "default": "\"\""}, {"name": "instance_ami", "description": "The EC2 image ID to launch.", "default": ""}, {"name": "tags", "description": "A map of tags (key-value pairs) passed to resources.", "default": "{}"}, {"name": "name_prefix", "description": "A prefix used for naming resources.", "default": ""}, {"name": "instance_type", "description": "Type of instance to provision.", "default": "\"t2.micro\""}, {"name": "instance_key", "description": "The key name that should be used for the instance.", "default": "\"\""}, {"name": "ebs_block_devices", "description": "Additional EBS block devices to attach to the instance.", "default": "[]"}, {"name": "await_signal", "description": "Await signals (WaitOnResourceSignals) for the autoscaling rolling update policy.", "default": "\"false\""}]}, "cloudposse/cloudfront-s3-cdn/aws": {"name": "cloudfront-s3-cdn", "url": "https://registry.terraform.io/modules/cloudposse/cloudfront-s3-cdn/aws", "provider": "aws", "downloads": 186, "description": "Terraform module to easily provision CloudFront CDN backed by an S3 origin", "source": "cloudposse/cloudfront-s3-cdn/aws", "args": [{"name": "origin_force_destroy", "description": "", "default": "\"false\""}, {"name": "log_prefix", "description": "", "default": "\"\""}, {"name": "log_glacier_transition_days", "description": "Number of days after which to move the data to the glacier storage tier", "default": "\"60\""}, {"name": "viewer_protocol_policy", "description": "allow-all, redirect-to-https", "default": "\"redirect-to-https\""}, {"name": "parent_zone_id", "description": "", "default": "\"\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "cors_allowed_methods", "description": "", "default": "[\n  \"GET\"\n]"}, {"name": "cors_expose_headers", "description": "", "default": "[\n  \"ETag\"\n]"}, {"name": "min_ttl", "description": "", "default": "\"0\""}, {"name": "default_root_object", "description": "", "default": "\"index.html\""}, {"name": "geo_restriction_locations", "description": "", "default": "[]"}, {"name": "null", "description": "an empty string", "default": "\"\""}, {"name": "name", "description": "Name  (e.g. `bastion` or `db`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "aliases", "description": "List of FQDN's - Used to set the Alternate Domain Names (CNAMEs) setting on Cloudfront", "default": "[]"}, {"name": "origin_path", "description": "(Optional) - An optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin. It must begin with a /. Do not add a / at the end of the path.", "default": "\"\""}, {"name": "comment", "description": "", "default": "\"Managed by Terraform\""}, {"name": "log_include_cookies", "description": "", "default": "\"false\""}, {"name": "log_expiration_days", "description": "Number of days after which to expunge the objects", "default": "\"90\""}, {"name": "static_s3_bucket", "description": "aws-cli is a bucket owned by amazon that will perminantly exist\nIt allows for the data source to be called during the destruction process without failing.\nIt doesn't get used for anything else, this is a safe workaround for handling the fact that \nif a data source like the one `aws_s3_bucket.selected` gets an error, you can't continue the terraform process\nwhich also includes the 'destroy' command, where is doesn't even need this data source!\nDon't change this bucket name, its a variable so that we can provide this description.\nAnd this works around a problem that is an edge case.\n", "default": "\"aws-cli\""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "acm_certificate_arn", "description": "Existing ACM Certificate ARN", "default": "\"\""}, {"name": "is_ipv6_enabled", "description": "", "default": "\"true\""}, {"name": "parent_zone_name", "description": "", "default": "\"\""}, {"name": "cors_max_age_seconds", "description": "", "default": "\"3600\""}, {"name": "forward_cookies", "description": "", "default": "\"none\""}, {"name": "price_class", "description": "", "default": "\"PriceClass_100\""}, {"name": "allowed_methods", "description": "", "default": "[\n  \"DELETE\",\n  \"GET\",\n  \"HEAD\",\n  \"OPTIONS\",\n  \"PATCH\",\n  \"POST\",\n  \"PUT\"\n]"}, {"name": "log_standard_transition_days", "description": "Number of days to persist in the standard storage tier before moving to the glacier tier", "default": "\"30\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "use_regional_s3_endpoint", "description": "When set to 'true' the s3 origin_bucket will use the regional endpoint address instead of the global endpoint address", "default": "\"false\""}, {"name": "bucket_domain_format", "description": "", "default": "\"%s.s3.amazonaws.com\""}, {"name": "compress", "description": "", "default": "\"false\""}, {"name": "enabled", "description": "", "default": "\"true\""}, {"name": "forward_query_string", "description": "", "default": "\"false\""}, {"name": "default_ttl", "description": "", "default": "\"60\""}, {"name": "geo_restriction_type", "description": "", "default": "\"none\""}, {"name": "max_ttl", "description": "", "default": "\"31536000\""}, {"name": "origin_bucket", "description": "", "default": "\"\""}, {"name": "cors_allowed_headers", "description": "", "default": "[\n  \"*\"\n]"}, {"name": "cors_allowed_origins", "description": "", "default": "[]"}, {"name": "cached_methods", "description": "", "default": "[\n  \"GET\",\n  \"HEAD\"\n]"}]}, "scholzj/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/scholzj/kubernetes/aws", "provider": "aws", "downloads": 185, "description": "Terraform module for Kubernetes setup on AWS", "source": "scholzj/kubernetes/aws", "args": [{"name": "hosted_zone", "description": "Hosted zone to be used for the alias", "default": ""}, {"name": "hosted_zone_private", "description": "Is the hosted zone public or private", "default": "false"}, {"name": "aws_region", "description": "Region where Cloud Formation is created", "default": "\"eu-central-1\""}, {"name": "cluster_name", "description": "Name of the AWS Kubernetes cluster - will be used to name all created resources", "default": ""}, {"name": "addons", "description": "list of YAML files with Kubernetes addons which should be installed", "default": ""}, {"name": "min_worker_count", "description": "Minimal number of worker nodes", "default": ""}, {"name": "ssh_public_key", "description": "Path to the pulic part of SSH key which should be used for the instance", "default": "\"~/.ssh/id_rsa.pub\""}, {"name": "master_instance_type", "description": "Type of instance for master", "default": "\"t2.medium\""}, {"name": "api_access_cidr", "description": "List of CIDRs from which API access is allowed", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "tags", "description": "Tags used for the AWS resources created by this template", "default": ""}, {"name": "worker_instance_type", "description": "Type of instance for workers", "default": "\"t2.medium\""}, {"name": "master_subnet_id", "description": "The subnet-id to be used for the master instance. Master can be only in single subnet. All subnets have to belong to the same VPC.", "default": ""}, {"name": "tags2", "description": "Tags in format used for the AWS Autoscaling Group", "default": ""}, {"name": "worker_subnet_ids", "description": "The subnet-ids to be used for the worker instances. Workers can be in multiple subnets. Worker subnets can contain also the master subnet. If you want to run workers in different subnet(s) than master you have to tag the subnets with kubernetes.io/cluster/{cluster_name}=shared.  All subnets have to belong to the same VPC.", "default": ""}, {"name": "max_worker_count", "description": "Maximal number of worker nodes", "default": ""}, {"name": "ssh_access_cidr", "description": "List of CIDRs from which SSH access is allowed", "default": "[\n  \"0.0.0.0/0\"\n]"}]}, "cloudowski/config-state/aws": {"name": "config-state", "url": "https://registry.terraform.io/modules/cloudowski/config-state/aws", "provider": "aws", "downloads": 178, "description": "Terraform code to provision terraform state backend on AWS", "source": "cloudowski/config-state/aws", "args": [{"name": "region", "description": "The region where to create backend resources", "default": "\"us-east-1\""}, {"name": "bucket_name", "description": "Name of the bucket for terraform state", "default": "\"tfstate\""}, {"name": "bucket_versioning", "description": "Versioning feature of s3 bucket", "default": "\"false\""}, {"name": "dynamodb_table_name", "description": "Name of dynamodb table for terraform state", "default": "\"tfstate\""}]}, "mitchellh/dynamic-keys/aws": {"name": "dynamic-keys", "url": "https://registry.terraform.io/modules/mitchellh/dynamic-keys/aws", "provider": "aws", "downloads": 175, "description": "Terraform module that dynamically generates a public/private keypair.", "source": "mitchellh/dynamic-keys/aws", "args": [{"name": "name", "description": "Unique name for the key, should also be a valid filename. This will prefix the public/private key.", "default": ""}, {"name": "path", "description": "Path to a directory where the public and private key will be stored.", "default": "\"\""}]}, "hashicorp/nomad/aws": {"name": "nomad", "url": "https://registry.terraform.io/modules/hashicorp/nomad/aws", "provider": "aws", "downloads": 173, "description": "A Terraform Module for how to run Nomad on AWS using Terraform and Packer", "source": "hashicorp/nomad/aws", "args": [{"name": "num_clients", "description": "The number of client nodes to deploy. You can deploy as many as you need to run your jobs.", "default": "6"}, {"name": "cluster_tag_key", "description": "The tag the EC2 Instances will look for to automatically discover each other and form a cluster.", "default": "\"nomad-servers\""}, {"name": "cluster_tag_value", "description": "Add a tag with key var.cluster_tag_key and this value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster.", "default": "\"auto-join\""}, {"name": "ssh_key_name", "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.", "default": "\"\""}, {"name": "ami_id", "description": "The ID of the AMI to run in the cluster. This should be an AMI built from the Packer template under examples/nomad-consul-ami/nomad-consul.json. If no AMI is specified, the template will 'just work' by using the example public AMIs. WARNING! Do not use the example AMIs in a production setting!", "default": "\"\""}, {"name": "cluster_name", "description": "What to name the cluster and all of its associated resources", "default": "\"nomad-example\""}, {"name": "instance_type", "description": "What kind of instance type to use for the nomad clients", "default": "\"t2.micro\""}, {"name": "num_servers", "description": "The number of server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}]}, "cloudposse/s3-log-storage/aws": {"name": "s3-log-storage", "url": "https://registry.terraform.io/modules/cloudposse/s3-log-storage/aws", "provider": "aws", "downloads": 173, "description": "This module creates an S3 bucket suitable for receiving logs from other AWS services such as S3, CloudFront, and CloudTrails", "source": "cloudposse/s3-log-storage/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `db`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "acl", "description": "(Optional) The canned ACL to apply. We recommend log-delivery-write for compatibility with AWS services", "default": "\"log-delivery-write\""}, {"name": "policy", "description": "A valid bucket policy JSON document. Note that if the policy document is not specific enough (but still valid), Terraform may view the policy as constantly changing in a terraform plan. In this case, please make sure you use the verbose/specific version of the policy.", "default": "\"\""}, {"name": "prefix", "description": "(Optional) Key prefix. Used to manage object lifecycle events.", "default": "\"\""}, {"name": "region", "description": "(Optional) If specified, the AWS region this bucket should reside in. Otherwise, the region used by the callee.", "default": "\"\""}, {"name": "force_destroy", "description": "(Optional, Default:false ) A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.", "default": "\"false\""}, {"name": "lifecycle_rule_enabled", "description": "(Optional) enable lifecycle events on this bucket", "default": "\"true\""}, {"name": "versioning_enabled", "description": "(Optional) A state of versioning. Versioning is a means of keeping multiple variants of an object in the same bucket.", "default": "\"false\""}, {"name": "noncurrent_version_expiration_days", "description": "(Optional) Specifies when noncurrent object versions expire.", "default": "\"90\""}, {"name": "noncurrent_version_transition_days", "description": "(Optional) Specifies when noncurrent object versions transitions", "default": "\"30\""}, {"name": "standard_transition_days", "description": "Number of days to persist in the standard storage tier before moving to the infrequent access tier", "default": "\"30\""}, {"name": "glacier_transition_days", "description": "Number of days after which to move the data to the glacier storage tier", "default": "\"60\""}, {"name": "expiration_days", "description": "Number of days after which to expunge the objects", "default": "\"90\""}, {"name": "sse_algorithm", "description": "The server-side encryption algorithm to use. Valid values are AES256 and aws:kms", "default": "\"AES256\""}, {"name": "kms_master_key_id", "description": "The AWS KMS master key ID used for the SSE-KMS encryption. This can only be used when you set the value of sse_algorithm as aws:kms. The default aws/s3 AWS KMS master key is used if this element is absent while the sse_algorithm is aws:kms", "default": "\"\""}]}, "autonomy/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/autonomy/kubernetes/aws", "provider": "aws", "downloads": 170, "description": "Terraform module for Kubernetes on AWS", "source": "autonomy/kubernetes/aws", "args": [{"name": "api_server_extra_args", "description": "The apiServerExtraArgs field in YAML format that is part of the master configuration file.\nSee https://kubernetes.io/docs/reference/setup-tools/kubeadm/kubeadm-init/\n", "default": "[]"}, {"name": "autoscaling_groups", "description": "A map that describes sets of nodes to join in the cluster.", "default": ""}, {"name": "autoscaling_groups_list_count", "description": "An explicit declaration of the length of the autoscaling_groups list. See the following issues for more details:\n  * https://github.com/hashicorp/terraform/issues/13980#issuecomment-297605688\n  * https://github.com/hashicorp/terraform/issues/4149\n  * https://github.com/hashicorp/terraform/issues/17101\n", "default": ""}, {"name": "cluster_dns", "description": "The DNS record to be used for HA API control plane.", "default": ""}, {"name": "cluster_name", "description": "The name of the cluster, required by the AWS cloud provider. This will translate\ninto tags with the key kubernetes.io/cluster/${var.cluster_name}.\n", "default": ""}, {"name": "extra_tags", "description": "The tags to add to resources.", "default": "{}"}, {"name": "extra_asg_tags", "description": "The tags to add to ASG nodes.", "default": "[]"}, {"name": "inbound_cidr_block", "description": "The inbound CIDR block to allow.", "default": "\"0.0.0.0/0\""}, {"name": "instances", "description": "A map that describes sets of ingress nodes to join in the cluster.", "default": ""}, {"name": "instances_count", "description": "An explicit declaration of the number of instances to create. See the following issues for more details:\n\n  * https://github.com/hashicorp/terraform/issues/13980#issuecomment-297605688\n  * https://github.com/hashicorp/terraform/issues/4149\n  * https://github.com/hashicorp/terraform/issues/17101\n\nCurrently only supports a list of length 1.\n", "default": ""}, {"name": "kubernetes_token_id", "description": "The token ID generted by kubeadm.", "default": ""}, {"name": "kubernetes_token_secret", "description": "The token secret generted by kubeadm.", "default": ""}, {"name": "kubernetes_version", "description": "The version of Kubernetes to use.", "default": "\"v1.9.3\""}, {"name": "master_instance_type", "description": "The EC2 instance type for master nodes.", "default": "\"m4.large\""}, {"name": "master_volume_size", "description": "The size of the EBS volume for the master nodes.", "default": "\"500\""}, {"name": "master_volume_type", "description": "The type EBS volume for the master nodes.", "default": "\"gp2\""}, {"name": "network_interface_ids", "description": "The list of ENI IDs for master nodes.", "default": ""}, {"name": "network_interface_private_ips", "description": "The list of ENI IPs for master nodes.", "default": ""}, {"name": "outbound_cidr_block", "description": "The outbound CIDR block to allow.", "default": "\"0.0.0.0/0\""}, {"name": "pod_network_cidr", "description": "The CIDR block for the Flannel CNI plugin.", "default": "\"10.244.0.0/16\""}, {"name": "public_key", "description": "The public portion of an SSH key for remote access.", "default": ""}, {"name": "resource_suffix", "description": "The suffix to append to created resources.", "default": ""}, {"name": "service_network_cidr", "description": "The CIDR block for internal Kubernetes services.", "default": "\"10.96.0.0/12\""}, {"name": "vpc_id", "description": "The VPC to create resources in.", "default": ""}]}, "tkskwn/ec2-iam-role/aws": {"name": "ec2-iam-role", "url": "https://registry.terraform.io/modules/tkskwn/ec2-iam-role/aws", "provider": "aws", "downloads": 169, "description": "AWS IAM Role module of Terraform.", "source": "tkskwn/ec2-iam-role/aws", "args": [{"name": "name", "description": "The name of the IAM Role.", "default": ""}, {"name": "assume_role_policy", "description": "Assume Role Policy.", "default": "\"\""}, {"name": "force_detach_policies", "description": "Forcibly detach the policy of the role.", "default": "false"}, {"name": "path", "description": "The path to the IAM Role.", "default": "\"/\""}, {"name": "description", "description": "The description of the IAM Role.", "default": "\"This IAM Role generated by Terraform.\""}, {"name": "policy_arn", "description": "Attache the policies to the IAM Role.", "default": ""}]}, "mediapop/route53-alias/aws": {"name": "route53-alias", "url": "https://registry.terraform.io/modules/mediapop/route53-alias/aws", "provider": "aws", "downloads": 169, "description": "Simplest way to set up IPv4 and IPv6 aliases.", "source": "mediapop/route53-alias/aws", "args": [{"name": "alias_hosted_zone_id", "description": "The hosted_zone_id to alias", "default": ""}, {"name": "alias_domain_name", "description": "The domain_name on the hosted_zone_id to alias", "default": ""}, {"name": "record_types", "description": "The types of records to set. Default is A and AAAA", "default": "[\n  \"A\",\n  \"AAAA\"\n]"}, {"name": "domains", "description": "A map {\"zone.com.\" = [\"zone.com\",\"www.zone.com\"],\"foo.com\" = [\"foo.com\"] } of domains.", "default": ""}]}, "Smartbrood/vpn/aws": {"name": "vpn", "url": "https://registry.terraform.io/modules/Smartbrood/vpn/aws", "provider": "aws", "downloads": 168, "description": "Terraform module to setup VPN", "source": "Smartbrood/vpn/aws", "args": [{"name": "vpn_enabled", "description": "For ability to disable VPN creation in upper level modules. It seems modules doesn't support count parameter for now", "default": "\"true\""}, {"name": "vpc_id", "description": "VPC ID", "default": ""}, {"name": "cgw_ip_1", "description": "Primary customer gateway ip", "default": ""}, {"name": "cgw_ip_2", "description": "Secondary customer gateway ip", "default": ""}, {"name": "bgp_asn", "description": "BGP ASN for the VPN", "default": "\"65000\""}, {"name": "type", "description": "VPN type", "default": "\"ipsec.1\""}, {"name": "static_routes_only", "description": "Enable static routes only", "default": "\"false\""}, {"name": "tags", "description": "Tags for VPN resources", "default": ""}]}, "tiguard/route53-o365/aws": {"name": "route53-o365", "url": "https://registry.terraform.io/modules/tiguard/route53-o365/aws", "provider": "aws", "downloads": 165, "description": "Terraform module to create Office 365 Route53 DNS records", "source": "tiguard/route53-o365/aws", "args": [{"name": "domain", "description": "The DNS name of the domain in which to create the Office 365 records.", "default": "\"\""}, {"name": "zone_id", "description": "The Zone ID of the Route53 DNS zone.", "default": "\"\""}, {"name": "ttl", "description": "The time-to-live value for the DNS records.", "default": "\"3600\""}, {"name": "ms_txt", "description": "The value of the MS=mxXYZ TXT record which Office 365 requires to prove domain ownership.", "default": "\"\""}, {"name": "enable_exchange", "description": "Controls if the DNS records for Exchange Online should be created.", "default": "true"}, {"name": "enable_sfb", "description": "Controls if the DNS records for Skype for Business should be created.", "default": "true"}, {"name": "tenant_name", "description": "The Office 365 tenant name.", "default": "\"\""}, {"name": "custom_mx_record", "description": "The value of the custom MX record to create.", "default": "\"\""}, {"name": "enable_mdm", "description": "Controls if the DNS records for Mobile Device Management should be created.", "default": "true"}, {"name": "enable_dkim", "description": "Controls if the DNS records for DKIM should be created.", "default": "false"}, {"name": "enable_dmarc", "description": "Controls if the DNS record for DMARC should be created.", "default": "false"}, {"name": "dmarc_record", "description": "The value of the DMARC record.", "default": "\"\""}, {"name": "enable_custom_mx", "description": "Controls whether a custom MX record should be created instead of the O365 default.", "default": "false"}]}, "infrablocks/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/infrablocks/bastion/aws", "provider": "aws", "downloads": 163, "description": "Terraform module for adding a supervised bastion into an existing network.", "source": "infrablocks/bastion/aws", "args": [{"name": "region", "description": "The region into which to deploy the bastion.", "default": ""}, {"name": "vpc_id", "description": "The ID of the VPC the bastion should be deployed into.", "default": ""}, {"name": "subnet_ids", "description": "The IDs of the subnets the bastion should deploy into.", "default": ""}, {"name": "component", "description": "The name of this component.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "ami", "description": "The ID of the AMI for the bastion instances.", "default": ""}, {"name": "instance_type", "description": "The instance type of the bastion instances.", "default": "\"t2.nano\""}, {"name": "ssh_public_key_path", "description": "The absolute path of the SSH public key to use for bastion access.", "default": ""}, {"name": "allowed_cidrs", "description": "The CIDRs that are allowed to access the bastion.", "default": ""}, {"name": "egress_cidrs", "description": "The CIDRs that are reachable from the bastion.", "default": ""}, {"name": "load_balancer_names", "description": "The names of the load balancers to update on autoscaling events.", "default": "[]"}, {"name": "minimum_instances", "description": "The minimum number of bastion instances.", "default": "1"}, {"name": "maximum_instances", "description": "The maximum number of bastion instances.", "default": "1"}, {"name": "desired_instances", "description": "The desired number of bastion instances.", "default": "1"}]}, "kurron/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/kurron/bastion/aws", "provider": "aws", "downloads": 161, "description": "Terraform module that creates an auto-scaling group of Bastion servers, allowing SSH access to the private EC2 instances", "source": "kurron/bastion/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "instance_type", "description": "Instance type to make the Bastion host from", "default": ""}, {"name": "ssh_key_name", "description": "Name of the SSH key pair to use when logging into the bastion host", "default": ""}, {"name": "max_size", "description": "Maximum number of bastion instances that can be run simultaneously", "default": ""}, {"name": "min_size", "description": "Minimum number of bastion instances that can be run simultaneously", "default": ""}, {"name": "cooldown", "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start.", "default": ""}, {"name": "health_check_grace_period", "description": "Time, in seconds, after instance comes into service before checking health.", "default": ""}, {"name": "desired_capacity", "description": "The number of bastion instances that should be running in the group.", "default": ""}, {"name": "scale_down_desired_capacity", "description": "The number of bastion instances that should be running when scaling down.", "default": ""}, {"name": "scale_down_min_size", "description": "Minimum number of bastion instances that can be running when scaling down", "default": ""}, {"name": "scale_up_cron", "description": "In UTC, when to scale up the bastion servers", "default": ""}, {"name": "scale_down_cron", "description": "In UTC, when to scale down the bastion servers", "default": ""}, {"name": "public_ssh_key", "description": "Public half of the SSH key to import into AWS", "default": ""}, {"name": "security_group_ids", "description": "List of security groups to apply to the instances", "default": ""}, {"name": "subnet_ids", "description": "List of subnets to create the instances in", "default": ""}]}, "mediapop/certificate/aws": {"name": "certificate", "url": "https://registry.terraform.io/modules/mediapop/certificate/aws", "provider": "aws", "downloads": 156, "description": "Simple way of creating validated certs over multiple domains and zones.", "source": "mediapop/certificate/aws", "args": [{"name": "domains", "description": "A map {\"zone.com.\" = [\"zone.com\",\"www.zone.com\"],\"foo.com\" = [\"foo.com\"] } of domains.", "default": ""}]}, "trussworks/s3-private-bucket/aws": {"name": "s3-private-bucket", "url": "https://registry.terraform.io/modules/trussworks/s3-private-bucket/aws", "provider": "aws", "downloads": 155, "description": "Creates a private, encrypted, versioned S3 bucket with good defaults.", "source": "trussworks/s3-private-bucket/aws", "args": [{"name": "custom_bucket_policy", "description": "JSON formatted bucket policy to attach to the bucket.", "default": "\"\""}, {"name": "logging_bucket", "description": "The S3 bucket to send S3 access logs.", "default": ""}, {"name": "tags", "description": "A mapping of tags to assign to the bucket.", "default": "{}"}, {"name": "bucket", "description": "The name of the bucket. It will be prefixed with the AWS account alias.", "default": ""}]}, "alibaba/vpc/alicloud": {"name": "vpc", "url": "https://registry.terraform.io/modules/alibaba/vpc/alicloud", "provider": "alicloud", "downloads": 153, "description": "Terraform module which creates VPC and Subnet resources on Alibaba Cloud.", "source": "alibaba/vpc/alicloud", "args": [{"name": "vpc_name", "description": "The vpc name used to launch a new vpc when 'vpc_id' is not specified.", "default": "\"TF-VPC\""}, {"name": "vpc_cidr", "description": "The cidr block used to launch a new vpc when 'vpc_id' is not specified.", "default": "\"172.16.0.0/12\""}, {"name": "vswitch_cidrs", "description": "List of cidr blocks used to launch several new vswitches.", "default": "[]"}, {"name": "vswitch_name", "description": "The vswitch name prefix used to launch several new vswitch.", "default": "\"TF_VSwitch\""}, {"name": "region", "description": "The region to launch resources.", "default": "\"cn-hongkong\""}, {"name": "cpu_core_count", "description": "CPU core count used to fetch instance types.", "default": "1"}, {"name": "memory_size", "description": "Memory size used to fetch instance types.", "default": "2"}, {"name": "vpc_description", "description": "The vpc description used to launch a new vpc when 'vpc_id' is not specified.", "default": "\"A new VPC created by Terrafrom module tf-alicloud-vpc-cluster\""}, {"name": "availability_zones", "description": "List available zones to launch several VSwitches.", "default": "[\n  \"\"\n]"}, {"name": "route_table_id", "description": "The route table ID of virtual router in the specified VPC.", "default": "\"\""}, {"name": "destination_cidrs", "description": "List of destination CIDR block of virtual router in the specified VPC.", "default": "[]"}, {"name": "nexthop_ids", "description": "List of next hop instance IDs of virtual router in the specified VPC.", "default": "[]"}, {"name": "number_format", "description": "The number format used to output.", "default": "\"%02d\""}, {"name": "vpc_id", "description": "The vpc id used to launch several vswitches.", "default": "\"\""}, {"name": "vswitch_description", "description": "The vswitch description used to launch several new vswitch.", "default": "\"New VSwitch created by Terrafrom module tf-alicloud-vpc-cluster.\""}]}, "infrablocks/ecr-repository/aws": {"name": "ecr-repository", "url": "https://registry.terraform.io/modules/infrablocks/ecr-repository/aws", "provider": "aws", "downloads": 153, "description": "A Terraform module for building an ECR repository in AWS.", "source": "infrablocks/ecr-repository/aws", "args": [{"name": "repository_name", "description": "The repository name to use for the ECR repository.", "default": ""}]}, "mediapop/redirect/aws": {"name": "redirect", "url": "https://registry.terraform.io/modules/mediapop/redirect/aws", "provider": "aws", "downloads": 146, "description": "Auto provision HTTPS and IPv6 301 redirects over a batch of hosts.", "source": "mediapop/redirect/aws", "args": [{"name": "domains", "description": "A map {\"zone.com.\" = [\"zone.com\",\"www.zone.com\"],\"foo.com\" = [\"foo.com\"] } of domains.", "default": ""}, {"name": "redirect_to", "description": "The redirect target, the protoctol is optional as https:// will always be enforced.", "default": ""}]}, "Automatic/hedwig-queue-subscription/aws": {"name": "hedwig-queue-subscription", "url": "https://registry.terraform.io/modules/Automatic/hedwig-queue-subscription/aws", "provider": "aws", "downloads": 142, "description": "", "source": "Automatic/hedwig-queue-subscription/aws", "args": [{"name": "queue", "description": "SQS ARN for the main Hedwig queue", "default": ""}, {"name": "topic", "description": "SNS ARN for the Hedwig topic", "default": ""}]}, "Azure/database/azurerm": {"name": "database", "url": "https://registry.terraform.io/modules/Azure/database/azurerm", "provider": "azurerm", "downloads": 140, "description": "Terraform Azure RM Module for Database", "source": "Azure/database/azurerm", "args": [{"name": "resource_group_name", "description": "Default resource group name that the database will be created in.", "default": "\"myapp-rg\""}, {"name": "location", "description": "The location/region where the database and server are created. Changing this forces a new resource to be created.", "default": ""}, {"name": "server_version", "description": "The version for the database server. Valid values are: 2.0 (for v11 server) and 12.0 (for v12 server).", "default": "\"12.0\""}, {"name": "db_name", "description": "The name of the database to be created.", "default": ""}, {"name": "db_edition", "description": "The edition of the database to be created.", "default": "\"Basic\""}, {"name": "service_objective_name", "description": "The performance level for the database. For the list of acceptable values, see https://docs.microsoft.com/en-gb/azure/sql-database/sql-database-service-tiers. Default is Basic.", "default": "\"Basic\""}, {"name": "collation", "description": "The collation for the database. Default is SQL_Latin1_General_CP1_CI_AS", "default": "\"SQL_Latin1_General_CP1_CI_AS\""}, {"name": "sql_admin_username", "description": "The administrator username of the SQL Server.", "default": ""}, {"name": "sql_password", "description": "The administrator password of the SQL Server.", "default": ""}, {"name": "start_ip_address", "description": "Defines the start IP address used in your database firewall rule.", "default": "\"0.0.0.0\""}, {"name": "end_ip_address", "description": "Defines the end IP address used in your database firewall rule.", "default": "\"0.0.0.0\""}, {"name": "tags", "description": "The tags to associate with your network and subnets.", "default": "{\n  \"tag1\": \"\",\n  \"tag2\": \"\"\n}"}]}, "otassetti/ami-search/aws": {"name": "ami-search", "url": "https://registry.terraform.io/modules/otassetti/ami-search/aws", "provider": "aws", "downloads": 138, "description": "Terraform module to find the last version of an AWS Ami IDs for working region.", "source": "otassetti/ami-search/aws", "args": [{"name": "os", "description": "The Os reference to search for", "default": ""}, {"name": "amis_primary_owners", "description": "Force the ami Owner, could be (self) or specific (id)", "default": "\"\""}, {"name": "amis_os_map_regex", "description": "Map of regex to search amis", "default": "{\n  \"amazon\": \"^amzn-ami-hvm-.*-gp2\",\n  \"amazon-2_lts\": \"^amzn2-ami-hvm-.*-gp2\",\n  \"centos\": \"^CentOS Linux 7.*\",\n  \"centos-6\": \"^CentOS Linux 6.*\",\n  \"centos-7\": \"^CentOS Linux 7.*\",\n  \"debian\": \"^debian-stretch-.*\",\n  \"debian-8\": \"^debian-jessie-.*\",\n  \"debian-9\": \"^debian-stretch-.*\",\n  \"fedora-27\": \"^Fedora-Cloud-Base-27-.*-gp2.*\",\n  \"rhel\": \"^RHEL-7.*\",\n  \"rhel-6\": \"^RHEL-6.*\",\n  \"rhel-7\": \"^RHEL-7.*\",\n  \"suse-les\": \"^suse-sles-12-sp\\\\d-v\\\\d{8}-hvm-ssd-x86_64\",\n  \"suse-les-12\": \"^suse-sles-12-sp\\\\d-v\\\\d{8}-hvm-ssd-x86_64\",\n  \"ubuntu\": \"^ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-.*\",\n  \"ubuntu-14.04\": \"^ubuntu/images/hvm-ssd/ubuntu-trusty-14.04-amd64-server-.*\",\n  \"ubuntu-16.04\": \"^ubuntu/images/hvm-ssd/ubuntu-xenial-16.04-amd64-server-.*\",\n  \"windows\": \"^Windows_Server-2016-English-Full-Base-.*\",\n  \"windows-2008-r2-base\": \"^Windows_Server-2008-R2_SP1-English-64Bit-Base-.*\",\n  \"windows-2012-r2-base\": \"^Windows_Server-2012-R2_RTM-English-64Bit-Base-.*\",\n  \"windows-2016-base\": \"^Windows_Server-2016-English-Full-Base-.*\"\n}"}, {"name": "amis_os_map_owners", "description": "Map of amis owner to filter only official amis", "default": "{\n  \"amazon\": \"137112412989\",\n  \"amazon-2_lts\": \"137112412989\",\n  \"centos\": \"679593333241\",\n  \"centos-6\": \"679593333241\",\n  \"centos-7\": \"679593333241\",\n  \"debian\": \"679593333241\",\n  \"debian-8\": \"679593333241\",\n  \"debian-9\": \"679593333241\",\n  \"fedora-27\": \"125523088429\",\n  \"rhel\": \"309956199498\",\n  \"rhel-6\": \"309956199498\",\n  \"rhel-7\": \"309956199498\",\n  \"suse-les\": \"013907871322\",\n  \"suse-les-12\": \"013907871322\",\n  \"ubuntu\": \"099720109477\",\n  \"ubuntu-14.04\": \"099720109477\",\n  \"ubuntu-16.04\": \"099720109477\",\n  \"windows\": \"801119661308\",\n  \"windows-2008-r2-base\": \"801119661308\",\n  \"windows-2012-r2-base\": \"801119661308\",\n  \"windows-2016-base\": \"801119661308\"\n}"}]}, "cloudposse/vpc-peering/aws": {"name": "vpc-peering", "url": "https://registry.terraform.io/modules/cloudposse/vpc-peering/aws", "provider": "aws", "downloads": 135, "description": "Terraform module to create a peering connection between two VPCs", "source": "cloudposse/vpc-peering/aws", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating or accessing any resources", "default": "\"true\""}, {"name": "requestor_vpc_id", "description": "Requestor VPC ID", "default": ""}, {"name": "acceptor_vpc_id", "description": "Acceptor VPC ID", "default": ""}, {"name": "auto_accept", "description": "Automatically accept the peering (both VPCs need to be in the same AWS account)", "default": "\"true\""}, {"name": "acceptor_allow_remote_vpc_dns_resolution", "description": "Allow acceptor VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the requestor VPC", "default": "\"true\""}, {"name": "requestor_allow_remote_vpc_dns_resolution", "description": "Allow requestor VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the acceptor VPC", "default": "\"true\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}]}, "youngfeldt/backend-s3/aws": {"name": "backend-s3", "url": "https://registry.terraform.io/modules/youngfeldt/backend-s3/aws", "provider": "aws", "downloads": 133, "description": "Terraform S3 backend with state locking.", "source": "youngfeldt/backend-s3/aws", "args": [{"name": "backend_dynamodb_lock_table", "description": "table to hold state lock when updating.  You may want a distinct one for each separate TF state.", "default": ""}, {"name": "backend_s3_bucket", "description": "Name of S3 bucket prepared to hold your terraform state(s)", "default": ""}, {"name": "create_dynamodb_lock_table", "description": "Boolean:  If you have a dynamoDB table already, use that one, else make this true and one will be created", "default": "false"}, {"name": "create_s3_bucket", "description": "Boolean.  If you have an S3 bucket already, use that one, else make this true and one will be created", "default": "false"}, {"name": "use_bucket_encryption", "description": "Boolean.  Encrypt bucket with account default CMK", "default": "false"}, {"name": "use_bucket_versioning", "description": "Boolean.  Leave true for safety, or set to false and role the dice on your fate.", "default": "true"}, {"name": "s3_key", "description": "Path to your state.  Examples: dev/tf.state, prod/tf.state, dev/frontend/tf.state, dev/db-tier.tf, etc..", "default": ""}]}, "andrewsomething/firewall-cloudflare/digitalocean": {"name": "firewall-cloudflare", "url": "https://registry.terraform.io/modules/andrewsomething/firewall-cloudflare/digitalocean", "provider": "digitalocean", "downloads": 129, "description": "Terraform Module for DigitalOcean Firewall + Cloudflare", "source": "andrewsomething/firewall-cloudflare/digitalocean", "args": [{"name": "name", "description": "The name of the firewall to be created.", "default": "\"inbound-cloudflare\""}, {"name": "droplet_ids", "description": "The list of the IDs of the Droplets assigned to the Firewall.", "default": "[]"}, {"name": "tags", "description": "The list of Tag names assigned to the Firewall.", "default": "[]"}]}, "Smartbrood/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/Smartbrood/vpc/aws", "provider": "aws", "downloads": 128, "description": "Terraform module to create VPC", "source": "Smartbrood/vpc/aws", "args": [{"name": "region", "description": "The AWS region.", "default": ""}, {"name": "enable_dns_hostnames", "description": "Enable dns hostnames for VPC.", "default": "true"}, {"name": "enable_dns_support", "description": "Enable dns support for VPC.", "default": "true"}, {"name": "map_public_ip_on_launch", "description": "Map public ip on launch in public subnets.", "default": "true"}, {"name": "vpc_cidr", "description": "The CIDR ip addresses block for VPC.", "default": ""}, {"name": "public_subnet_a", "description": "The CIDR ip addresses block for public subnet in zone a.", "default": ""}, {"name": "public_subnet_b", "description": "The CIDR ip addresses block for public subnet in zone b.", "default": ""}, {"name": "public_subnet_c", "description": "The CIDR ip addresses block for public subnet in zone c.", "default": ""}, {"name": "private_subnet_a", "description": "The CIDR ip addresses block for private subnet in zone a.", "default": ""}, {"name": "private_subnet_b", "description": "The CIDR ip addresses block for private subnet in zone b.", "default": ""}, {"name": "private_subnet_c", "description": "The CIDR ip addresses block for private subnet in zone c.", "default": ""}, {"name": "tags", "description": "", "default": "{\n  \"Terraform\": \"true\"\n}"}]}, "hashicorp/consul/google": {"name": "consul", "url": "https://registry.terraform.io/modules/hashicorp/consul/google", "provider": "google", "downloads": 127, "description": "A Terraform Module for how to run Consul on Google Cloud using Terraform and Packer", "source": "hashicorp/consul/google", "args": [{"name": "gcp_zone", "description": "The region in which all GCP resources will be launched.", "default": ""}, {"name": "consul_server_cluster_name", "description": "The name of the Consul Server cluster. All resources will be namespaced by this value. E.g. consul-server-prod", "default": ""}, {"name": "consul_client_cluster_tag_name", "description": "A tag that will uniquely identify the Consul Clients. In this example, the Consul Server cluster uses this tag to identify the Consul Client servers that should have query permissions.", "default": ""}, {"name": "consul_server_source_image", "description": "The Google Image used to launch each node in the Consul Server cluster.", "default": ""}, {"name": "consul_server_cluster_size", "description": "The number of nodes to have in the Consul Server cluster. We strongly recommended that you use either 3 or 5.", "default": "3"}, {"name": "consul_client_cluster_size", "description": "The number of nodes to have in the Consul Client example cluster. Any number of nodes is permissible, though 3 is usually enough to test..", "default": "3"}, {"name": "gcp_region", "description": "The region in which all GCP resources will be launched.", "default": ""}, {"name": "consul_client_cluster_name", "description": "The name of the Consul Client example cluster. All resources will be namespaced by this value. E.g. consul-client-example", "default": ""}, {"name": "consul_server_cluster_tag_name", "description": "The tag the consul server Compute Instances will look for to automatically discover each other and form a cluster. TIP: If running more than one Consul Server cluster, each cluster should have its own unique tag name. If you're not sure what to put for this value, just use the value entered in var.cluster_name.", "default": ""}, {"name": "consul_client_source_image", "description": "The Google Image used to launch each node in the Consul Client cluster.", "default": ""}, {"name": "gcp_project", "description": "The name of the GCP Project where all resources will be launched.", "default": ""}]}, "cloudposse/ec2-bastion-server/aws": {"name": "ec2-bastion-server", "url": "https://registry.terraform.io/modules/cloudposse/ec2-bastion-server/aws", "provider": "aws", "downloads": 124, "description": "Terraform Module to define a generic Bastion host with parameterized user_data", "source": "cloudposse/ec2-bastion-server/aws", "args": [{"name": "namespace", "description": "", "default": "\"global\""}, {"name": "stage", "description": "", "default": "\"default\""}, {"name": "name", "description": "", "default": "\"bastion\""}, {"name": "zone_id", "description": "", "default": "\"\""}, {"name": "instance_type", "description": "", "default": "\"t2.micro\""}, {"name": "ami", "description": "", "default": "\"ami-efd0428f\""}, {"name": "vpc_id", "description": "", "default": "\"\""}, {"name": "subnets", "description": "", "default": "[]"}, {"name": "user_data", "description": "", "default": "[]"}, {"name": "key_name", "description": "", "default": "\"\""}, {"name": "ssh_user", "description": "", "default": "\"ubuntu\""}, {"name": "security_groups", "description": "", "default": ""}, {"name": "user_data_file", "description": "", "default": "\"user_data.sh\""}]}, "justincampbell/staticsite/aws": {"name": "staticsite", "url": "https://registry.terraform.io/modules/justincampbell/staticsite/aws", "provider": "aws", "downloads": 121, "description": "Terraform module for an S3 website, logging, and DNSimple records", "source": "justincampbell/staticsite/aws", "args": [{"name": "bucket", "description": "The name of the S3 bucket. This is recommended to be host+domain, such as www.justincampbell.me", "default": ""}, {"name": "domain", "description": "Your domain name.", "default": ""}, {"name": "error_document", "description": "Path for a page to return on 404 and other errors.", "default": "\"error.html\""}, {"name": "region", "description": "The AWS region.", "default": "\"us-east-1\""}]}, "matti/grid-outputs/kontena": {"name": "grid-outputs", "url": "https://registry.terraform.io/modules/matti/grid-outputs/kontena", "provider": "kontena", "downloads": 121, "description": "", "source": "matti/grid-outputs/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "name", "description": "", "default": "\"\""}, {"name": "organization", "description": "", "default": "\"\""}]}, "cloudposse/elastic-beanstalk-application/aws": {"name": "elastic-beanstalk-application", "url": "https://registry.terraform.io/modules/cloudposse/elastic-beanstalk-application/aws", "provider": "aws", "downloads": 119, "description": "Terraform Module to define an ElasticBeanstalk Application", "source": "cloudposse/elastic-beanstalk-application/aws", "args": [{"name": "namespace", "description": "", "default": "\"global\""}, {"name": "stage", "description": "", "default": "\"default\""}, {"name": "name", "description": "", "default": "\"app\""}, {"name": "description", "description": "", "default": "\"\""}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "tags", "description": "", "default": "{}"}]}, "cloudposse/route53-cluster-hostname/aws": {"name": "route53-cluster-hostname", "url": "https://registry.terraform.io/modules/cloudposse/route53-cluster-hostname/aws", "provider": "aws", "downloads": 119, "description": "Terraform Module to define a consistent cluster hostname (to be used with tf_domain)", "source": "cloudposse/route53-cluster-hostname/aws", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}, {"name": "namespace", "description": "", "default": "\"global\""}, {"name": "stage", "description": "", "default": "\"default\""}, {"name": "name", "description": "", "default": "\"dns\""}, {"name": "zone_id", "description": "", "default": ""}, {"name": "records", "description": "", "default": ""}, {"name": "type", "description": "", "default": "\"CNAME\""}, {"name": "ttl", "description": "", "default": "\"300\""}]}, "Automatic/hedwig-topic/aws": {"name": "hedwig-topic", "url": "https://registry.terraform.io/modules/Automatic/hedwig-topic/aws", "provider": "aws", "downloads": 119, "description": "", "source": "Automatic/hedwig-topic/aws", "args": [{"name": "topic", "description": "Name of the Hedwig topic (should contain alphanumeric and dashes only by convention); unique across your infra", "default": ""}]}, "Smartbrood/role-network/aws": {"name": "role-network", "url": "https://registry.terraform.io/modules/Smartbrood/role-network/aws", "provider": "aws", "downloads": 117, "description": "Terraform module/role (role means that module contains other modules) to create network related resources.", "source": "Smartbrood/role-network/aws", "args": [{"name": "region", "description": "AWS region", "default": ""}, {"name": "vpc_name", "description": "Name for VPC", "default": ""}, {"name": "security_group_name", "description": "Name for security group", "default": "\"terraform-role-network-security-group\""}, {"name": "ingress_rules_from_any", "description": "List of open ingress ports", "default": "[\n  \"ssh-22-tcp\"\n]"}, {"name": "egress_rules_to_any", "description": "List of open egress ports", "default": "[\n  \"any\"\n]"}, {"name": "ingress_rules", "description": "List of ingress rules to create by name", "default": "[]"}, {"name": "ingress_cidr_blocks", "description": "List of IPv4 CIDR ranges to use on all ingress rules", "default": "[]"}, {"name": "egress_rules", "description": "List of egress rules to create by name", "default": "[]"}, {"name": "egress_cidr_blocks", "description": "List of IPv4 CIDR ranges to use on all egress rules", "default": "[]"}, {"name": "tags", "description": "Map with tags", "default": ""}, {"name": "cidr", "description": "VPC CIDR", "default": ""}, {"name": "public_subnets", "description": "List with public subnets. Module creates one subnet in three availability zones, so list length should be = 3", "default": ""}, {"name": "enable_nat_gateway", "description": "Enable nat gateway", "default": "\"false\""}, {"name": "enable_dns_hostnames", "description": "Should be true if you want to use private DNS within the VPC", "default": "false"}, {"name": "enable_dns_support", "description": "Should be true if you want to use private DNS within the VPC", "default": "false"}, {"name": "vpn_enabled", "description": "For ability to enable/disable VPN creation", "default": "\"false\""}, {"name": "cgw_ip_1", "description": "Customer VPN gateway primary IP", "default": "\"false\""}, {"name": "cgw_ip_2", "description": "Customer VPN gateway secondary IP", "default": "\"false\""}, {"name": "bgp_asn", "description": "BGP ASN for VPN", "default": "\"6500\""}]}, "GoogleCloudPlatform/lb-internal/google": {"name": "lb-internal", "url": "https://registry.terraform.io/modules/GoogleCloudPlatform/lb-internal/google", "provider": "google", "downloads": 116, "description": "Modular Internal Load Balancer for GCE using forwarding rules.", "source": "GoogleCloudPlatform/lb-internal/google", "args": [{"name": "project", "description": "The project to deploy to, if not set the default provider project is used.", "default": "\"\""}, {"name": "region", "description": "Region for cloud resources.", "default": "\"us-central1\""}, {"name": "network", "description": "Name of the network to create resources in.", "default": "\"default\""}, {"name": "network_project", "description": "Name of the project for the network. Useful for shared VPC. Default is var.project.", "default": "\"\""}, {"name": "name", "description": "Name for the forwarding rule and prefix for supporting resources.", "default": ""}, {"name": "backends", "description": "List of backends, should be a map of key-value pairs for each backend, mush have the 'group' key.", "default": ""}, {"name": "session_affinity", "description": "The session affinity for the backends example: NONE, CLIENT_IP. Default is `NONE`.", "default": "\"NONE\""}, {"name": "ports", "description": "List of ports range to forward to backend services. Max is 5.", "default": ""}, {"name": "health_port", "description": "Port to perform health checks on.", "default": ""}, {"name": "source_tags", "description": "List of source tags for traffic between the internal load balancer.", "default": ""}, {"name": "target_tags", "description": "List of target tags for traffic between the internal load balancer.", "default": ""}, {"name": "ip_address", "description": "IP address of the internal load balancer, if empty one will be assigned. Default is empty.", "default": "\"\""}, {"name": "ip_protocol", "description": "The IP protocol for the backend and frontend forwarding rule. TCP or UDP.", "default": "\"TCP\""}]}, "alibaba/ecs-instance/alicloud": {"name": "ecs-instance", "url": "https://registry.terraform.io/modules/alibaba/ecs-instance/alicloud", "provider": "alicloud", "downloads": 115, "description": "Terraform module which creates ECS instance(s) on Alibaba Cloud.", "source": "alibaba/ecs-instance/alicloud", "args": [{"name": "key_name", "description": "The key pair name used to attach one or more instances.", "default": "\"\""}, {"name": "disk_tags", "description": "Used to mark specified ecs data disks.", "default": "{\n  \"created_by\": \"Terraform\",\n  \"created_from\": \"module-tf-alicloud-ecs-instance\"\n}"}, {"name": "instance_type", "description": "The instance type used to launch one or more ecs instances.", "default": "\"\""}, {"name": "number_format", "description": "The number format used to output.", "default": "\"%02d\""}, {"name": "disk_category", "description": "The data disk category used to launch one or more data disks.", "default": "\"cloud_efficiency\""}, {"name": "number_of_disks", "description": "The number of launching disks one time.", "default": "0"}, {"name": "host_name", "description": "The instance host name used to configure one or more instances..", "default": "\"TF-ECS-Host-Name\""}, {"name": "internet_max_bandwidth_out", "description": "The maximum internet out bandwidth of instance..", "default": "10"}, {"name": "image_name_regex", "description": "The ECS image's name regex used to fetch specified image.", "default": "\"^ubuntu_14.*_64\""}, {"name": "instance_charge_type", "description": "The charge type of instance. Choices are 'PostPaid' and 'PrePaid'.", "default": "\"PostPaid\""}, {"name": "cpu_core_count", "description": "CPU core count used to fetch instance types.", "default": "1"}, {"name": "number_of_instances", "description": "The number of launching instances one time.", "default": "1"}, {"name": "password", "description": "The password of instance.", "default": "\"\""}, {"name": "instance_tags", "description": "Used to mark specified ecs instance.", "default": "{\n  \"created_by\": \"Terraform\",\n  \"created_from\": \"module-tf-alicloud-ecs-instance\"\n}"}, {"name": "disk_name", "description": "The data disk name used to mark one or more data disks.", "default": "\"TF_ECS_Disk\""}, {"name": "group_ids", "description": "List of security group ids used to join ECS instances.", "default": ""}, {"name": "disk_size", "description": "The data disk size used to launch one or more data disks.", "default": "\"40\""}, {"name": "system_category", "description": "The system disk category used to launch one or more ecs instances.", "default": "\"cloud_efficiency\""}, {"name": "vswitch_id", "description": "The vswitch id used to launch one or more instances.", "default": ""}, {"name": "alicloud_secret_key", "description": "The Alicloud Access Secret Key to launch resources.", "default": "\"\""}, {"name": "region", "description": "The region to launch resources.", "default": "\"\""}, {"name": "memory_size", "description": "Memory size used to fetch instance types.", "default": "2"}, {"name": "image_id", "description": "The image id used to launch one or more ecs instances.", "default": "\"\""}, {"name": "instance_name", "description": "The instance name used to mark one or more instances.", "default": "\"TF-ECS-Instance\""}, {"name": "private_ip", "description": "Private IP address of instance", "default": "\"\""}, {"name": "alicloud_access_key", "description": "The Alicloud Access Key ID to launch resources.", "default": "\"\""}, {"name": "system_size", "description": "The system disk size used to launch one or more ecs instances.", "default": "\"40\""}, {"name": "internet_charge_type", "description": "The internet charge type of instance. Choices are 'PayByTraffic' and 'PayByBandwidth'.", "default": "\"PayByTraffic\""}, {"name": "period", "description": "The period of instance when instance charge type is 'PrePaid'.", "default": "1"}, {"name": "availability_zone", "description": "The available zone to launch ecs instance and other resources.", "default": "\"\""}]}, "kurron/ec2/aws": {"name": "ec2", "url": "https://registry.terraform.io/modules/kurron/ec2/aws", "provider": "aws", "downloads": 115, "description": "A Terraform plan that populates an existing VPC with subnets and EC2 instances.", "source": "kurron/ec2/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "duty", "description": "Special tag value used to locate specific running instances, e.g. Docker or Bastion", "default": ""}, {"name": "ami_regexp", "description": "Regular expression to use when looking up an AMI in the specified region", "default": ""}, {"name": "ebs_optimized", "description": "Boolean indicating if the instance should enable EBS optimization or not", "default": ""}, {"name": "instance_type", "description": "They instance type to build the instances from", "default": ""}, {"name": "ssh_key_name", "description": "Name of the SSH key to install onto the instances", "default": ""}, {"name": "security_group_ids", "description": "List of security groups to apply to the instances", "default": ""}, {"name": "subnet_ids", "description": "List of subnets to create the instances in", "default": ""}, {"name": "instance_profile", "description": "ID of the IAM profile to associate with the instances", "default": ""}, {"name": "scheduled", "description": "If set to Yes, the instances will be parked on a schedule", "default": ""}, {"name": "instance_limit", "description": "A number indicating how many instances to create. A value of 0 creates one instance per subnet.", "default": "\"0\""}]}, "telia-oss/loadbalancer/aws": {"name": "loadbalancer", "url": "https://registry.terraform.io/modules/telia-oss/loadbalancer/aws", "provider": "aws", "downloads": 115, "description": "Load balancer module for Terraform.", "source": "telia-oss/loadbalancer/aws", "args": [{"name": "name_prefix", "description": "A prefix used for naming resources.", "default": ""}, {"name": "vpc_id", "description": "The VPC ID.", "default": ""}, {"name": "subnet_ids", "description": "ID of subnets where instances can be provisioned.", "default": ""}, {"name": "type", "description": "Type of load balancer to provision (network or application).", "default": ""}, {"name": "internal", "description": "Provision an internal load balancer. Defaults to false.", "default": "\"false\""}, {"name": "tags", "description": "A map of tags (key-value pairs) passed to resources.", "default": "{}"}]}, "egarbi/task-definition/aws": {"name": "task-definition", "url": "https://registry.terraform.io/modules/egarbi/task-definition/aws", "provider": "aws", "downloads": 114, "description": "This is a submodule usuful to be called from a service module to create a task-definition", "source": "egarbi/task-definition/aws", "args": [{"name": "name", "description": "Task definition name", "default": ""}, {"name": "container_definitions", "description": "here you should include the full container definitons", "default": "\"[]\""}, {"name": "task_role", "description": "Optional IAM role that tasks can use to make API requests to authorized AWS services.", "default": "\"\""}]}, "nicholasjackson/hashicorp-suite/aws": {"name": "hashicorp-suite", "url": "https://registry.terraform.io/modules/nicholasjackson/hashicorp-suite/aws", "provider": "aws", "downloads": 113, "description": "Terraform module for creating HashiCorp Nomad and Consul clusters", "source": "nicholasjackson/hashicorp-suite/aws", "args": [{"name": "instance_type", "description": "", "default": "\"t2.micro\""}, {"name": "namespace", "description": "Namespace for application, all resources will be prefixed with namespace", "default": ""}, {"name": "min_servers", "description": "The minimum number of servers to add to the autoscale group", "default": ""}, {"name": "max_servers", "description": "The maximum number of servers allowed in the autoscale group", "default": ""}, {"name": "min_agents", "description": "The minimum number of agents to add to the autoscale group", "default": ""}, {"name": "max_agents", "description": "The maximum number of agents allowed in the autoscale group", "default": ""}, {"name": "subnets", "description": "Subnets to launch instances in", "default": ""}, {"name": "vpc_id", "description": "ID of the vpc to attach instances to", "default": ""}, {"name": "key_name", "description": "SSH key to add to instances", "default": ""}, {"name": "security_group", "description": "ID of security group to attach to instances", "default": ""}, {"name": "server_target_groups", "description": "List of target groups to attach to autoscaling group", "default": "[]"}, {"name": "client_target_groups", "description": "List of target groups to attach to autoscaling group", "default": "[]"}, {"name": "consul_version", "description": "Consul version to install", "default": ""}, {"name": "consul_join_tag_key", "description": "AWS Tag to use for consul auto-join", "default": ""}, {"name": "consul_join_tag_value", "description": "Value to search for in auto-join tag to use for consul auto-join", "default": ""}, {"name": "consul_enabled", "description": "Is consul enabled on this instance", "default": ""}, {"name": "nomad_datacentre", "description": "Default datacenter for Nomad", "default": "\"dc1\""}, {"name": "nomad_region", "description": "Default datacenter for Nomad", "default": "\"aws\""}, {"name": "nomad_enabled", "description": "Is nomad enabled on this instance", "default": ""}, {"name": "nomad_version", "description": "Nomad version to install", "default": ""}, {"name": "vault_enabled", "description": "Is vault enabled on this instance", "default": ""}, {"name": "vault_version", "description": "Vault version to install", "default": ""}]}, "scholzj/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/scholzj/vpc/aws", "provider": "aws", "downloads": 112, "description": "Terraform module for creating s simple Amazon AWS VPC and subnets", "source": "scholzj/vpc/aws", "args": [{"name": "tags", "description": "Different tag values which should be assigned to AWS resources created via Terraform)", "default": ""}, {"name": "aws_region", "description": "AWS region which should be used", "default": ""}, {"name": "aws_zones", "description": "AWS AZs (Availability zones) where subnets should be created", "default": ""}, {"name": "private_subnets", "description": "Create both private and public subnets", "default": "\"false\""}, {"name": "vpc_name", "description": "Name of the VPC", "default": ""}, {"name": "vpc_cidr", "description": "CIDR of the VPC", "default": ""}]}, "terraform-aws-modules/sns/aws": {"name": "sns", "url": "https://registry.terraform.io/modules/terraform-aws-modules/sns/aws", "provider": "aws", "downloads": 112, "description": "Terraform module which creates SNS resources on AWS", "source": "terraform-aws-modules/sns/aws", "args": [{"name": "create_sns_topic", "description": "Whether to create the SNS topic", "default": "true"}, {"name": "sns_topic_name", "description": "The name of the SNS topic to create", "default": ""}]}, "kurron/ec2-park/aws": {"name": "ec2-park", "url": "https://registry.terraform.io/modules/kurron/ec2-park/aws", "provider": "aws", "downloads": 112, "description": "Terraform module that starts/stops EC2 instances on a schedule", "source": "kurron/ec2-park/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "creator", "description": "Person creating the resources", "default": ""}, {"name": "environment", "description": "Context the resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "role_arn", "description": "ARN of the role that has rights to start and stop EC2 instances", "default": ""}, {"name": "start_cron_expression", "description": "Cron expression describing when the instances should be started", "default": ""}, {"name": "stop_cron_expression", "description": "Cron expression describing when the instances should be stopped", "default": ""}]}, "matti/cloud-platform/kontena": {"name": "cloud-platform", "url": "https://registry.terraform.io/modules/matti/cloud-platform/kontena", "provider": "kontena", "downloads": 112, "description": "", "source": "matti/cloud-platform/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "organization", "description": "", "default": ""}, {"name": "name", "description": "", "default": ""}, {"name": "type", "description": "", "default": "\"standard\""}, {"name": "region", "description": "", "default": "\"us-east-1\""}, {"name": "initial_size", "description": "", "default": "1"}, {"name": "platform_version", "description": "", "default": "\"\""}]}, "devops-workflow/labels/null": {"name": "labels", "url": "https://registry.terraform.io/modules/devops-workflow/labels/null", "provider": "null", "downloads": 109, "description": "Terraform module to create consistent naming for multiple names", "source": "devops-workflow/labels/null", "args": [{"name": "attributes", "description": "Suffix name with additional attributes (policy, role, etc.)", "default": "[]"}, {"name": "component", "description": "TAG: Underlying, dedicated piece of service (Cache, DB, ...)", "default": "\"UNDEF\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespaces`, `attributes`, etc.", "default": "\"-\""}, {"name": "environment", "description": "Environment (ex: `dev`, `qa`, `stage`, `prod`). (Second or top level namespace. Depending on namespacing options)", "default": ""}, {"name": "monitor", "description": "TAG: Should resource be monitored", "default": "\"UNDEF\""}, {"name": "namespace-env", "description": "Prefix name with the environment. If true, format is: <env>-<name>", "default": "true"}, {"name": "namespace-org", "description": "Prefix name with the organization. If true, format is: <org>-<env namespaced name>. If both env and org namespaces are used, format will be <org>-<env>-<name>", "default": "false"}, {"name": "organization", "description": "Organization name (Top level namespace)", "default": "\"\""}, {"name": "owner", "description": "TAG: Owner of the service", "default": "\"UNDEF\""}, {"name": "product", "description": "TAG: Company/business product", "default": "\"UNDEF\""}, {"name": "service", "description": "TAG: Application (microservice) name", "default": "\"UNDEF\""}, {"name": "tags", "description": "A map of additional tags", "default": "{}"}, {"name": "team", "description": "TAG: Department/team of people responsible for service", "default": "\"UNDEF\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "names", "description": "Base names for resources", "default": ""}]}, "indix/maintenance-lambda/aws": {"name": "maintenance-lambda", "url": "https://registry.terraform.io/modules/indix/maintenance-lambda/aws", "provider": "aws", "downloads": 107, "description": "Terraform module to deploy aws-maintenance-lambda - A lambda function to send alerts (to Slack, HipChat) on AWS maintenance events.", "source": "indix/maintenance-lambda/aws", "args": [{"name": "max_retries", "description": "Max retries for AWS requests.", "default": "\"100\""}, {"name": "aws_region", "description": "AWS region to deploy the lambda function to.", "default": "\"us-west-2\""}, {"name": "lamba_schedue", "description": "Schedule interval for the lambda function.", "default": "\"60 minutes\""}, {"name": "lambda_source_dir", "description": "Lambda source files", "default": "\"../lambda\""}, {"name": "lambda_prepared_source_dir", "description": "Working directory to build the lambda source files", "default": "\"../lambda\""}, {"name": "lambda_archive_path", "description": "Path to the final lambda zip artifact", "default": "\"../dist/aws_maintenance_lambda.zip\""}, {"name": "config_json", "description": "Path to the configuration file used by the lambda", "default": "\"../lambda/config.json\""}, {"name": "force_lambda_update", "description": "Variable to trigger forced update of lambda source", "default": "\"\""}]}, "kurron/alb/aws": {"name": "alb", "url": "https://registry.terraform.io/modules/kurron/alb/aws", "provider": "aws", "downloads": 105, "description": "Terraform module that sets up an Application Load Balancer", "source": "kurron/alb/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "internal", "description": "If set to Yes, the load balancer can only be seen from inside the VPC, otherwise it is publicly available.", "default": ""}, {"name": "security_group_ids", "description": "List of security group IDs to apply to the balancer", "default": ""}, {"name": "subnet_ids", "description": "List of subnet IDs the balancer can access", "default": ""}, {"name": "vpc_id", "description": "The identifier of the VPC in which to create the target group.", "default": ""}, {"name": "ssl_policy", "description": "The name of the SSL Policy for the listener, e.g. ELBSecurityPolicy-TLS-1-2-2017-01", "default": ""}, {"name": "certificate_arn", "description": "The ARN of the SSL server certificate", "default": ""}]}, "hashicorp/consul/azurerm": {"name": "consul", "url": "https://registry.terraform.io/modules/hashicorp/consul/azurerm", "provider": "azurerm", "downloads": 104, "description": "A Terraform Module for how to run Consul on AzureRM using Terraform and Packer", "source": "hashicorp/consul/azurerm", "args": [{"name": "subscription_id", "description": "The Azure subscription ID", "default": ""}, {"name": "tenant_id", "description": "The Azure tenant ID", "default": ""}, {"name": "client_id", "description": "The Azure client ID", "default": ""}, {"name": "secret_access_key", "description": "The Azure secret access key", "default": ""}, {"name": "resource_group_name", "description": "The name of the Azure resource group consul will be deployed into. This RG should already exist", "default": ""}, {"name": "storage_account_name", "description": "The name of an Azure Storage Account. This SA should already exist", "default": ""}, {"name": "image_uri", "description": "The URI to the Azure image that should be deployed to the consul cluster.", "default": ""}, {"name": "key_data", "description": "The SSH public key that will be added to SSH authorized_users on the consul instances", "default": ""}, {"name": "allowed_inbound_cidr_blocks", "description": "A list of CIDR-formatted IP address ranges from which the Azure Instances will allow connections to Consul", "default": ""}, {"name": "location", "description": "The Azure region the consul cluster will be deployed in", "default": "\"East US\""}, {"name": "allowed_ssh_cidr_blocks", "description": "A list of CIDR-formatted IP address ranges from which the Azure Instances will allow SSH connections", "default": "[]"}, {"name": "address_space", "description": "The supernet for the resources that will be created", "default": "\"10.0.0.0/16\""}, {"name": "subnet_address", "description": "The subnet that consul resources will be deployed into", "default": "\"10.0.10.0/24\""}, {"name": "cluster_name", "description": "What to name the Consul cluster and all of its associated resources", "default": "\"consul-example\""}, {"name": "instance_size", "description": "The instance size for the servers", "default": "\"Standard_A0\""}, {"name": "num_servers", "description": "The number of Consul server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "num_clients", "description": "The number of Consul client nodes to deploy. You typically run the Consul client alongside your apps, so set this value to however many Instances make sense for your app code.", "default": "1"}, {"name": "cluster_tag_key", "description": "The tag the Azure Instances will look for to automatically discover each other and form a cluster.", "default": "\"consul-servers\""}]}, "kurron/rds-mysql/aws": {"name": "rds-mysql", "url": "https://registry.terraform.io/modules/kurron/rds-mysql/aws", "provider": "aws", "downloads": 103, "description": "A Terraform module that creates a single instance MySQL RDS instance.", "source": "kurron/rds-mysql/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "storage_size", "description": "How large, in GBs, to allocate for storage.", "default": "\"20\""}, {"name": "allow_major_version_upgrade", "description": "If true, permits Amazon to automatically upgrade the instance to next major version.", "default": "\"true\""}, {"name": "apply_immediately", "description": "If true, engine upgrades are done immediately, otherwise done during the next maintenance window.", "default": "\"false\""}, {"name": "auto_minor_version_upgrade", "description": "If true, permits Amazon to automatically upgrade the instance to next minor version.", "default": "\"true\""}, {"name": "availability_zone", "description": "The availability zone to place the instance into.", "default": "\"\""}, {"name": "backup_retention_period", "description": "How many days to retain backups.", "default": "\"7\""}, {"name": "backup_window", "description": "The daily time range (in UTC) during which automated backups are created, if enabled.", "default": "\"00:00-02:00\""}, {"name": "subnet_ids", "description": "List of subnets ids where the instance can live, eg. [subnet-6412a148,subnet-e18b0185]", "default": ""}, {"name": "engine_version", "description": "The version of MySQL to use, e.g. 5.6.17.  If left blank, the latest engine is used.", "default": "\"\""}, {"name": "final_snapshot_identifier", "description": "What to name the final snapshot when the instance is deleted.  If left blank, no snapshot is taken.", "default": "\"final-snapshot\""}, {"name": "iam_database_authentication_enabled", "description": "If true, mappings of AWS Identity and Access Management (IAM) accounts to database accounts is enabled.", "default": "\"false\""}, {"name": "instance_class", "description": "The instance type of the RDS instance, e.g. db.t2.micro", "default": "\"db.t2.micro\""}, {"name": "maintenance_window", "description": "The window to perform maintenance in.", "default": "\"Sun:03:00-Sun:05:00\""}, {"name": "monitoring_interval", "description": "The interval, in seconds, between points when Enhanced Monitoring metrics are collected for the DB instance. Valid Values: 0, 1, 5, 10, 15, 30, 60.", "default": "\"0\""}, {"name": "monitoring_role_arn", "description": "The ARN for the IAM role that permits RDS to send enhanced monitoring metrics to CloudWatch Logs, if enabled.", "default": "\"\""}, {"name": "multi_az", "description": "If true, the instance operates in multiple availability zones.", "default": "\"false\""}, {"name": "option_group_name", "description": "Name of the DB option group to associate to the instance, e.g. default.mysql56", "default": "\"\""}, {"name": "parameter_group_name", "description": "Name of the DB parameter group to associate to the instance, e.g. default:mysql-5-6", "default": "\"\""}, {"name": "password", "description": "Password for the master DB user.  Must be at least 8 characters, e.g. mypassword", "default": ""}, {"name": "publicly_accessible", "description": "If true, the database can be connected via the internet.", "default": "\"false\""}, {"name": "skip_final_snapshot", "description": "If true, no database snapshot is created before the instance is deleted.", "default": "\"false\""}, {"name": "storage_type", "description": "Type of storage medium to use. Maybe one of standard, gp2, io1", "default": "\"gp2\""}, {"name": "username", "description": "Username for the master DB user.", "default": "\"master\""}, {"name": "vpc_security_group_ids", "description": "List of VPC security groups to associate to the instance.", "default": ""}, {"name": "domain_name", "description": "Route53 managed domain name to map the instance to, e.g. example.com.", "default": ""}, {"name": "host_name", "description": "The host name to use when creating the mapping to your managed domain name, e.g. development-mysql.", "default": ""}, {"name": "scheduled", "description": "If set to Yes, the instances can be parked on a schedule", "default": "\"No\""}]}, "google-terraform-modules/kubernetes-engine/google": {"name": "kubernetes-engine", "url": "https://registry.terraform.io/modules/google-terraform-modules/kubernetes-engine/google", "provider": "google", "downloads": 102, "description": "Create a Google Kubernetes Engine cluster", "source": "google-terraform-modules/kubernetes-engine/google", "args": [{"name": "master", "description": "Kubernetes master parameters to initialize", "default": ""}, {"name": "default_node_pool", "description": "Default pool setting", "default": "{}"}, {"name": "labels", "description": "The Kubernetes labels (key/value pairs) to be applied to each node", "default": "{}"}, {"name": "node_additional_zones", "description": "The list of additional Google Compute Engine locations in which the cluster's nodes should be located. If additional zones are configured, the number of nodes specified in initial_node_count is created in all specified zones", "default": "[]"}, {"name": "general", "description": "Global parameters", "default": ""}, {"name": "node_pool", "description": "Node pool setting to create", "default": "[]"}, {"name": "tags", "description": "The list of instance tags applied to all nodes. Tags are used to identify valid sources or targets for network firewalls", "default": "[]"}, {"name": "metadata", "description": "The metadata key/value pairs assigned to instances in the cluster", "default": "{}"}, {"name": "taint", "description": "List of kubernetes taints to apply to each node", "default": "[]"}, {"name": "ipv4_cidr_block", "description": "Specifies a private RFC1918 block for the master's VPC. The master range must not overlap with any subnet in your cluster's VPC. The master and your cluster use VPC peering. Must be specified in CIDR notation and must be /28 subnet.", "default": "\"10.0.0.0/28\""}, {"name": "ip_allocation_policy", "description": "Configuration for cluster IP allocation. As of now, only pre-allocated subnetworks (custom type with secondary ranges) are supported", "default": "[]"}]}, "blinkist/airship-ecs-service/aws": {"name": "airship-ecs-service", "url": "https://registry.terraform.io/modules/blinkist/airship-ecs-service/aws", "provider": "aws", "downloads": 102, "description": "Terraform module which creates an ECS Service, IAM roles, Scaling, ALB listener rules.. Fargate & AWSVPC compatible", "source": "blinkist/airship-ecs-service/aws", "args": [{"name": "default_capacity_properties_desired_capacity", "description": "", "default": "\"2\""}, {"name": "container_properties", "description": "", "default": ""}, {"name": "ecs_cluster_name", "description": "", "default": ""}, {"name": "default_load_balancing_properties_route53_zone_id", "description": "", "default": "\"\""}, {"name": "awsvpc_subnets", "description": "", "default": "[]"}, {"name": "default_load_balancing_properties_deregistration_delay", "description": "", "default": "300"}, {"name": "default_container_properties_name", "description": "", "default": "\"app\""}, {"name": "capacity_properties", "description": "", "default": "{}"}, {"name": "default_capacity_properties_desired_min_capacity", "description": "", "default": "\"2\""}, {"name": "default_capacity_properties_deployment_maximum_percent", "description": "", "default": "\"200\""}, {"name": "scaling_properties", "description": "", "default": "[]"}, {"name": "kms_keys", "description": "", "default": "[]"}, {"name": "s3_ro_paths", "description": "", "default": "[]"}, {"name": "create", "description": "", "default": "true"}, {"name": "default_load_balancing_properties_https_enabled", "description": "", "default": "true"}, {"name": "default_load_balancing_properties_lb_listener_arn_https", "description": "", "default": "\"\""}, {"name": "default_load_balancing_properties_unhealthy_threshold", "description": "", "default": "\"3\""}, {"name": "default_capacity_properties_desired_max_capacity", "description": "", "default": "\"2\""}, {"name": "default_container_properties_mem", "description": "", "default": "\"512\""}, {"name": "default_container_properties_cpu", "description": "", "default": "\"256\""}, {"name": "ssm_paths", "description": "", "default": "[]"}, {"name": "fargate_enabled", "description": "", "default": "false"}, {"name": "awsvpc_enabled", "description": "", "default": "false"}, {"name": "default_load_balancing_properties_lb_listener_arn", "description": "", "default": "\"\""}, {"name": "s3_rw_paths", "description": "", "default": "[]"}, {"name": "awsvpc_security_group_ids", "description": "", "default": "[]"}, {"name": "default_capacity_properties_deployment_minimum_healthy_percent", "description": "", "default": "\"0\""}, {"name": "default_container_properties_image_url", "description": "", "default": "\"\""}, {"name": "name", "description": "The name of the project, must be unique .", "default": ""}, {"name": "default_load_balancing_properties_create_route53_record", "description": "", "default": "true"}, {"name": "container_envvars", "description": "", "default": "{}"}, {"name": "default_load_balancing_properties_lb_vpc_id", "description": "", "default": "\"\""}, {"name": "default_load_balancing_properties_health_uri", "description": "", "default": "\"/ping\""}, {"name": "default_container_properties_port", "description": "", "default": "\"\""}, {"name": "scheduling_strategy", "description": "", "default": "\"REPLICA\""}, {"name": "load_balancing_properties", "description": "", "default": "{}"}]}, "cloudposse/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/cloudposse/efs/aws", "provider": "aws", "downloads": 101, "description": "Terraform Module to define an EFS Filesystem (aka NFS)", "source": "cloudposse/efs/aws", "args": [{"name": "namespace", "description": "", "default": "\"global\""}, {"name": "stage", "description": "", "default": "\"default\""}, {"name": "name", "description": "", "default": "\"app\""}, {"name": "security_groups", "description": "", "default": ""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "aws_region", "description": "", "default": ""}, {"name": "subnets", "description": "", "default": ""}, {"name": "availability_zones", "description": "", "default": ""}, {"name": "zone_id", "description": "", "default": ""}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "tags", "description": "", "default": "{}"}]}, "kurron/api-key/aws": {"name": "api-key", "url": "https://registry.terraform.io/modules/kurron/api-key/aws", "provider": "aws", "downloads": 98, "description": "Terraform module that creates an API Gateway API key, complete with restrictions", "source": "kurron/api-key/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "key_name", "description": "Name of the API key.", "default": ""}, {"name": "key_description", "description": "Short description of the key's intended use.", "default": ""}, {"name": "quota_limit", "description": "The maximum number of requests that can be made in a given time period, e.g. 200.", "default": ""}, {"name": "quota_period", "description": "The time period in which the limit applies. Valid values are DAY, WEEK or MONTH.", "default": ""}, {"name": "burst_limit", "description": "The maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity, e.g. 500.", "default": ""}, {"name": "steady_state_limit", "description": "The API request steady-state rate limit, e.g. 100.", "default": ""}, {"name": "api_gateway_id", "description": "ID of the API Gateway to bind the plan to, e.g. d82wq5g0sk.", "default": ""}, {"name": "deployment_stage_name", "description": "Name of the deployment stage to bind the plan to, e.g. development.", "default": ""}]}, "cloudposse/elastic-beanstalk-environment/aws": {"name": "elastic-beanstalk-environment", "url": "https://registry.terraform.io/modules/cloudposse/elastic-beanstalk-environment/aws", "provider": "aws", "downloads": 97, "description": "Terraform module to provision an AWS Elastic Beanstalk Environment", "source": "cloudposse/elastic-beanstalk-environment/aws", "args": [{"name": "notification_endpoint", "description": "Notification endpoint", "default": "\"\""}, {"name": "ssh_listener_enabled", "description": "Enable ssh port", "default": "\"false\""}, {"name": "public_subnets", "description": "List of public subnets to place Elastic Load Balancer", "default": ""}, {"name": "keypair", "description": "Name of SSH key that will be deployed on Elastic Beanstalk and DataPipeline instance. The key should be present in AWS", "default": ""}, {"name": "rolling_update_type", "description": "Set it to Immutable to apply the configuration change to a fresh group of instances", "default": "\"Health\""}, {"name": "updating_min_in_service", "description": "Minimum count of instances up during update", "default": "\"1\""}, {"name": "updating_max_batch", "description": "Maximum count of instances up during update", "default": "\"1\""}, {"name": "stage", "description": "Stage, e.g. 'prod', 'staging', 'dev', or 'test'", "default": "\"default\""}, {"name": "http_listener_enabled", "description": "Enable port 80 (http)", "default": "\"false\""}, {"name": "zone_id", "description": "Route53 parent zone ID. The module will create sub-domain DNS records in the parent zone for the EB environment", "default": "\"\""}, {"name": "tags", "description": "Additional tags (e.g. `map('BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "notification_protocol", "description": "Notification protocol", "default": "\"email\""}, {"name": "preferred_start_time", "description": "Configure a maintenance window for managed actions in UTC", "default": "\"Sun:10:00\""}, {"name": "update_level", "description": "The highest level of update to apply with managed platform updates", "default": "\"minor\""}, {"name": "root_volume_size", "description": "The size of the EBS root volume", "default": "\"8\""}, {"name": "autoscale_max", "description": "Maximum instances in charge", "default": "\"3\""}, {"name": "env_vars", "description": "Map of custom ENV variables to be provided to the Jenkins application running on Elastic Beanstalk, e.g. `env_vars = { JENKINS_USER = 'admin' JENKINS_PASS = 'xxxxxx' }`", "default": "{}"}, {"name": "notification_topic_name", "description": "Notification topic name", "default": "\"\""}, {"name": "ssh_listener_port", "description": "SSH port", "default": "\"22\""}, {"name": "security_groups", "description": "List of security groups to be allowed to connect to the EC2 instances", "default": ""}, {"name": "app", "description": "EBS application name", "default": ""}, {"name": "root_volume_type", "description": "The type of the EBS root volume", "default": "\"gp2\""}, {"name": "availability_zones", "description": "Choose the number of AZs for your instances", "default": "\"Any 2\""}, {"name": "instance_type", "description": "Instances type", "default": "\"t2.micro\""}, {"name": "wait_for_ready_timeout", "description": "", "default": "\"20m\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "env_default_key", "description": "Default ENV variable key for Elastic Beanstalk `aws:elasticbeanstalk:application:environment` setting", "default": "\"DEFAULT_ENV_%d\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "config_document", "description": "A JSON document describing the environment and instance metrics to publish to CloudWatch.", "default": "\"{ \\\"CloudWatchMetrics\\\": {}, \\\"Version\\\": 1}\""}, {"name": "config_source", "description": "S3 source for config", "default": "\"\""}, {"name": "instance_refresh_enabled", "description": "Enable weekly instance replacement.", "default": "\"true\""}, {"name": "namespace", "description": "Namespace, which could be your organization name, e.g. 'cp' or 'cloudposse'", "default": "\"global\""}, {"name": "loadbalancer_type", "description": "Load Balancer type, e.g. 'application' or 'classic'", "default": "\"classic\""}, {"name": "loadbalancer_certificate_arn", "description": "Load Balancer SSL certificate ARN. The certificate must be present in AWS Certificate Manager", "default": "\"\""}, {"name": "private_subnets", "description": "List of private subnets to place EC2 instances", "default": ""}, {"name": "autoscale_upper_bound", "description": "Maximum level of autoscale metric to remove instance", "default": "\"80\""}, {"name": "alb_zone_id", "description": "ALB zone id", "default": "{\n  \"ap-northeast-1\": \"Z1R25G3KIG2GBW\",\n  \"ap-northeast-2\": \"Z3JE5OI70TWKCP\",\n  \"ap-south-1\": \"Z18NTBI3Y7N9TZ\",\n  \"ap-southeast-1\": \"Z16FZ9L249IFLT\",\n  \"ap-southeast-2\": \"Z2PCDNR3VC2G1N\",\n  \"ca-central-1\": \"ZJFCZL7SSZB5I\",\n  \"eu-central-1\": \"Z1FRNW7UH4DEZJ\",\n  \"eu-west-1\": \"Z2NYPWQ7DFZAZH\",\n  \"eu-west-2\": \"Z1GKAAAUGATPF1\",\n  \"sa-east-1\": \"Z10X7K2B4QSOFV\",\n  \"us-east-1\": \"Z117KPS5GTRQ2G\",\n  \"us-east-2\": \"Z14LCN19Q5QHIC\",\n  \"us-west-1\": \"Z1LQECGX5PH1X\",\n  \"us-west-2\": \"Z38NKT9BP95V3O\"\n}"}, {"name": "healthcheck_url", "description": "Application Health Check URL. Elastic Beanstalk will call this URL to check the health of the application running on EC2 instances", "default": "\"/healthcheck\""}, {"name": "env_default_value", "description": "Default ENV variable value for Elastic Beanstalk `aws:elasticbeanstalk:application:environment` setting", "default": "\"UNSET\""}, {"name": "tier", "description": "Elastic Beanstalk Environment tier, e.g. ('WebServer', 'Worker')", "default": "\"WebServer\""}, {"name": "associate_public_ip_address", "description": "Specifies whether to launch instances in your VPC with public IP addresses.", "default": "\"false\""}, {"name": "notification_topic_arn", "description": "Notification topic arn", "default": "\"\""}, {"name": "vpc_id", "description": "ID of the VPC in which to provision the AWS resources", "default": ""}, {"name": "ssh_source_restriction", "description": "Used to lock down SSH access to the EC2 instances.", "default": "\"0.0.0.0/0\""}, {"name": "autoscale_lower_bound", "description": "Minimum level of autoscale metric to add instance", "default": "\"20\""}, {"name": "autoscale_min", "description": "Minumum instances in charge", "default": "\"2\""}, {"name": "solution_stack_name", "description": "Elastic Beanstalk stack, e.g. Docker, Go, Node, Java, IIS. [Read more](http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html)", "default": "\"\""}, {"name": "version_label", "description": "Elastic Beanstalk Application version for deploy", "default": "\"\""}, {"name": "name", "description": "Solution name, e.g. 'app' or 'jenkins'", "default": "\"app\""}]}, "viceIII/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/viceIII/kubernetes/aws", "provider": "aws", "downloads": 96, "description": "", "source": "viceIII/kubernetes/aws", "args": [{"name": "cluster_name", "description": "The name of the cluster; will be used to tag objects in AWS.  Each cluster should have a different name to allow multiple clusters to exist in the same AWS region / account.", "default": ""}, {"name": "vpc_cidr_block", "description": "", "default": "\"172.20.0.0/16\""}, {"name": "minion_associate_public_ip_address", "description": "", "default": "true"}, {"name": "minion_tcp_elb_enabled", "description": "", "default": "false"}, {"name": "minion_security_groups", "description": "", "default": "[]"}, {"name": "master_security_groups", "description": "", "default": "[]"}, {"name": "root_domain", "description": "", "default": ""}, {"name": "root_volume_size", "description": "", "default": "100"}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "minions_public_ports", "description": "", "default": "[]"}, {"name": "vpc_subnet_ids_list", "description": "", "default": ""}, {"name": "container_cidr_block", "description": "", "default": "\"10.244.0.0/16\""}, {"name": "ami", "description": "", "default": "\"\""}, {"name": "master_instance_type", "description": "", "default": "\"m4.large\""}, {"name": "master_user_data", "description": "", "default": "\"\""}, {"name": "minion_user_data", "description": "", "default": "\"\""}, {"name": "minion_instance_type", "description": "", "default": "\"m4.xlarge\""}, {"name": "num_azs", "description": "", "default": "\"1\""}, {"name": "key_pair_name", "description": "", "default": "\"kubernetes-key-pair\""}, {"name": "iam_suffix", "description": "", "default": "\"\""}, {"name": "support_nat", "description": "", "default": "true"}, {"name": "num_masters", "description": "", "default": "1"}, {"name": "num_minions", "description": "", "default": "3"}, {"name": "enable_extra_minion_security_group", "description": "", "default": "false"}, {"name": "extra_minion_security_group", "description": "Extra security groups that will be allow to talk to the minions", "default": "\"\""}, {"name": "extra_minion_security_group_port", "description": "Port on which the extra security groups that will be allow to talk to the minions", "default": "80"}, {"name": "elb_name", "description": "", "default": "\"kubernetes-master\""}]}, "terraform-aws-modules/rds-aurora/aws": {"name": "rds-aurora", "url": "https://registry.terraform.io/modules/terraform-aws-modules/rds-aurora/aws", "provider": "aws", "downloads": 95, "description": "Terraform module which creates RDS Aurora resources on AWS", "source": "terraform-aws-modules/rds-aurora/aws", "args": []}, "bytebugs/aws-sns-email-notification/modules": {"name": "aws-sns-email-notification", "url": "https://registry.terraform.io/modules/bytebugs/aws-sns-email-notification/modules", "provider": "modules", "downloads": 95, "description": "", "source": "bytebugs/aws-sns-email-notification/modules", "args": [{"name": "protocol", "description": "The protocol you want to use.", "default": "\"email\""}, {"name": "application_name", "description": "The application being monitored.", "default": ""}, {"name": "notification_endpoint", "description": "The notification-endpoint that you want to receive notifications.", "default": ""}]}, "johnypony3/ec2-spot-instance/aws": {"name": "ec2-spot-instance", "url": "https://registry.terraform.io/modules/johnypony3/ec2-spot-instance/aws", "provider": "aws", "downloads": 93, "description": "Terraform module which creates EC2 spot instance(s) on AWS", "source": "johnypony3/ec2-spot-instance/aws", "args": [{"name": "name", "description": "Name to be used on all resources as prefix", "default": ""}, {"name": "count", "description": "Number of instances to launch", "default": "1"}, {"name": "ami", "description": "ID of AMI to use for the instance", "default": ""}, {"name": "availability_zone", "description": "The AZ to start the instance in", "default": "\"\""}, {"name": "placement_group", "description": "The Placement Group to start the instance in", "default": "\"\""}, {"name": "tenancy", "description": "The tenancy of the instance (if the instance is running in a VPC). Available values: default, dedicated, host.", "default": "\"default\""}, {"name": "ebs_optimized", "description": "If true, the launched EC2 instance will be EBS-optimized", "default": "false"}, {"name": "disable_api_termination", "description": "If true, enables EC2 Instance Termination Protection", "default": "false"}, {"name": "instance_initiated_shutdown_behavior", "description": "Shutdown behavior for the instance", "default": "\"\""}, {"name": "instance_type", "description": "The type of instance to start", "default": ""}, {"name": "key_name", "description": "The key name to use for the instance", "default": "\"\""}, {"name": "monitoring", "description": "If true, the launched EC2 instance will have detailed monitoring enabled", "default": "false"}, {"name": "vpc_security_group_ids", "description": "A list of security group IDs to associate with", "default": ""}, {"name": "subnet_id", "description": "The VPC Subnet ID to launch in", "default": "\"\""}, {"name": "associate_public_ip_address", "description": "If true, the EC2 instance will have associated public IP address", "default": "false"}, {"name": "private_ip", "description": "Private IP address to associate with the instance in a VPC", "default": "\"\""}, {"name": "source_dest_check", "description": "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs.", "default": "true"}, {"name": "user_data", "description": "The user data to provide when launching the instance", "default": "\"\""}, {"name": "iam_instance_profile", "description": "The IAM Instance Profile to launch the instance with. Specified as the name of the Instance Profile.", "default": "\"\""}, {"name": "ipv6_address_count", "description": "A number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet.", "default": "0"}, {"name": "ipv6_addresses", "description": "Specify one or more IPv6 addresses from the range of the subnet to associate with the primary network interface", "default": "[]"}, {"name": "tags", "description": "A mapping of tags to assign to the resource", "default": "{}"}, {"name": "volume_tags", "description": "A mapping of tags to assign to the devices created by the instance at launch time", "default": "{}"}, {"name": "root_block_device", "description": "Customize details about the root block device of the instance. See Block Devices below for details", "default": "[]"}, {"name": "ebs_block_device", "description": "Additional EBS block devices to attach to the instance", "default": "[]"}, {"name": "ephemeral_block_device", "description": "Customize Ephemeral (also known as Instance Store) volumes on the instance", "default": "[]"}, {"name": "network_interface", "description": "Customize network interfaces to be attached at instance boot time", "default": "[]"}, {"name": "spot_price", "description": "The maximum hourly price (bid) you are willing to pay for the instance, e.g. 0.10", "default": ""}, {"name": "wait_for_fulfillment", "description": "(Optional; Default: false) If set, Terraform will wait for the Spot Request to be fulfilled, and will throw an error if the timeout of 10m is reached.", "default": "false"}, {"name": "launch_group", "description": "Group name to assign the instances to so they can be started/stopped in unison, e.g. purple-plutonium", "default": "\"\""}, {"name": "instance_interruption_behaviour", "description": "Whether a Spot instance stops or terminates when it is interrupted, can be stop or terminate", "default": "\"terminate\""}, {"name": "block_duration_minutes", "description": "(Optional) The required duration for the Spot instances, in minutes. This value must be a multiple of 60 (60, 120, 180, 240, 300, or 360).", "default": "\"0\""}, {"name": "spot_type", "description": "(Optional; Default: 'persistent') If set to 'one-time', after the instance is terminated, the spot request will be closed. Also, Terraform can't manage one-time spot requests, just launch them.", "default": "\"persistent\""}, {"name": "create_timeout", "description": "(Defaults to 10 mins) Used when requesting the spot instance (only valid if wait_for_fulfillment = true)", "default": "\"10m\""}, {"name": "delete_timeout", "description": "(Defaults to 10 mins) Used when terminating all instances launched via the given spot instance request", "default": "\"10m\""}]}, "thojkooi/firewall-rules/digitalocean": {"name": "firewall-rules", "url": "https://registry.terraform.io/modules/thojkooi/firewall-rules/digitalocean", "provider": "digitalocean", "downloads": 93, "description": "Terraform module for DigitalOcean providing a basic firewall rules set", "source": "thojkooi/firewall-rules/digitalocean", "args": [{"name": "prefix", "description": "Prefix applied to firewall rule names", "default": ""}, {"name": "droplet_ids", "description": "List of droplet ids to which the rule sets will be applied", "default": "[]"}, {"name": "tags", "description": "List of tag ids, any droplet matching these tags will have the rule set applied", "default": "[]"}, {"name": "allowed_outbound_http_addresses", "description": "An array of strings containing the IPv4 addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which outbound http (port 80) traffic will be allowed.", "default": "[\n  \"0.0.0.0/0\",\n  \"::/0\"\n]"}, {"name": "allowed_outbound_http_droplet_ids", "description": "An array of droplet ids to which outbound http (port 80) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_http_tags", "description": "An array of tags of droplets to which outbound http (port 80) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_http_load_balancer_uids", "description": "An array containing the IDs of the Load Balancers to which outbound http (port 80) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_https_addresses", "description": "An array of strings containing the IPv4 addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which outbound https (port 443) traffic will be allowed.", "default": "[\n  \"0.0.0.0/0\",\n  \"::/0\"\n]"}, {"name": "allowed_outbound_https_droplet_ids", "description": "An array of droplet ids to which outbound https (port 443) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_https_tags", "description": "An array of tags of droplets to which outbound https (port 443) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_https_load_balancer_uids", "description": "An array containing the IDs of the Load Balancers to which outbound https (port 443) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_dns_addresses", "description": "An array of strings containing the IPv4 addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which outbound DNS (port 53) traffic will be allowed.", "default": "[\n  \"0.0.0.0/0\",\n  \"::/0\"\n]"}, {"name": "allowed_outbound_dns_droplet_ids", "description": "An array of droplet ids to which outbound DNS (port 53) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_dns_tags", "description": "An array of tags of droplets to which outbound DNS (port 53) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_dns_load_balancer_uids", "description": "An array containing the IDs of the Load Balancers to which outbound DNS (port 53) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_ntp_addresses", "description": "An array of strings containing the IPv4 addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which outbound NTP (port 123/udp) traffic will be allowed.", "default": "[\n  \"0.0.0.0/0\",\n  \"::/0\"\n]"}, {"name": "allowed_outbound_ntp_droplet_ids", "description": "An array of droplet ids to which outbound NTP (port 123/udp) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_ntp_tags", "description": "An array of tags of droplets to which outbound NTP (port 123/udp) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_ssh_addresses", "description": "An array of strings containing the IPv4 addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs to which outbound SSH (port 22) traffic will be allowed.", "default": "[\n  \"0.0.0.0/0\",\n  \"::/0\"\n]"}, {"name": "allowed_outbound_ssh_droplet_ids", "description": "An array of droplet ids to which outbound SSH (port 22) traffic will be allowed.", "default": "[]"}, {"name": "allowed_outbound_ssh_tags", "description": "An array of tags of droplets to which outbound SSH (port 22) traffic will be allowed.", "default": "[]"}, {"name": "allowed_inbound_ssh_tags", "description": "List of droplet tags from which SSH is allowed.", "default": "[]"}, {"name": "allowed_inbound_ssh_droplet_ids", "description": "List of droplet ids from which SSH is allowed.", "default": "[]"}, {"name": "allowed_inbound_ssh_adresses", "description": "An array of strings containing the IPv4 addresses, IPv6 addresses, IPv4 CIDRs, and/or IPv6 CIDRs from which the inbound SSH traffic will be accepted.", "default": "[\n  \"0.0.0.0/0\",\n  \"::/0\"\n]"}]}, "blinkist/airship-kms/aws": {"name": "airship-kms", "url": "https://registry.terraform.io/modules/blinkist/airship-kms/aws", "provider": "aws", "downloads": 93, "description": "Simple KMS Module", "source": "blinkist/airship-kms/aws", "args": [{"name": "name", "description": "the alias of the key", "default": ""}, {"name": "path_prepend", "description": "", "default": "\"application/\""}]}, "Smartbrood/s3-bucket/aws": {"name": "s3-bucket", "url": "https://registry.terraform.io/modules/Smartbrood/s3-bucket/aws", "provider": "aws", "downloads": 92, "description": "Terraform module to create S3 bucket on AWS", "source": "Smartbrood/s3-bucket/aws", "args": [{"name": "s3_fqdn", "description": "fqdn for s3 bucket", "default": ""}, {"name": "aws_account_id", "description": "AWS Account Id", "default": ""}, {"name": "aws_username", "description": "AWS Username", "default": ""}, {"name": "files", "description": "map s3 keys to files", "default": "{}"}, {"name": "base64_files", "description": "map s3 keys to base64 encoded files", "default": "{}"}, {"name": "tags", "description": "A mapping of tags to assign to bucket", "default": "{}"}, {"name": "allow_public", "description": "Allow public read access to bucket", "default": "false"}, {"name": "loggingBucket", "description": "The bucket you want to log S3 access to.", "default": "\"\""}, {"name": "create_bucket", "description": "Conditionally create S3 bucket", "default": "true"}, {"name": "upload_files", "description": "Conditionally upload files", "default": "true"}]}, "cloudposse/iam-assumed-roles/aws": {"name": "iam-assumed-roles", "url": "https://registry.terraform.io/modules/cloudposse/iam-assumed-roles/aws", "provider": "aws", "downloads": 91, "description": "Terraform Module for Assumed Roles on AWS with IAM Groups Requiring MFA", "source": "cloudposse/iam-assumed-roles/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "admin_name", "description": "Name for the admin group and role (e.g. `admin`)", "default": "\"admin\""}, {"name": "readonly_name", "description": "Name for the readonly group and role (e.g. `readonly`)", "default": "\"readonly\""}, {"name": "admin_user_names", "description": "Optional list of IAM user names to add to the admin group", "default": "[]"}, {"name": "readonly_user_names", "description": "Optional list of IAM user names to add to the readonly group", "default": "[]"}]}, "kurron/api-gateway/aws": {"name": "api-gateway", "url": "https://registry.terraform.io/modules/kurron/api-gateway/aws", "provider": "aws", "downloads": 87, "description": "Terraform module that creates an API gateway that can have services attached to it.", "source": "kurron/api-gateway/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "api_name", "description": "Name of the API", "default": ""}, {"name": "api_description", "description": "Short description about the API", "default": ""}, {"name": "domain_name", "description": "Custom domain name to assign to the gateway, e.g. api-gateway.example.com", "default": ""}, {"name": "certificate_arn", "description": "ARN of the Amazon managed TLS certificate, e.g. arn:aws:acm:us-east-1:037083514056:certificate/foo", "default": ""}, {"name": "hosted_zone_id", "description": "The ID of the hosted zone to contain this record.", "default": ""}]}, "npalm/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/npalm/vpc/aws", "provider": "aws", "downloads": 87, "description": "Terraform module for creating a VPC on AWS", "source": "npalm/vpc/aws", "args": [{"name": "environment", "description": "A logical name that will be used as prefix and tag for the created resources.", "default": "\"vpc-dev\""}, {"name": "aws_region", "description": "The Amazon region.", "default": ""}, {"name": "cidr_block", "description": "The CDIR block used for the VPC.", "default": "\"10.0.0.0/16\""}, {"name": "availability_zones", "description": "", "default": "{\n  \"ap-northeast-1\": [\n    \"ap-northeast-1a\",\n    \"ap-northeast-1c\",\n    \"ap-northeast-1d\"\n  ],\n  \"ap-northeast-2\": [\n    \"ap-northeast-2a\",\n    \"ap-northeast-2c\"\n  ],\n  \"ap-south-1\": [\n    \"ap-south-1a\",\n    \"ap-south-1b\"\n  ],\n  \"ap-southeast-1\": [\n    \"ap-southeast-1a\",\n    \"ap-southeast-1b\"\n  ],\n  \"ap-southeast-2\": [\n    \"ap-southeast-2a\",\n    \"ap-southeast-2b\",\n    \"ap-southeast-2c\"\n  ],\n  \"ca-central-1\": [\n    \"ca-central-1a\",\n    \"ca-central-1b\"\n  ],\n  \"eu-central-1\": [\n    \"eu-central-1a\",\n    \"eu-central-1b\",\n    \"eu-central-1c\"\n  ],\n  \"eu-west-1\": [\n    \"eu-west-1a\",\n    \"eu-west-1b\",\n    \"eu-west-1c\"\n  ],\n  \"eu-west-2\": [\n    \"eu-west-2a\",\n    \"eu-west-2b\"\n  ],\n  \"sa-east-1\": [\n    \"sa-east-1a\",\n    \"sa-east-1c\"\n  ],\n  \"us-east-1\": [\n    \"us-east-1a\",\n    \"us-east-1b\",\n    \"us-east-1c\",\n    \"us-east-1d\",\n    \"us-east-1e\",\n    \"us-east-1f\"\n  ],\n  \"us-east-2\": [\n    \"us-east-2a\",\n    \"eu-east-2b\",\n    \"eu-east-2c\"\n  ],\n  \"us-west-1\": [\n    \"us-west-1a\",\n    \"us-west-1c\"\n  ],\n  \"us-west-2\": [\n    \"us-west-2a\",\n    \"us-west-2b\",\n    \"us-west-2c\"\n  ]\n}"}, {"name": "create_private_subnets", "description": "If true create a private subnet for each availability zone including a NAT gateway.", "default": "\"true\""}, {"name": "create_private_hosted_zone", "description": "If true a privated hosted zone is created.", "default": "\"true\""}, {"name": "public_subnet_map_public_ip_on_launch", "description": "Set the default behavior for instances created in the VPC. If true by default a publi ip will be assigned.", "default": "\"false\""}]}, "amancevice/slack-drive/google": {"name": "slack-drive", "url": "https://registry.terraform.io/modules/amancevice/slack-drive/google", "provider": "google", "downloads": 87, "description": "Terraform module for deploying Slack Drive to Google Cloud", "source": "amancevice/slack-drive/google", "args": [{"name": "member_joined_channel_trigger_topic", "description": "Pub/Sub topic name.", "default": "\"member_joined_channel\""}, {"name": "member_left_channel_labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "slash_command_labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "verification_token", "description": "Slack verification token.", "default": ""}, {"name": "auth_users_include", "description": "Optional list of Slack channel IDs to whitelist.", "default": "[]"}, {"name": "channel_rename_labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "member_joined_channel_timeout", "description": "Cloud Function Timeout.", "default": "60"}, {"name": "channel", "description": "Slack channel ID for logging events.", "default": ""}, {"name": "channel_rename_description", "description": "Description of the function.", "default": "\"Channel rename event handler\""}, {"name": "member_left_channel_description", "description": "Description of the function.", "default": "\"Member left channel event handler\""}, {"name": "slash_command_description", "description": "Description of the function.", "default": "\"Slack Drive slash command\""}, {"name": "group_rename_timeout", "description": "Cloud Function Timeout.", "default": "60"}, {"name": "redirect_function_name", "description": "Cloud Function for redirecting to Google Drive from Slack.", "default": "\"slack-drive-redirect\""}, {"name": "web_api_token", "description": "Slack Web API token.", "default": ""}, {"name": "auth_users_exclude", "description": "Optional list of Slack channel IDs to blacklist.", "default": "[]"}, {"name": "channel_rename_trigger_topic", "description": "Pub/Sub topic name.", "default": "\"channel_rename\""}, {"name": "group_rename_memory", "description": "Cloud Function Memory.", "default": "128"}, {"name": "redirect_timeout", "description": "Timeout in seconds for redirect.", "default": "60"}, {"name": "slash_command_timeout", "description": "Timeout in seconds for Slack slash command.", "default": "10"}, {"name": "group_rename_description", "description": "Description of the function.", "default": "\"Group rename event handler\""}, {"name": "group_rename_labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "group_rename_trigger_topic", "description": "Pub/Sub topic name.", "default": "\"group_rename\""}, {"name": "member_joined_channel_function_name", "description": "Cloud Function Name.", "default": "\"slack-drive-member-joined-channel\""}, {"name": "member_left_channel_timeout", "description": "Cloud Function Timeout.", "default": "60"}, {"name": "redirect_description", "description": "Description of the function.", "default": "\"Google Drive link redirection\""}, {"name": "redirect_labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "redirect_memory", "description": "Memory for Slack redirect.", "default": "512"}, {"name": "channel_rename_function_name", "description": "Cloud Function Name.", "default": "\"slack-drive-channel-rename\""}, {"name": "channel_rename_memory", "description": "Cloud Function Memory.", "default": "128"}, {"name": "channel_rename_timeout", "description": "Cloud Function Timeout.", "default": "60"}, {"name": "group_rename_function_name", "description": "Cloud Function Name.", "default": "\"slack-drive-group-rename\""}, {"name": "color", "description": "Default color for slackbot message attachments.", "default": "\"good\""}, {"name": "member_left_channel_memory", "description": "Cloud Function Memory.", "default": "128"}, {"name": "slash_command_function_name", "description": "Cloud Function for receiving slash-commands from Slack.", "default": "\"slack-drive-slash-command\""}, {"name": "slash_command_memory", "description": "Memory for Slack slash command.", "default": "512"}, {"name": "client_secret", "description": "Google Cloud client secret JSON.", "default": ""}, {"name": "project", "description": "The ID of the project to apply any resources to.", "default": ""}, {"name": "region", "description": "The region to operate under, if not specified by a given resource.", "default": "\"us-central1\""}, {"name": "auth_channels_include", "description": "Optional list of Slack channel IDs to whitelist.", "default": "[]"}, {"name": "member_left_channel_function_name", "description": "Cloud Function Name.", "default": "\"slack-drive-member-left-channel\""}, {"name": "member_left_channel_trigger_topic", "description": "Pub/Sub topic name.", "default": "\"member_left_channel\""}, {"name": "auth_channels_exclude", "description": "Optional list of Slack channel IDs to blacklist.", "default": "[]"}, {"name": "slash_command", "description": "Name of slash command in Slack.", "default": "\"drive\""}, {"name": "member_joined_channel_labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "member_joined_channel_memory", "description": "Cloud Function Memory.", "default": "128"}, {"name": "bucket_name", "description": "Cloud Storage bucket for storing Cloud Function code archives.", "default": ""}, {"name": "member_joined_channel_description", "description": "Description of the function.", "default": "\"Member joined channel event handler\""}]}, "traveloka/repository/github": {"name": "repository", "url": "https://registry.terraform.io/modules/traveloka/repository/github", "provider": "github", "downloads": 85, "description": "A Terraform module which creates a github repository with a protected default branch", "source": "traveloka/repository/github", "args": [{"name": "allow_merge_commit", "description": "allow merge commit to this repository", "default": "false"}, {"name": "auto_init", "description": "set whether an initial commit should be made to the repository", "default": "true"}, {"name": "admin_teams", "description": "the GitHub teams which is granted admin permission on the repository", "default": "[]"}, {"name": "name", "description": "the repository name", "default": ""}, {"name": "has_wiki", "description": "enable github wiki feature for the repository", "default": "false"}, {"name": "push_collaborators", "description": "the GitHub users (can be from outside of the organization) which is granted push permission on the repository", "default": "[]"}, {"name": "dismiss_review_users", "description": "the users which is granted the access to dismiss review on the repository", "default": "[]"}, {"name": "private", "description": "set whether the repository visibility is private", "default": "true"}, {"name": "allow_squash_merge", "description": "allow squash merge commit to this repository", "default": "true"}, {"name": "has_issues", "description": "enable github issues feature for the repository", "default": "true"}, {"name": "allow_rebase_merge", "description": "allow rebase merge commit to this repository", "default": "false"}, {"name": "has_downloads", "description": "enable github download feature for the repository", "default": "false"}, {"name": "gitignore_template", "description": "select github gitignore tempate to init the repository with; see https://github.com/github/gitignore", "default": "\"\""}, {"name": "pull_teams", "description": "the GitHub teams which is granted pull permission on the repository", "default": "[]"}, {"name": "admin_collaborators", "description": "the GitHub users (can be from outside of the organization) which is granted admin permission on the repository", "default": "[]"}, {"name": "description", "description": "the repository description", "default": ""}, {"name": "homepage_url", "description": "the repository homepage URL, if any", "default": "\"\""}, {"name": "push_teams", "description": "the GitHub teams which is granted push permission on the repository", "default": "[]"}, {"name": "pull_collaborators", "description": "the GitHub users (can be from outside of the organization) which is granted pull permission on the repository", "default": "[]"}, {"name": "license_template", "description": "select github license tempate to init the repository with; see https://github.com/github/choosealicense.com/tree/gh-pages/_licenses", "default": "\"\""}, {"name": "default_branch", "description": "the name of the default branch of the repository. Only applicable if the repository and the branch is already created", "default": "\"\""}]}, "Smartbrood/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/Smartbrood/ecs/aws", "provider": "aws", "downloads": 84, "description": "Terraform module to create ECS cluster", "source": "Smartbrood/ecs/aws", "args": [{"name": "cluster_name", "description": "ECS cluster Name", "default": ""}, {"name": "ami_update", "description": "Auto discover latest ami id.", "default": "\"false\""}, {"name": "ami", "description": "ami id", "default": "\"\""}, {"name": "security_group", "description": "The ID of security group.", "default": ""}, {"name": "pet_name", "description": "Random name - used as part of ec2_iam_role name.", "default": ""}, {"name": "efs_dir", "description": "The directory to mount EFS volume.", "default": "\"/efs\""}, {"name": "efs_volume", "description": "The EFS volume.", "default": ""}, {"name": "tags", "description": "Map with tags.", "default": ""}, {"name": "instance_type", "description": "EC2 instance type.", "default": ""}, {"name": "key_name", "description": "The ssh key name for EC2 instances.", "default": ""}, {"name": "count_public_a", "description": "Number of EC2 instances in public subnet in aviability zone a.", "default": "\"0\""}, {"name": "count_public_b", "description": "Number of EC2 instances in public subnet in aviability zone b.", "default": "\"0\""}, {"name": "count_public_c", "description": "Number of EC2 instances in public subnet in aviability zone c.", "default": "\"0\""}, {"name": "subnet_public_zone_a", "description": "The ID of public subnet in aviability zone a.", "default": ""}, {"name": "subnet_public_zone_b", "description": "The ID of public subnet in aviability zone b.", "default": ""}, {"name": "subnet_public_zone_c", "description": "The ID of public subnet in aviability zone c.", "default": ""}]}, "claranet/ssm-patch-management/aws": {"name": "ssm-patch-management", "url": "https://registry.terraform.io/modules/claranet/ssm-patch-management/aws", "provider": "aws", "downloads": 82, "description": "Terraform module for AWS SSM Patch Management", "source": "claranet/ssm-patch-management/aws", "args": [{"name": "name", "description": "This name will prefix all resources, and be added as the value for the 'Name' tag where supported", "default": ""}, {"name": "envname", "description": "This label will be added after 'name' on all resources, and be added as the value for the 'Environment' tag where supported", "default": ""}, {"name": "envtype", "description": "This label will be added after 'envname' on all resources, and be added as the value for the 'Envtype' tag where supported", "default": ""}, {"name": "profile", "description": "This label will be added to the SSM baseline description", "default": "\"Windows\""}, {"name": "aws_region", "description": "The AWS region to create this SSM resource in", "default": "\"eu-west-1\""}, {"name": "approved_patches", "description": "The list of approved patches for the SSM baseline", "default": "[]"}, {"name": "rejected_patches", "description": "The list of rejected patches for the SSM baseline", "default": "[]"}, {"name": "product_versions", "description": "The list of product versions for the SSM baseline", "default": "[\n  \"WindowsServer2016\",\n  \"WindowsServer2012R2\"\n]"}, {"name": "patch_classification", "description": "The list of patch classifications for the SSM baseline", "default": "[\n  \"CriticalUpdates\",\n  \"SecurityUpdates\"\n]"}, {"name": "patch_severity", "description": "The list of patch severities for the SSM baseline", "default": "[\n  \"Critical\",\n  \"Important\"\n]"}, {"name": "scan_maintenance_window_schedule", "description": "The schedule of the scan Maintenance Window in the form of a cron or rate expression", "default": "\"cron(0 0 18 ? * WED *)\""}, {"name": "install_maintenance_window_schedule", "description": "The schedule of the install Maintenance Window in the form of a cron or rate expression", "default": "\"cron(0 0 21 ? * WED *)\""}, {"name": "maintenance_window_duration", "description": "The duration of the maintenence windows (hours)", "default": "\"3\""}, {"name": "maintenance_window_cutoff", "description": "The number of hours before the end of the Maintenance Window that Systems Manager stops scheduling new tasks for execution", "default": "\"1\""}, {"name": "scan_patch_groups", "description": "The list of scan patching groups, one target will be created per entry in this list", "default": "[\n  \"static\",\n  \"disposable\"\n]"}, {"name": "install_patch_groups", "description": "The list of install patching groups, one target will be created per entry in this list", "default": "[\n  \"automatic\"\n]"}, {"name": "max_concurrency", "description": "The maximum amount of concurrent instances of a task that will be executed in parallel", "default": "\"20\""}, {"name": "max_errors", "description": "The maximum amount of errors that instances of a task will tollerate before being de-scheduled", "default": "\"50\""}, {"name": "s3_bucket_name", "description": "The name of the S3 bucket to create for log storage", "default": ""}]}, "oracle/compute-instance/opc": {"name": "compute-instance", "url": "https://registry.terraform.io/modules/oracle/compute-instance/opc", "provider": "opc", "downloads": 80, "description": "Terraform Module for creating Oracle Cloud Infrastructure OPC Compute instances", "source": "oracle/compute-instance/opc", "args": [{"name": "boot_volume_image_list", "description": "The Image List to use for the boot volume. Defaults to Oracle Linux 7.2 UEK4.", "default": "\"/oracle/public/OL_7.2_UEKR4_x86_64\""}, {"name": "boot_volume_image_list_entry", "description": "(Optional) The Image List Entry to use for the boot volume.", "default": "1"}, {"name": "boot_volume_size", "description": "Size in GB of the boot storage volume. Default is 12GB.", "default": "12"}, {"name": "instance_name", "description": "Instance name.", "default": ""}, {"name": "instance_hostname", "description": "(Optional) Instance hostname. Defaults to the instance name.", "default": "\"\""}, {"name": "instance_label", "description": "(Optional) Instance label. Defaults to the instance name.", "default": "\"\""}, {"name": "instance_shape", "description": "Instance shape.", "default": ""}, {"name": "instance_attributes", "description": "(Optional) A JSON string of custom attributes.", "default": "\"\""}, {"name": "reverse_dns", "description": "(Optional) create reverse DNS records.", "default": "true"}, {"name": "ip_network", "description": "(Optional) IP Network to attach the instance to. If not set the instance will be connected to the Shared Network.", "default": "\"\""}, {"name": "ip_reservation", "description": "(Optional) IP Address Reservation. If an `ip_network` is set then this must be a reference to an `opc_compute_ip_address_reservervation`.  If no IP Network is set then this must be a `opc_compute_ip_address_reservervation`.", "default": "\"\""}, {"name": "dns", "description": "(Optional) List of DNS servers.", "default": "[]"}, {"name": "search_domains", "description": "(Optional) Search domains.", "default": "[]"}, {"name": "ssh_key", "description": "(Optional) SSH Key name.", "default": "\"\""}, {"name": "tags", "description": "(Optional) list of tags to apply to all resources.", "default": "[]"}]}, "azavea/redis-elasticache/aws": {"name": "redis-elasticache", "url": "https://registry.terraform.io/modules/azavea/redis-elasticache/aws", "provider": "aws", "downloads": 79, "description": "A Terraform module to create an Amazon Web Services (AWS) Redis ElastiCache cluster.", "source": "azavea/redis-elasticache/aws", "args": [{"name": "project", "description": "", "default": "\"Unknown\""}, {"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "cache_identifier", "description": "", "default": ""}, {"name": "parameter_group", "description": "", "default": "\"default.redis3.2\""}, {"name": "subnet_group", "description": "", "default": ""}, {"name": "maintenance_window", "description": "", "default": ""}, {"name": "desired_clusters", "description": "", "default": "\"1\""}, {"name": "instance_type", "description": "", "default": "\"cache.t2.micro\""}, {"name": "engine_version", "description": "", "default": "\"3.2.4\""}, {"name": "automatic_failover_enabled", "description": "", "default": "false"}, {"name": "notification_topic_arn", "description": "", "default": ""}, {"name": "alarm_cpu_threshold", "description": "", "default": "\"75\""}, {"name": "alarm_memory_threshold", "description": "", "default": "\"10000000\""}, {"name": "alarm_actions", "description": "", "default": ""}]}, "terraform-aws-modules/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/terraform-aws-modules/ecs/aws", "provider": "aws", "downloads": 79, "description": "Terraform module which creates AWS ECS resources", "source": "terraform-aws-modules/ecs/aws", "args": [{"name": "create_ecs", "description": "Controls if ECS should be created", "default": "true"}, {"name": "name", "description": "Name to be used on all the resources as identifier, also the name of the ECS cluster", "default": ""}]}, "viceIII/vpc-nat/aws": {"name": "vpc-nat", "url": "https://registry.terraform.io/modules/viceIII/vpc-nat/aws", "provider": "aws", "downloads": 79, "description": "", "source": "viceIII/vpc-nat/aws", "args": [{"name": "vpc_name", "description": "", "default": ""}, {"name": "support_nat", "description": "", "default": "false"}]}, "matti/gce-image-upload/google": {"name": "gce-image-upload", "url": "https://registry.terraform.io/modules/matti/gce-image-upload/google", "provider": "google", "downloads": 79, "description": "", "source": "matti/gce-image-upload/google", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "name_prefix", "description": "", "default": ""}, {"name": "bucket_name", "description": "", "default": ""}, {"name": "source_tar_gz", "description": "", "default": ""}]}, "santi698/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/santi698/ecs-cluster/aws", "provider": "aws", "downloads": 76, "description": "A Terraform module to create an Amazon Web Services (AWS) EC2 Container Service (ECS) cluster.", "source": "santi698/ecs-cluster/aws", "args": [{"name": "name", "description": "The name of the created cluster", "default": ""}, {"name": "ami_id", "description": "The id of the ami used for the instances, ECS optimized ami's are recommended", "default": ""}, {"name": "instance_type", "description": "The EC2 instance type for the cluster instances", "default": "\"t2.micro\""}, {"name": "security_group_ids", "description": "The security group ids to be attached to the cluster instances", "default": "[]"}, {"name": "root_block_device_type", "description": "The type of the volume for the EBS volumes attached to the cluster instances", "default": "\"gp2\""}, {"name": "root_block_device_size", "description": "The size of the EBS volume attached to the cluster instances", "default": "\"8\""}, {"name": "subnet_ids", "description": "The subnet ids where the cluster will be launched", "default": ""}, {"name": "min_size", "description": "The minimum amount of instances in the cluster", "default": "\"0\""}, {"name": "max_size", "description": "The maximum amount of instances in the cluster", "default": "\"1\""}, {"name": "desired_capacity", "description": "The amount of instances the cluster is expected to have normally", "default": "\"1\""}, {"name": "key_name", "description": "The SSH key pair name for the cluster instances", "default": "\"\""}, {"name": "tags", "description": "A list of tags to attach to cluster instances", "default": "[]"}]}, "banks/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/banks/ecs/aws", "provider": "aws", "downloads": 76, "description": "Ignore this will be deleted soon", "source": "banks/ecs/aws", "args": [{"name": "vpc_cidr", "description": "", "default": ""}, {"name": "environment", "description": "", "default": ""}, {"name": "max_size", "description": "", "default": ""}, {"name": "min_size", "description": "", "default": ""}, {"name": "desired_capacity", "description": "", "default": ""}, {"name": "instance_type", "description": "", "default": ""}, {"name": "ecs_aws_ami", "description": "", "default": ""}, {"name": "private_subnet_cidrs", "description": "", "default": ""}, {"name": "public_subnet_cidrs", "description": "", "default": ""}, {"name": "availibility_zones", "description": "", "default": ""}]}, "sjones-sot/remote-state-storage/azurerm": {"name": "remote-state-storage", "url": "https://registry.terraform.io/modules/sjones-sot/remote-state-storage/azurerm", "provider": "azurerm", "downloads": 76, "description": "Terraform module to set up a storage account on Azure and prep it for use as remote state storage", "source": "sjones-sot/remote-state-storage/azurerm", "args": [{"name": "name", "description": "(Required) Specifies the human consumable label for this resource.", "default": "\"\""}, {"name": "location", "description": " (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.", "default": ""}, {"name": "resource_group_name", "description": "(Optional) The name of the resource group in which to create the storage account. Changing this forces a new resource to be created. If omitted, will create a new RG based on the `name` above", "default": "\"\""}, {"name": "resource_tags", "description": "Map of tags to apply to taggable resources in this module.  By default the taggable resources are tagged with the name defined above and this map is merged in", "default": "{}"}, {"name": "storage_account_tier", "description": "(Required) Defines the Tier to use for this storage account. Valid options are Standard* and Premium. Changing this forces a new resource to be created", "default": "\"Standard\""}, {"name": "storage_account_replication_type", "description": "(Required) Defines the type of replication to use for this storage account. Valid options are LRS*, GRS, RAGRS and ZRS.", "default": "\"LRS\""}]}, "cloudposse/key-pair/aws": {"name": "key-pair", "url": "https://registry.terraform.io/modules/cloudposse/key-pair/aws", "provider": "aws", "downloads": 75, "description": "Terraform Module to Automatically Generate SSH Key Pairs (Public/Private Keys)", "source": "cloudposse/key-pair/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Application or solution name (e.g. `app`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "ssh_public_key_path", "description": "Path to SSH public key directory (e.g. `/secrets`)", "default": ""}, {"name": "generate_ssh_key", "description": "If set to `true`, new SSH key pair will be created", "default": "\"false\""}, {"name": "ssh_key_algorithm", "description": "SSH key algorithm", "default": "\"RSA\""}, {"name": "private_key_extension", "description": "Private key extension", "default": "\"\""}, {"name": "public_key_extension", "description": "Public key extension", "default": "\".pub\""}, {"name": "chmod_command", "description": "Template of the command executed on the private key file", "default": "\"chmod 600 %v\""}]}, "westpac-terraform-registry/subscription-base/azurerm": {"name": "subscription-base", "url": "https://registry.terraform.io/modules/westpac-terraform-registry/subscription-base/azurerm", "provider": "azurerm", "downloads": 72, "description": "Base resources to create and peer a subscription", "source": "westpac-terraform-registry/subscription-base/azurerm", "args": [{"name": "tenancy_name", "description": "The name of the tenancy construct", "default": ""}, {"name": "location", "description": "The Azure location of the tenancy. This will be used to name the resource groups holding tenancy resources", "default": ""}, {"name": "environment", "description": "The environment which this tenancy is being created (nprod or prod)", "default": "\"dev\""}, {"name": "additional_tags", "description": "Additional tags to be included with the resources", "default": "{}"}, {"name": "network_address_space", "description": "The Network address space of the VNET. MUST NOT overlap with any other Hubs/Spokes on the network, else peering will fail", "default": ""}, {"name": "app_address_space", "description": "Address space of the Application Subnet", "default": ""}, {"name": "web_address_space", "description": "Address space of the Web Subnet", "default": ""}, {"name": "data_address_space", "description": "Address Space of the Data Subnet", "default": ""}, {"name": "parent_domain_name", "description": "DNS Record of the Hub's DNS zone", "default": ""}, {"name": "spoke", "description": "Is this a Hub or Spoke Tenancy. If true, hub resources need to be passed to create the peer", "default": "false"}, {"name": "hub_dns_resource_group_name", "description": "Resource group of the Hub", "default": "\"\""}, {"name": "hub_network_resource_group_name", "description": "Resource group of the Hub", "default": "\"\""}, {"name": "hub_virtual_network_name", "description": "Name of the Virtual Network in the hub", "default": "\"\""}, {"name": "hub_virtual_network_id", "description": "ID of the Virtual network in the hub", "default": "\"\""}, {"name": "provider_alias", "description": "Provider alias for the subscription", "default": "\"default\""}]}, "neillturner/autospotting/aws": {"name": "autospotting", "url": "https://registry.terraform.io/modules/neillturner/autospotting/aws", "provider": "aws", "downloads": 72, "description": "Automatically convert your existing AutoScaling groups to significantly cheaper spot instances with minimal(often zero) configuration changes", "source": "neillturner/autospotting/aws", "args": [{"name": "autospotting_allowed_instance_types", "description": "Comma separated list of allowed instance types for spot requests,\nin case you want to exclude specific types (also support globs).\n\nExample: 't2.*,m4.large'\n\nUsing the 'current' magic value will only allow the same type as the\non-demand instances set in the group's launch configuration.\n", "default": "\"\""}, {"name": "autospotting_min_on_demand_percentage", "description": "Minimum on-demand instances to keep in percentage", "default": "\"0.0\""}, {"name": "autospotting_spot_price_buffer_percentage", "description": "Percentage above the current spot price to place the bid", "default": "\"10.0\""}, {"name": "autospotting_bidding_policy", "description": "Bidding policy for the spot bid", "default": "\"normal\""}, {"name": "autospotting_regions_enabled", "description": "Regions that autospotting is watching", "default": "\"\""}, {"name": "autospotting_tag_filters", "description": "  Tags to filter which ASGs autospotting considers. By default, ASGs tagged\n  with spot-enbled=true will be operated on. In opt-out mode it operates on\n  all groups except those tagged with spot-enbled=false.\n\n  You can set this to many tags, for example:\n  spot-enabled=true,Environment=dev,Team=vision\"\n", "default": "\"\""}, {"name": "autospotting_spot_product_description", "description": "The Spot Product or operating system to use when looking up spot price history in the market. Valid choices: Linux/UNIX | SUSE Linux | Windows | Linux/UNIX (Amazon VPC) | SUSE Linux (Amazon VPC) | Windows (Amazon VPC)", "default": "\"Linux/UNIX (Amazon VPC)\""}, {"name": "lambda_memory_size", "description": "Memory size allocated to the lambda run", "default": "1024"}, {"name": "lambda_tags", "description": "Tags to be applied to the Lambda function", "default": "{\n  \"Name\": \"autospotting\"\n}"}, {"name": "autospotting_on_demand_price_multiplier", "description": "Multiplier for the on-demand price", "default": "\"1.0\""}, {"name": "lambda_zipname", "description": "Name of the archive", "default": "\"package/autospotting.zip\""}, {"name": "lambda_timeout", "description": "Timeout after which the lambda timeout", "default": "300"}, {"name": "lambda_run_frequency", "description": "How frequent should lambda run", "default": "\"rate(5 minutes)\""}, {"name": "autospotting_disallowed_instance_types", "description": "Comma separated list of disallowed instance types for spot requests,\nin case you want to exclude specific types (also support globs).\n\nExample: 't2.*,m4.large'\n", "default": "\"\""}, {"name": "lambda_s3_key", "description": "Key in S3 under which the archive is stored", "default": "\"\""}, {"name": "lambda_runtime", "description": "Environment the lambda function runs in", "default": "\"go1.x\""}, {"name": "autospotting_min_on_demand_number", "description": "Minimum on-demand instances to keep in absolute value", "default": "\"0\""}, {"name": "autospotting_tag_filtering_mode", "description": "  Controls the tag-based ASG filter. Supported values: 'opt-in' or 'opt-out'.\n  Defaults to opt-in mode, in which it only acts against the tagged groups. In\n  opt-out mode it works against all groups except for the tagged ones.\n  Use the opt-out mode carefully!\n", "default": "\"opt-in\""}, {"name": "lambda_s3_bucket", "description": "Bucket which the archive is stored in", "default": "\"\""}]}, "infrablocks/vpc-auto-peering/aws": {"name": "vpc-auto-peering", "url": "https://registry.terraform.io/modules/infrablocks/vpc-auto-peering/aws", "provider": "aws", "downloads": 71, "description": "Terraform module for automatically peering VPCs", "source": "infrablocks/vpc-auto-peering/aws", "args": [{"name": "region", "description": "The region into which the VPC auto peering lambda is being deployed.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "infrastructure_events_topic_arn", "description": "The ARN of the SNS topic containing VPC events.", "default": ""}, {"name": "search_regions", "description": "AWS regions to search for dependency and dependent VPCs.", "default": "\"\""}]}, "amancevice/group-sms/aws": {"name": "group-sms", "url": "https://registry.terraform.io/modules/amancevice/group-sms/aws", "provider": "aws", "downloads": 71, "description": "Send SMS messages to a group via AWS SNS", "source": "amancevice/group-sms/aws", "args": [{"name": "topic_name", "description": "Name of the AWS SNS topic.", "default": ""}, {"name": "delivery_status_success_sampling_rate", "description": "Default percentage of success to sample.", "default": "\"\""}, {"name": "monthly_spend_limit", "description": "The maximum amount to spend on SMS messages each month. If you send a message that exceeds your limit, Amazon SNS stops sending messages within minutes.", "default": "1"}, {"name": "role_name", "description": "The IAM role that allows Amazon SNS to write logs for SMS deliveries in CloudWatch Logs.", "default": "\"SNSSuccessFeedback\""}, {"name": "topic_display_name", "description": "Display name of the AWS SNS topic.", "default": ""}, {"name": "usage_report_s3_bucket", "description": "The Amazon S3 bucket to receive daily SMS usage reports. The bucket policy must grant write access to Amazon SNS.", "default": ""}, {"name": "default_sender_id", "description": "A custom ID, such as your business brand, displayed as the sender on the receiving device. Support for sender IDs varies by country.", "default": "\"\""}, {"name": "default_sms_type", "description": "Promotional messages are noncritical, such as marketing messages. Transactional messages are delivered with higher reliability to support customer transactions, such as one-time passcodes.", "default": "\"Promotional\""}, {"name": "delivery_status_iam_role_arn", "description": "The IAM role that allows Amazon SNS to write logs for SMS deliveries in CloudWatch Logs.", "default": "\"\""}, {"name": "subscriptions", "description": "List of telephone numbers to subscribe to SNS.", "default": "[]"}]}, "thojkooi/docker-swarm-mode/digitalocean": {"name": "docker-swarm-mode", "url": "https://registry.terraform.io/modules/thojkooi/docker-swarm-mode/digitalocean", "provider": "digitalocean", "downloads": 70, "description": "Terraform module for provisioning a Docker Swarm mode cluster on DigitalOcean", "source": "thojkooi/docker-swarm-mode/digitalocean", "args": [{"name": "manager_name", "description": "Prefix for name of manager nodes", "default": "\"manager\""}, {"name": "manager_user_data", "description": "User data content for manager nodes. Use this for installing a configuration management tool, such as Puppet or installing Docker", "default": "\"\""}, {"name": "total_workers", "description": "Total number of workers in cluster", "default": "1"}, {"name": "worker_image", "description": "Droplet image for the worker nodes", "default": "\"coreos-alpha\""}, {"name": "manager_size", "description": "Droplet size of worker nodes", "default": "\"s-1vcpu-1gb\""}, {"name": "worker_user_data", "description": "User data content for worker nodes. Use this for installing a configuration management tool, such as Puppet or installing Docker", "default": "\"\""}, {"name": "manager_tags", "description": "List of DigitalOcean tag ids", "default": "[]"}, {"name": "manager_ssh_keys", "description": "A list of SSH IDs or fingerprints to enable in the format [12345, 123456] that are added to manager nodes", "default": ""}, {"name": "worker_ssh_keys", "description": "A list of SSH IDs or fingerprints to enable in the format [12345, 123456] that are added to worker nodes", "default": ""}, {"name": "worker_name", "description": "Prefix for name of worker nodes", "default": "\"worker\""}, {"name": "worker_tags", "description": "List of DigitalOcean tag ids", "default": "[]"}, {"name": "remote_api_key", "description": "Private key file path for the docker remote API", "default": "\"\""}, {"name": "remote_api_certificate", "description": "Certificate file path for the docker remote API", "default": "\"\""}, {"name": "provision_user", "description": "User used to log in to the droplets via ssh for issueing Docker commands", "default": "\"core\""}, {"name": "manager_image", "description": "Image for the manager nodes", "default": "\"coreos-alpha\""}, {"name": "worker_size", "description": "Droplet size of worker nodes", "default": "\"s-1vcpu-1gb\""}, {"name": "total_managers", "description": "Total number of managers in cluster", "default": "1"}, {"name": "remote_api_ca", "description": "CA file path for the docker remote API", "default": "\"\""}, {"name": "domain", "description": "Domain name used in droplet hostnames, e.g example.com", "default": ""}, {"name": "provision_ssh_key", "description": "File path to SSH private key used to access the provisioned nodes. Ensure this key is listed in the manager and work ssh keys list", "default": "\"~/.ssh/id_rsa\""}, {"name": "region", "description": "Datacenter region in which the cluster will be created", "default": "\"ams3\""}]}, "infrablocks/infrastructure-events/aws": {"name": "infrastructure-events", "url": "https://registry.terraform.io/modules/infrablocks/infrastructure-events/aws", "provider": "aws", "downloads": 70, "description": "Terraform module for publishing infrastructure events created by other modules.", "source": "infrablocks/infrastructure-events/aws", "args": [{"name": "region", "description": "", "default": ""}, {"name": "deployment_identifier", "description": "", "default": ""}, {"name": "bucket_name_prefix", "description": "", "default": ""}, {"name": "topic_name_prefix", "description": "", "default": ""}]}, "matti/stack/kontena": {"name": "stack", "url": "https://registry.terraform.io/modules/matti/stack/kontena", "provider": "kontena", "downloads": 68, "description": "", "source": "matti/stack/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "stack", "description": "", "default": ""}, {"name": "name", "description": "", "default": ""}, {"name": "variables", "description": "", "default": "{}"}]}, "oracle/ip-networks/opc": {"name": "ip-networks", "url": "https://registry.terraform.io/modules/oracle/ip-networks/opc", "provider": "opc", "downloads": 66, "description": "Terraform Module for creating Oracle Cloud Infrastructure OPC IP Neworks", "source": "oracle/ip-networks/opc", "args": [{"name": "ip_exchange_name", "description": "Name for the IP Network Exchange resource.", "default": ""}, {"name": "subnet_cidrs", "description": "List of CIDRs for the IP Network subnets. An separate IP Network resource will be created for each CIDR. Network address ranges must not overlap.", "default": ""}, {"name": "subnet_names", "description": "List of names for the IP Networks subnets corresponding to the list of the `subnet_cidrs`.", "default": ""}, {"name": "public_napt_subnets", "description": "Names of the IP Network subnets to be enabled for public internet access using NAPT. NAPT is disabled by default.", "default": "[]"}, {"name": "tags", "description": "(Optional) List of Tags to apply to all resources created by this module.", "default": "[]"}]}, "birkoff/api-method/aws": {"name": "api-method", "url": "https://registry.terraform.io/modules/birkoff/api-method/aws", "provider": "aws", "downloads": 66, "description": "Terraform module for AWS API Gateway method resource", "source": "birkoff/api-method/aws", "args": [{"name": "region", "description": "", "default": ""}, {"name": "lambda_fuction_arn", "description": "", "default": ""}, {"name": "api_key_required", "description": "", "default": ""}, {"name": "integration_type", "description": "", "default": ""}, {"name": "api_id", "description": "", "default": ""}, {"name": "api_resource_id", "description": "", "default": ""}, {"name": "api_resource_path", "description": "", "default": ""}, {"name": "http_method", "description": "", "default": ""}, {"name": "authorization", "description": "", "default": ""}]}, "Smartbrood/route53-record/aws": {"name": "route53-record", "url": "https://registry.terraform.io/modules/Smartbrood/route53-record/aws", "provider": "aws", "downloads": 65, "description": "Terraform module to create one Route53 DNS record for existing zone.", "source": "Smartbrood/route53-record/aws", "args": [{"name": "name", "description": "Resource record name", "default": ""}, {"name": "private_zone", "description": "Set true for private zone", "default": "\"false\""}, {"name": "ip", "description": "String with ip addresses, separated by comma", "default": ""}, {"name": "type", "description": "The record type", "default": "\"A\""}, {"name": "ttl", "description": "The TTL of the record", "default": "\"30\""}, {"name": "domain", "description": "Domain zone name", "default": ""}]}, "matti/glob-outputs/dir": {"name": "glob-outputs", "url": "https://registry.terraform.io/modules/matti/glob-outputs/dir", "provider": "dir", "downloads": 65, "description": "", "source": "matti/glob-outputs/dir", "args": [{"name": "pattern", "description": "", "default": ""}]}, "matti/gce-image-to-zonal-disks/google": {"name": "gce-image-to-zonal-disks", "url": "https://registry.terraform.io/modules/matti/gce-image-to-zonal-disks/google", "provider": "google", "downloads": 64, "description": "", "source": "matti/gce-image-to-zonal-disks/google", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "name", "description": "", "default": ""}, {"name": "image_link", "description": "", "default": ""}, {"name": "zones", "description": "", "default": ""}, {"name": "disk_type", "description": "", "default": "\"pd-ssd\""}]}, "mewa/apigateway-cors/aws": {"name": "apigateway-cors", "url": "https://registry.terraform.io/modules/mewa/apigateway-cors/aws", "provider": "aws", "downloads": 64, "description": "Terraform module that sets up CORS", "source": "mewa/apigateway-cors/aws", "args": [{"name": "api", "description": "id of an aws_api_gateway_rest_api resource", "default": ""}, {"name": "resource", "description": "id of an aws_api_gateway_resource resource", "default": ""}, {"name": "methods", "description": "List of permitted HTTP methods. OPTIONS is added by default.", "default": ""}, {"name": "origin", "description": "Permitted origin", "default": "\"*\""}, {"name": "headers", "description": "List of permitted headers. Default headers are alway present unless discard_default_headers variable is set to true", "default": "[\n  \"Content-Type\",\n  \"X-Amz-Date\",\n  \"Authorization\",\n  \"X-Api-Key\",\n  \"X-Amz-Security-Token\"\n]"}, {"name": "discard_default_headers", "description": "When set to true to it discards the default permitted headers and only includes those explicitly defined", "default": "false"}]}, "trussworks/logs/aws": {"name": "logs", "url": "https://registry.terraform.io/modules/trussworks/logs/aws", "provider": "aws", "downloads": 63, "description": "Creates and configures an S3 bucket for storing AWS logs.", "source": "trussworks/logs/aws", "args": [{"name": "redshift_logs_prefix", "description": "S3 prefix for RedShift logs.", "default": "\"redshift\""}, {"name": "s3_bucket_name", "description": "S3 bucket to store AWS logs in.", "default": ""}, {"name": "elb_logs_prefix", "description": "S3 prefix for ELB logs.", "default": "\"elb\""}, {"name": "enable_cloudtrail", "description": "Enable CloudTrail to log to the AWS logs bucket.", "default": "true"}, {"name": "alb_logs_prefix", "description": "S3 prefix for ALB logs.", "default": "\"alb\""}, {"name": "cloudtrail_logs_prefix", "description": "S3 prefix for CloudTrail logs.", "default": "\"cloudtrail\""}, {"name": "config_logs_prefix", "description": "S3 prefix for AWS Config logs.", "default": "\"config\""}, {"name": "region", "description": "Region where the AWS S3 bucket will be created.", "default": ""}, {"name": "expiration", "description": "Number of days to keep AWS logs around.", "default": "90"}]}, "birkoff/api-gateway/aws": {"name": "api-gateway", "url": "https://registry.terraform.io/modules/birkoff/api-gateway/aws", "provider": "aws", "downloads": 63, "description": "Terraform module for AWS API Gateway resource", "source": "birkoff/api-gateway/aws", "args": [{"name": "resource_path", "description": "", "default": ""}, {"name": "api_name", "description": "", "default": ""}, {"name": "api_description", "description": "", "default": ""}, {"name": "region", "description": "", "default": ""}]}, "hashicorp/vault/azurerm": {"name": "vault", "url": "https://registry.terraform.io/modules/hashicorp/vault/azurerm", "provider": "azurerm", "downloads": 61, "description": "A Terraform Module for how to run Vault on AzureRM using Terraform and Packer", "source": "hashicorp/vault/azurerm", "args": [{"name": "subscription_id", "description": "The Azure subscription ID", "default": ""}, {"name": "tenant_id", "description": "The Azure tenant ID", "default": ""}, {"name": "client_id", "description": "The Azure client ID", "default": ""}, {"name": "secret_access_key", "description": "The Azure secret access key", "default": ""}, {"name": "resource_group_name", "description": "The name of the Azure resource group consul will be deployed into. This RG should already exist", "default": ""}, {"name": "storage_account_name", "description": "The name of an Azure Storage Account. This SA should already exist", "default": ""}, {"name": "storage_account_key", "description": "The key for storage_account_name.", "default": ""}, {"name": "image_uri", "description": "The URI to the Azure image that should be deployed to the consul cluster.", "default": ""}, {"name": "key_data", "description": "The SSH public key that will be added to SSH authorized_users on the consul instances", "default": ""}, {"name": "allowed_inbound_cidr_blocks", "description": "A list of CIDR-formatted IP address ranges from which the Azure Instances will allow connections to Consul", "default": ""}, {"name": "location", "description": "The Azure region the consul cluster will be deployed in", "default": "\"East US\""}, {"name": "address_space", "description": "The supernet for the resources that will be created", "default": "\"10.0.0.0/16\""}, {"name": "subnet_address", "description": "The subnet that consul resources will be deployed into", "default": "\"10.0.10.0/24\""}, {"name": "consul_cluster_name", "description": "What to name the Consul cluster and all of its associated resources", "default": "\"consul-example\""}, {"name": "vault_cluster_name", "description": "What to name the Vault cluster and all of its associated resources", "default": "\"vault-example\""}, {"name": "instance_size", "description": "The instance size for the servers", "default": "\"Standard_A0\""}, {"name": "num_consul_servers", "description": "The number of Consul server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "num_vault_servers", "description": "The number of Vault server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}]}, "anrim/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/anrim/ecs/aws", "provider": "aws", "downloads": 61, "description": "A Terraform module that creates an ECS Docker cluster and services", "source": "anrim/ecs/aws", "args": []}, "admintome/elk/aws": {"name": "elk", "url": "https://registry.terraform.io/modules/admintome/elk/aws", "provider": "aws", "downloads": 60, "description": "Terraform module to deploy an Elasticsearch, Logstash, and Kibana server to AWS.", "source": "admintome/elk/aws", "args": [{"name": "key", "description": "Name of the AWS Key Pair to associate with the ELK instance.", "default": ""}, {"name": "private_key", "description": "Path to the local SSH private key file associated with the AWS Key Pair.", "default": ""}]}, "blinkist/airship-ecs-cluster/aws": {"name": "airship-ecs-cluster", "url": "https://registry.terraform.io/modules/blinkist/airship-ecs-cluster/aws", "provider": "aws", "downloads": 60, "description": "Terraform module which creates an ECS Cluster with integrated instance scaling and EFS mounting capability", "source": "blinkist/airship-ecs-cluster/aws", "args": [{"name": "create_roles", "description": "Are we creating iam roles", "default": "true"}, {"name": "ecs_instance_scaling_create", "description": "Do we want to enable instance scaling for this ECS Cluster", "default": "false"}, {"name": "vpc_security_group_ids", "description": "List of VPC security groups to associate", "default": "[]"}, {"name": "create", "description": "Are we creating resources", "default": "true"}, {"name": "ecs_instance_draining_lambda_arn", "description": "The Lambda function arn taking care of the ECS Draining lifecycle", "default": "\"\""}, {"name": "ecs_instance_scaling_properties", "description": "", "default": ""}, {"name": "vpc_id", "description": "the main vpc identifier", "default": ""}, {"name": "subnet_ids", "description": "the list of subnet_ids the autoscaling groups will use", "default": ""}, {"name": "tags", "description": "", "default": "{}"}, {"name": "datadog_api_key", "description": "Datadog API Key", "default": "false"}, {"name": "name", "description": "the short name of the environment that is used to define it", "default": ""}, {"name": "create_autoscalinggroup", "description": "Are we creating an autoscaling group", "default": "true"}, {"name": "environment", "description": "Which environment are we in ? For datadog", "default": ""}, {"name": "cluster_properties", "description": "", "default": "{\n  \"block_metadata_service\": false,\n  \"create\": false,\n  \"ec2_asg_max\": 0,\n  \"ec2_asg_min\": 0,\n  \"ec2_custom_userdata\": \"\",\n  \"ec2_disk_size\": 50,\n  \"ec2_disk_type\": \"gp2\",\n  \"ec2_instance_type\": \"t2.small\",\n  \"ec2_key_name\": \"\",\n  \"efs_enabled\": \"0\",\n  \"efs_id\": \"\"\n}"}, {"name": "datadog_enabled", "description": "Is datadog enabled ? ", "default": "false"}]}, "mediapop/key/aws": {"name": "key", "url": "https://registry.terraform.io/modules/mediapop/key/aws", "provider": "aws", "downloads": 59, "description": "Local private key to AWS key registration.", "source": "mediapop/key/aws", "args": [{"name": "path", "description": "Path to the private SSH key.", "default": "\"~/.ssh/id_rsa\""}]}, "nicholasjackson/open-faas-nomad/aws": {"name": "open-faas-nomad", "url": "https://registry.terraform.io/modules/nicholasjackson/open-faas-nomad/aws", "provider": "aws", "downloads": 58, "description": "Example Terraform configuration to create OpenFaas on Nomad for AWS ", "source": "nicholasjackson/open-faas-nomad/aws", "args": [{"name": "namespace", "description": "", "default": "\"openfaas\""}, {"name": "ssh_key", "description": "SSH public key to add to instances", "default": "\"~/.ssh/id_rsa.pub\""}, {"name": "min_servers", "description": "Minimum number of Nomad servers in the cluster autoscale group", "default": "\"1\""}, {"name": "max_servers", "description": "Maximum number of Nomad servers in the cluster autoscale group", "default": "\"5\""}, {"name": "min_agents", "description": "Minimum number of Nomad agents in the cluster autoscale group", "default": "\"1\""}, {"name": "max_agents", "description": "Maximum number of Nomad agents in the cluster autoscale group", "default": "\"5\""}, {"name": "consul_version", "description": "Version of Consul to install", "default": "\"0.9.3\""}, {"name": "nomad_version", "description": "Version of Nomad to install", "default": "\"0.6.3\""}, {"name": "vpc_cidr_block", "description": "", "default": "\"10.0.0.0/16\""}, {"name": "azs", "description": "", "default": "[\n  \"eu-west-1a\",\n  \"eu-west-1b\",\n  \"eu-west-1c\"\n]"}, {"name": "private_subnets", "description": "", "default": "[\n  \"10.0.1.0/24\",\n  \"10.0.2.0/24\",\n  \"10.0.3.0/24\"\n]"}, {"name": "instance_type", "description": "", "default": "\"t2.micro\""}]}, "trussworks/config/aws": {"name": "config", "url": "https://registry.terraform.io/modules/trussworks/config/aws", "provider": "aws", "downloads": 57, "description": "Enables AWS Config and adds managed config rules with good defaults.", "source": "trussworks/config/aws", "args": [{"name": "config_logs_bucket", "description": "The S3 bucket for AWS Config logs.", "default": ""}, {"name": "config_logs_prefix", "description": "The S3 prefix for AWS Config logs.", "default": "\"config\""}, {"name": "config_max_execution_frequency", "description": "The maximum frequency with which AWS Config runs evaluations for a rule.", "default": "\"TwentyFour_Hours\""}, {"name": "config_delivery_frequency", "description": "The frequency with which AWS Config delivers configuration snapshots.", "default": "\"Six_Hours\""}, {"name": "acm_days_to_expiration", "description": "Specify the number of days before the rule flags the ACM Certificate as noncompliant.", "default": "14"}, {"name": "password_require_uppercase", "description": "Require at least one uppercase character in password.", "default": "true"}, {"name": "password_require_lowercase", "description": "Require at least one lowercase character in password.", "default": "true"}, {"name": "password_require_symbols", "description": "Require at least one symbol in password.", "default": "true"}, {"name": "password_require_numbers", "description": "Require at least one number in password.", "default": "true"}, {"name": "password_min_length", "description": "Password minimum length.", "default": "14"}, {"name": "password_reuse_prevention", "description": "Number of passwords before allowing reuse.", "default": "24"}, {"name": "password_max_age", "description": "Number of days before password expiration.", "default": "90"}]}, "hashicorp/vault/google": {"name": "vault", "url": "https://registry.terraform.io/modules/hashicorp/vault/google", "provider": "google", "downloads": 56, "description": "A Terraform Module for how to run Vault on Google Cloud using Terraform and Packer", "source": "hashicorp/vault/google", "args": [{"name": "consul_server_cluster_name", "description": "The name of the Consul Server cluster. All resources will be namespaced by this value. E.g. consul-server-prod", "default": ""}, {"name": "gcs_bucket_class", "description": "The Storage Class of the Google Cloud Storage Bucket where Vault secrets will be stored. Must be one of MULTI_REGIONAL, REGIONAL, NEARLINE, or COLDLINE. For details, see https://goo.gl/hk63jH.", "default": "\"MULTI_REGIONAL\""}, {"name": "gcp_project", "description": "The name of the GCP Project where all resources will be launched.", "default": ""}, {"name": "gcp_region", "description": "The region in which all GCP resources will be launched.", "default": ""}, {"name": "vault_cluster_name", "description": "The name of the Consul Server cluster. All resources will be namespaced by this value. E.g. consul-server-prod", "default": ""}, {"name": "consul_server_machine_type", "description": "The machine type of the Compute Instance to run for each node in the Consul Server cluster (e.g. n1-standard-1).", "default": "\"g1-small\""}, {"name": "gcp_zone", "description": "The region in which all GCP resources will be launched.", "default": ""}, {"name": "vault_source_image", "description": "The Google Image used to launch each node in the Consul Server cluster. You can build this Google Image yourself at /examples/vault-consul-image.", "default": ""}, {"name": "gcs_bucket_location", "description": "The location of the Google Cloud Storage Bucket where Vault secrets will be stored. For details, see https://goo.gl/hk63jH.", "default": "\"US\""}, {"name": "web_proxy_port", "description": "The port at which the HTTP proxy server will listen for incoming HTTP requests that will be forwarded to the Vault Health Check URL. We must have an HTTP proxy server to work around the limitation that GCP only permits Health Checks via HTTP, not HTTPS.", "default": "\"8000\""}, {"name": "consul_server_cluster_size", "description": "The number of nodes to have in the Consul Server cluster. We strongly recommended that you use either 3 or 5.", "default": "3"}, {"name": "consul_server_source_image", "description": "The Google Image used to launch each node in the Consul Server cluster. You can build this Google Image yourself at /examples/vault-consul-image.", "default": ""}, {"name": "vault_cluster_machine_type", "description": "The machine type of the Compute Instance to run for each node in the Vault cluster (e.g. n1-standard-1).", "default": "\"g1-small\""}, {"name": "gcs_bucket_force_destroy", "description": "If true, Terraform will delete the Google Cloud Storage Bucket even if it's non-empty. WARNING! Never set this to true in a production setting. We only have this option here to facilitate testing.", "default": "true"}, {"name": "vault_cluster_size", "description": "The number of nodes to have in the Vault Server cluster. We strongly recommended that you use either 3 or 5.", "default": "3"}]}, "scholzj/tagging-lambda/aws": {"name": "tagging-lambda", "url": "https://registry.terraform.io/modules/scholzj/tagging-lambda/aws", "provider": "aws", "downloads": 56, "description": "AWS Lambda function for tagging resources", "source": "scholzj/tagging-lambda/aws", "args": [{"name": "aws_region", "description": "Region where Cloud Formation is created", "default": "\"us-east-1\""}, {"name": "lambda_name", "description": "Will be used to name the tagging lambda, its roles etc.", "default": ""}, {"name": "search_tag_key", "description": "The Key of the tag which determines resources belonging to the application. All resources with matching tag and its value will be tagged with additional tags.", "default": ""}, {"name": "search_tag_value", "description": "The Valur of the tag which determines resources belonging to the application. All resources with matching tag and its value will be tagged with additional tags.", "default": ""}, {"name": "tags", "description": "Tags used for the AWS resources created by this template", "default": ""}]}, "fillup/hugo-s3-cloudfront/aws": {"name": "hugo-s3-cloudfront", "url": "https://registry.terraform.io/modules/fillup/hugo-s3-cloudfront/aws", "provider": "aws", "downloads": 56, "description": "Terraform module to create S3 bucket and CloudFront distribution for hosting a Hugo site", "source": "fillup/hugo-s3-cloudfront/aws", "args": [{"name": "aliases", "description": "List of hostnames to serve site on. E.g. with and without www", "default": ""}, {"name": "aws_region", "description": "", "default": "\"us-east-1\""}, {"name": "bucket_name", "description": "Name of bucket to be created in S3. Must be globally unique.", "default": ""}, {"name": "cert_domain", "description": "Domain name on ACM certificate", "default": ""}, {"name": "cf_default_ttl", "description": "CloudFront default TTL for cachine", "default": "\"86400\""}, {"name": "cf_min_ttl", "description": "CloudFront minimum TTL for caching", "default": "\"0\""}, {"name": "cf_max_ttl", "description": "CloudFront maximum TTL for caching", "default": "\"31536000\""}, {"name": "cf_price_class", "description": "CloudFront price class", "default": "\"PriceClass_All\""}, {"name": "origin_path", "description": "Path in S3 bucket for hosted files, without slashes", "default": "\"public\""}, {"name": "s3_origin_id", "description": "Origin ID used in CloudFront", "default": "\"hugo-s3-origin\""}]}, "npalm/ecs-instances/aws": {"name": "ecs-instances", "url": "https://registry.terraform.io/modules/npalm/ecs-instances/aws", "provider": "aws", "downloads": 55, "description": "AWS Terraform module to create ECS cluster instances.", "source": "npalm/ecs-instances/aws", "args": [{"name": "aws_region", "description": "The AWS region to be used.", "default": ""}, {"name": "key_name", "description": "Name of AWS key pair", "default": ""}, {"name": "instance_type", "description": "Default AWS instance type.", "default": "\"t2.small\""}, {"name": "asg_min", "description": "Minimum numbers of instances in the auto scaling group.", "default": "\"1\""}, {"name": "asg_max", "description": "Maximum numbers of instances in the auto scaling group.", "default": "\"2\""}, {"name": "asg_desired", "description": "Desired numbers of instances in the auto scaling group.", "default": "\"1\""}, {"name": "vpc_id", "description": "ID of the VPC.", "default": ""}, {"name": "vpc_cidr", "description": "CIDR for the VPC.", "default": ""}, {"name": "environment", "description": "Logical name of the environment, will be used as prefix and in tags.", "default": ""}, {"name": "subnets", "description": "Subnets where the instances will be deployed to.", "default": ""}, {"name": "coreos_amis", "description": "A map of region to core os AMI. By default the latest available will be chosen.", "default": "{}"}, {"name": "ecs_optimized_amis", "description": "A map of region to ecs optimized AMI. By default the latest available will be chosen.", "default": "{}"}, {"name": "os", "description": "By default Amazon linux is used, other supported OS in CoreOS.", "default": "\"\""}, {"name": "ecs_cluster_name", "description": "Name of the ECS cluster.", "default": ""}, {"name": "user_data", "description": "Override the module embedded user data script.", "default": "\"\""}, {"name": "create_ecs_service_role", "description": "If true creates a ECS service role.", "default": "true"}]}, "infrablocks/ecs-route53-registration/aws": {"name": "ecs-route53-registration", "url": "https://registry.terraform.io/modules/infrablocks/ecs-route53-registration/aws", "provider": "aws", "downloads": 54, "description": "Route53 DNS registration for ECS services", "source": "infrablocks/ecs-route53-registration/aws", "args": [{"name": "region", "description": "The region into which the VPC auto peering lambda is being deployed.", "default": ""}, {"name": "deployment_identifier", "description": "An identifier for this instantiation.", "default": ""}, {"name": "cluster_arn", "description": "The ARN of the ECS cluster containing the service to be registered.", "default": ""}, {"name": "service_name", "description": "The name of the service to register.", "default": ""}, {"name": "hosted_zone_id", "description": "The ID of the hosted zone to register into.", "default": ""}, {"name": "record_set_name_template", "description": "A template for the desired record set name.", "default": ""}, {"name": "record_set_ip_type", "description": "The type of IP to use in the record set (\"public\" or \"private\").", "default": ""}]}, "crisboarna/api-gateway-lambda-dynamodb/aws": {"name": "api-gateway-lambda-dynamodb", "url": "https://registry.terraform.io/modules/crisboarna/api-gateway-lambda-dynamodb/aws", "provider": "aws", "downloads": 54, "description": "Terraform module which deploys a serverless HTTP endpoint backed by AWS API Gateway, Lambda & DynamoDB ", "source": "crisboarna/api-gateway-lambda-dynamodb/aws", "args": [{"name": "lambda_zip_path", "description": "Local path to Lambda zip code", "default": ""}, {"name": "tags", "description": "Tags for lambda", "default": "{}"}, {"name": "environment_variables", "description": "Azure Bot Subscription ID", "default": ""}, {"name": "region", "description": "Region to deploy in", "default": ""}, {"name": "lambda_function_name", "description": "Local path to Lambda zip code", "default": ""}, {"name": "lambda_timeout", "description": "Maximum runtime for Lambda", "default": "30"}, {"name": "lambda_code_s3_key", "description": "Location of Lambda code in S3 bucket", "default": ""}, {"name": "lambda_code_s3_bucket_visibility", "description": "S3 bucket ACL", "default": "\"private\""}, {"name": "dynamodb_table_secondary_index", "description": "List of list of maps representing each table secondary index list. Required due to current HCL limitations", "default": "[\n  []\n]"}, {"name": "project", "description": "Name of project", "default": ""}, {"name": "lambda_description", "description": "Lambda description", "default": "\"\""}, {"name": "lambda_code_s3_bucket", "description": "Location of Lambda code in S3", "default": ""}, {"name": "lambda_memory_size", "description": "Lambda memory size", "default": ""}, {"name": "api_gw_method", "description": "API Gateway method (GET,POST...)", "default": "\"POST\""}, {"name": "dynamodb_table_properties", "description": "List of maps representing a table each. name (required), read_capacity(default=1), write_capacity(default=1), hash_key(required)", "default": ""}, {"name": "dynamodb_table_attributes", "description": "List of list of maps representing each table attributes list. Required due to current HCL limitations", "default": ""}, {"name": "lambda_runtime", "description": "Lambda runtime", "default": ""}, {"name": "lambda_handler", "description": "Lambda handler path", "default": ""}, {"name": "lambda_code_s3_storage_class", "description": "Lambda code S3 storage class", "default": "\"ONEZONE_IA\""}, {"name": "dynamodb_policy_action_list", "description": "List of Actions to be executed", "default": "[\n  \"dynamodb:DescribeTable\",\n  \"dynamodb:DeleteItem\",\n  \"dynamodb:GetItem\",\n  \"dynamodb:Scan\",\n  \"dynamodb:Query\"\n]"}]}, "devops-workflow/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/devops-workflow/efs/aws", "provider": "aws", "downloads": 52, "description": "Terraform Module to define an EFS Filesystem (aka NFS)", "source": "devops-workflow/efs/aws", "args": [{"name": "attributes", "description": "Suffix name with additional attributes (policy, role, etc.)", "default": "[]"}, {"name": "component", "description": "TAG: Underlying, dedicated piece of service (Cache, DB, ...)", "default": "\"UNDEF-EFS\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespaces`, `attributes`, etc.", "default": "\"-\""}, {"name": "environment", "description": "Environment (ex: `dev`, `qa`, `stage`, `prod`). (Second or top level namespace. Depending on namespacing options)", "default": ""}, {"name": "monitor", "description": "TAG: Should resource be monitored", "default": "\"UNDEF-EFS\""}, {"name": "name", "description": "Base name for resource", "default": ""}, {"name": "namespace-env", "description": "Prefix name with the environment. If true, format is: <env>-<name>", "default": "true"}, {"name": "namespace-org", "description": "Prefix name with the organization. If true, format is: <org>-<env namespaced name>. If both env and org namespaces are used, format will be <org>-<env>-<name>", "default": "false"}, {"name": "organization", "description": "Organization name (Top level namespace)", "default": "\"\""}, {"name": "owner", "description": "TAG: Owner of the service", "default": "\"UNDEF-EFS\""}, {"name": "product", "description": "TAG: Company/business product", "default": "\"UNDEF-EFS\""}, {"name": "service", "description": "TAG: Application (microservice) name", "default": "\"UNDEF-EFS\""}, {"name": "tags", "description": "A map of additional tags", "default": "{}"}, {"name": "team", "description": "TAG: Department/team of people responsible for service", "default": "\"UNDEF-EFS\""}, {"name": "dns_ttl", "description": "TTL of the DNS record", "default": "\"60\""}, {"name": "zone_id", "description": "Route53 DNS zone ID", "default": "\"\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "encrypted", "description": "If true, the disk will be encrypted", "default": "\"false\""}, {"name": "ingress_cidr", "description": "List of CIDR to allow access to EFS", "default": "[]"}, {"name": "kms_key_id", "description": "ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true", "default": "\"\""}, {"name": "performance_mode", "description": "The file system performance mode. Can be either generalPurpose or maxIO", "default": "\"generalPurpose\""}, {"name": "region", "description": "AWS region", "default": "\"\""}, {"name": "security_groups", "description": "AWS security group IDs to allow to connect to the EFS", "default": "[]"}, {"name": "subnets", "description": "AWS subnet IDs", "default": ""}, {"name": "vpc_id", "description": "AWS VPC ID", "default": ""}]}, "Aplyca/acm/aws": {"name": "acm", "url": "https://registry.terraform.io/modules/Aplyca/acm/aws", "provider": "aws", "downloads": 52, "description": "Terraform AWS Certificate Manager module", "source": "Aplyca/acm/aws", "args": [{"name": "validate", "description": "Validate ACM certificates", "default": "true"}, {"name": "tags", "description": "Tags", "default": "{}"}, {"name": "domain", "description": "Domian name to request ACM certificate", "default": ""}, {"name": "zone_ids", "description": "Zone Id", "default": "[]"}, {"name": "alternative_domains", "description": "Domians name to request ACM certificates", "default": "[]"}]}, "claranet/asg-instance-alarms/aws": {"name": "asg-instance-alarms", "url": "https://registry.terraform.io/modules/claranet/asg-instance-alarms/aws", "provider": "aws", "downloads": 52, "description": "Manages CloudWatch Alarms for EC2 Instances in ASGs", "source": "claranet/asg-instance-alarms/aws", "args": [{"name": "name", "description": "", "default": "\"terraform-aws-asg-instance-alarms\""}, {"name": "schedule", "description": "", "default": "\"rate(5 minutes)\""}]}, "grem11n/vpc-peering/aws": {"name": "vpc-peering", "url": "https://registry.terraform.io/modules/grem11n/vpc-peering/aws", "provider": "aws", "downloads": 51, "description": "Terraform module to setup VPC peering connection", "source": "grem11n/vpc-peering/aws", "args": [{"name": "owner_account_id", "description": "AWS owner account ID", "default": "\"\""}, {"name": "vpc_peer_id", "description": "Peer VPC ID", "default": "\"\""}, {"name": "this_vpc_id", "description": "This VPC ID", "default": "\"\""}, {"name": "private_route_table_ids", "description": "A list of private route tables", "default": "[]"}, {"name": "public_route_table_ids", "description": "A list of public route tables", "default": "[]"}, {"name": "peer_cird_block", "description": "Peer VPC CIDR block", "default": "\"\""}, {"name": "auto_accept_peering", "description": "Auto accept peering connection", "default": "false"}]}, "birkoff/lambda-function/aws": {"name": "lambda-function", "url": "https://registry.terraform.io/modules/birkoff/lambda-function/aws", "provider": "aws", "downloads": 51, "description": "Terraform module for AWS Lambda Function resource (simple function, manual trigger)", "source": "birkoff/lambda-function/aws", "args": [{"name": "timeout", "description": "", "default": ""}, {"name": "s3_lambda_bucket", "description": "", "default": ""}, {"name": "lambda_role_arn", "description": "", "default": ""}, {"name": "env_vars", "description": "", "default": ""}, {"name": "principal", "description": "", "default": ""}, {"name": "source_arn", "description": "", "default": ""}, {"name": "region", "description": "", "default": ""}, {"name": "s3_function_key", "description": "", "default": ""}, {"name": "function_name", "description": "", "default": ""}, {"name": "description", "description": "", "default": ""}, {"name": "handler", "description": "", "default": ""}, {"name": "runtime", "description": "", "default": ""}, {"name": "tags", "description": "", "default": ""}]}, "npalm/gitlab-runner/aws": {"name": "gitlab-runner", "url": "https://registry.terraform.io/modules/npalm/gitlab-runner/aws", "provider": "aws", "downloads": 50, "description": "Terraform script for AWS GitLab Runners on Spot Instances", "source": "npalm/gitlab-runner/aws", "args": [{"name": "runners_token", "description": "Token for the runner, will be used in the runner config.toml", "default": ""}, {"name": "docker_machine_user", "description": "User name for the user to create spot instances to host docker-machine.", "default": "\"docker-machine\""}, {"name": "gitlab_runner_version", "description": "Version for the gitlab runner.", "default": "\"10.8.0\""}, {"name": "environment", "description": "A name that identifies the environment, will used as prefix and for tagging.", "default": ""}, {"name": "subnet_id_runners", "description": "Subnet used to hosts the docker-machine runners.", "default": ""}, {"name": "instance_type", "description": "Instance type used for the gitlab-runner.", "default": "\"t2.micro\""}, {"name": "runners_limit", "description": "Limit for the runners, will be used in the runner config.toml", "default": "0"}, {"name": "runners_idle_count", "description": "Idle count of the runners, will be used in the runner config.toml", "default": "0"}, {"name": "runners_privilled", "description": "Runners will run in privilled mode, will be used in the runner config.toml", "default": "\"true\""}, {"name": "cache_user", "description": "User name of the user to create to write and read to the s3 cache.", "default": "\"cache_user\""}, {"name": "ssh_public_key", "description": "Public SSH key used for the gitlab-runner ec2 instance.", "default": ""}, {"name": "docker_machine_instance_type", "description": "Instance type used for the instances hosting docker-machine.", "default": "\"m4.large\""}, {"name": "runners_gitlab_url", "description": "URL of the gitlab instance to connect to.", "default": ""}, {"name": "enable_cloudwatch_logging", "description": "Enable or disable the CloudWatch logging.", "default": "1"}, {"name": "aws_region", "description": "AWS region.", "default": ""}, {"name": "vpc_id", "description": "The VPC that is used for the instances.", "default": ""}, {"name": "docker_machine_spot_price_bid", "description": "Spot price bid.", "default": "\"0.04\""}, {"name": "runners_concurrent", "description": "Concurrent value for the runners, will be used in the runner config.toml", "default": "10"}, {"name": "runners_idle_time", "description": "Idle time of the runners, will be used in the runner config.toml", "default": "600"}, {"name": "cache_expiration_days", "description": "Number of days before cache objects expires.", "default": "1"}, {"name": "subnet_id_gitlab_runner", "description": "Subnet used for hosting the gitlab-runner.", "default": ""}, {"name": "amazon_optimized_amis", "description": "AMI map per region-zone for the gitlab-runner instance AMI.", "default": "{\n  \"ap-northeast-1\": \"ami-ceafcba8\",\n  \"ap-northeast-2\": \"ami-863090e8\",\n  \"ap-south-1\": \"ami-531a4c3c\",\n  \"ap-southeast-1\": \"ami-68097514\",\n  \"ap-southeast-2\": \"ami-942dd1f6\",\n  \"ca-central-1\": \"ami-a954d1cd\",\n  \"eu-central-1\": \"ami-5652ce39\",\n  \"eu-west-1\": \"ami-d834aba1\",\n  \"eu-west-2\": \"ami-403e2524\",\n  \"us-east-1\": \"ami-97785bed\",\n  \"us-east-2\": \"ami-f63b1193\",\n  \"us-west-1\": \"ami-824c4ee2\",\n  \"us-west-2\": \"ami-f2d3638a\"\n}"}, {"name": "runners_name", "description": "Name of the runner, will be used in the runner config.toml", "default": ""}]}, "claranet/eipattach/aws": {"name": "eipattach", "url": "https://registry.terraform.io/modules/claranet/eipattach/aws", "provider": "aws", "downloads": 50, "description": "Automatically attach Elastic IPs to instances", "source": "claranet/eipattach/aws", "args": [{"name": "name", "description": "Name to use for resources", "default": "\"terraform-aws-eipattach\""}, {"name": "tag_name", "description": "Tag to use to associate EIPs with instances", "default": "\"EIP\""}, {"name": "schedule", "description": "Schedule for running the Lambda function", "default": "\"rate(1 minute)\""}, {"name": "timeout", "description": "Lambda function timeout", "default": "\"60\""}, {"name": "disable_source_dest", "description": "Whether to disable source/dest checking when attaching an EIP", "default": "\"false\""}]}, "damacus/s3-logs-bucket/aws": {"name": "s3-logs-bucket", "url": "https://registry.terraform.io/modules/damacus/s3-logs-bucket/aws", "provider": "aws", "downloads": 50, "description": "Terraform module which creates a S3 bucket designed for logging", "source": "damacus/s3-logs-bucket/aws", "args": [{"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "standard_ia_transition_days", "description": "", "default": "30"}, {"name": "glacier_transition_days", "description": "", "default": "60"}, {"name": "expiration", "description": "", "default": "90"}, {"name": "bucket_name", "description": "", "default": "\"Name of the bucket to create\""}]}, "Automatic/taskhawk-queue/aws": {"name": "taskhawk-queue", "url": "https://registry.terraform.io/modules/Automatic/taskhawk-queue/aws", "provider": "aws", "downloads": 50, "description": "", "source": "Automatic/taskhawk-queue/aws", "args": [{"name": "queue", "description": "Application queue name (e.g. DEV-MYAPP); unique across your infra", "default": ""}, {"name": "iam", "description": "Should IAM policies be generated?", "default": "false"}, {"name": "enable_scheduler", "description": "Should Taskhawk scheduler be enabled?", "default": "false"}, {"name": "aws_region", "description": "AWS Region (required if enable_scheduler is true)", "default": "\"\""}, {"name": "aws_account_id", "description": "AWS Account ID (required if enable_scheduler is true)", "default": "\"\""}, {"name": "max_receive_count", "description": "Maximum number of receives allowed before message is moved to the dead-letter-queue", "default": "4"}, {"name": "tags", "description": "Tags to attach to the SQS queues", "default": ""}, {"name": "alerting", "description": "Should Cloudwatch alerts be generated?", "default": "false"}, {"name": "queue_alarm_high_message_count_threshold", "description": "Threshold for alerting on high message count in main queue", "default": "5000"}, {"name": "queue_alarm_high_priority_high_message_count_threshold", "description": "Threshold for alerting on high message count in high priority queue", "default": "5000"}, {"name": "queue_alarm_low_priority_high_message_count_threshold", "description": "Threshold for alerting on high message count in low priority queue", "default": "5000"}, {"name": "queue_alarm_bulk_high_message_count_threshold", "description": "Threshold for alerting on high message count in bulk queue", "default": "5000"}, {"name": "queue_alarm_high_message_count_actions", "description": "Cloudwatch Action ARNs for main queue Alarm for high message count (required if alerting is on)", "default": "[]"}, {"name": "queue_ok_high_message_count_actions", "description": "Cloudwatch Action ARNs for main queue OK for high message count (required if alerting is on)", "default": "[]"}, {"name": "dlq_alarm_high_message_count_actions", "description": "Cloudwatch Action ARNs for dead-letter queue Alarm for high message count (required if alerting is on)", "default": "[]"}, {"name": "dlq_ok_high_message_count_actions", "description": "Cloudwatch Action ARNs for dead-letter queue OK for high message count (required if alerting is on)", "default": "[]"}]}, "ketzacoatl/fpc-ops/aws": {"name": "fpc-ops", "url": "https://registry.terraform.io/modules/ketzacoatl/fpc-ops/aws", "provider": "aws", "downloads": 49, "description": "", "source": "ketzacoatl/fpc-ops/aws", "args": []}, "Automatic/taskhawk-scheduler/aws": {"name": "taskhawk-scheduler", "url": "https://registry.terraform.io/modules/Automatic/taskhawk-scheduler/aws", "provider": "aws", "downloads": 49, "description": "Custom Terraform module for creating infrastructure for Taskhawk periodic jobs", "source": "Automatic/taskhawk-scheduler/aws", "args": [{"name": "queue", "description": "Application SQS queue ARN (required for SQS apps; either this or topic must be specified)", "default": "\"\""}, {"name": "topic", "description": "Application SNS topic ARN (required for lambda apps; either this or queue must be specified)", "default": "\"\""}, {"name": "name", "description": "Rule name (must be unique across all taskhawk schedules)", "default": ""}, {"name": "schedule_expression", "description": "Cloudwatch cron schedule expression", "default": ""}, {"name": "description", "description": "Description of the Cloudwatch event rule", "default": "\"\""}, {"name": "format_version", "description": "Taskhawk message format version", "default": "\"v1.0\""}, {"name": "headers", "description": "Custom headers", "default": "{}"}, {"name": "task", "description": "Name of the task", "default": ""}, {"name": "args", "description": "Args", "default": "[]"}, {"name": "kwargs", "description": "Keyword args", "default": "{}"}]}, "telia-oss/rds-cluster/aws": {"name": "rds-cluster", "url": "https://registry.terraform.io/modules/telia-oss/rds-cluster/aws", "provider": "aws", "downloads": 47, "description": "RDS Cluster module for Terraform", "source": "telia-oss/rds-cluster/aws", "args": [{"name": "instance_type", "description": "The DB instance class to use.", "default": "\"db.r4.large\""}, {"name": "password", "description": "Password for the master DB user.", "default": ""}, {"name": "engine", "description": "The name of the database engine to be used for this DB cluster.", "default": "\"aurora-postgresql\""}, {"name": "username", "description": "Username for the master DB user.", "default": ""}, {"name": "instance_count", "description": "Number of DB instances to provision for the cluster.", "default": "\"1\""}, {"name": "skip_final_snapshot", "description": "Determines whether a final DB snapshot is created before the DB cluster is deleted. If true is specified, no DB snapshot is created.", "default": "\"true\""}, {"name": "name_prefix", "description": "A prefix used for naming resources.", "default": ""}, {"name": "vpc_id", "description": "The VPC ID.", "default": ""}, {"name": "port", "description": "The port on which the DB accepts connections.", "default": "\"5439\""}, {"name": "publicly_accessible", "description": "Bool to control if instances is publicly accessible.", "default": "\"false\""}, {"name": "snapshot_identifier", "description": "Specifies whether or not to create this cluster from a snapshot.", "default": "\"\""}, {"name": "tags", "description": "A map of tags (key-value pairs) passed to resources.", "default": "{}"}, {"name": "subnet_ids", "description": "A list of VPC subnet IDs.", "default": ""}, {"name": "database_name", "description": "Name for an automatically created database on cluster creation.", "default": "\"main\""}]}, "thojkooi/docker-swarm-firewall/digitalocean": {"name": "docker-swarm-firewall", "url": "https://registry.terraform.io/modules/thojkooi/docker-swarm-firewall/digitalocean", "provider": "digitalocean", "downloads": 46, "description": "Terraform module to configure Docker Swarm mode firewall rules on DigitalOcean.", "source": "thojkooi/docker-swarm-firewall/digitalocean", "args": [{"name": "cluster_droplet_ids", "description": "List of droplet ids", "default": ""}, {"name": "cluster_tags", "description": "List of droplet tags", "default": ""}, {"name": "prefix", "description": "Prefix used for the name of the firewall rules", "default": ""}]}, "devops-workflow/route53-alias/aws": {"name": "route53-alias", "url": "https://registry.terraform.io/modules/devops-workflow/route53-alias/aws", "provider": "aws", "downloads": 46, "description": "Terraform Module to Define Vanity Host/Domain (e.g. `brand.com`) as an ALIAS record", "source": "devops-workflow/route53-alias/aws", "args": [{"name": "aliases", "description": "List of aliases", "default": ""}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "evaluate_target_health", "description": "Set to true if you want Route 53 to determine whether to respond to DNS queries", "default": "\"false\""}, {"name": "parent_zone_id", "description": "ID of the hosted zone to contain this record (or specify parent_zone_name)", "default": "\"\""}, {"name": "parent_zone_name", "description": "Name of the hosted zone to contain this record (or specify parent_zone_id)", "default": "\"\""}, {"name": "target_dns_name", "description": "DNS-name of target resource (e.g. ALB,ELB)", "default": ""}, {"name": "target_zone_id", "description": "ID of target resource (e.g. ALB,ELB)", "default": ""}]}, "telia-oss/concourse/aws": {"name": "concourse", "url": "https://registry.terraform.io/modules/telia-oss/concourse/aws", "provider": "aws", "downloads": 46, "description": "A Terraform module for deploying Concourse CI.", "source": "telia-oss/concourse/aws", "args": []}, "Guimove/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/Guimove/bastion/aws", "provider": "aws", "downloads": 45, "description": " Terraform module which creates SSH bastion infrastructure on AWS", "source": "Guimove/bastion/aws", "args": [{"name": "bucket_name", "description": "Bucket name were the bastion will store the logs", "default": ""}, {"name": "tags", "description": "A mapping of tags to assign", "default": "{}"}, {"name": "region", "description": "", "default": ""}, {"name": "cidrs", "description": "List of CIDRs than can access to the bastion. Default : 0.0.0.0/0", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "is_lb_private", "description": "If TRUE the load balancer scheme will be \"internal\" else \"internet-facing\"", "default": ""}, {"name": "vpc_id", "description": "VPC id were we'll deploy the bastion", "default": ""}, {"name": "bastion_host_key_pair", "description": "Select the key pair to use to launch the bastion host", "default": ""}, {"name": "hosted_zone_name", "description": "Name of the hosted zone were we'll register the bastion DNS name", "default": "\"\""}, {"name": "bastion_record_name", "description": "DNS record name to use for the bastion", "default": "\"\""}, {"name": "elb_subnets", "description": "List of subnet were the ELB will be deployed", "default": ""}, {"name": "auto_scaling_group_subnets", "description": "List of subnet were the Auto Scalling Group will deploy the instances", "default": ""}, {"name": "bastion_amis", "description": "", "default": "{\n  \"ap-northeast-1\": \"ami-29160d47\",\n  \"ap-northeast-2\": \"ami-cf32faa1\",\n  \"ap-southeast-1\": \"ami-1ddc0b7e\",\n  \"ap-southeast-2\": \"ami-0c95b86f\",\n  \"eu-central-1\": \"ami-d3c022bc\",\n  \"eu-west-1\": \"ami-b0ac25c3\",\n  \"sa-east-1\": \"ami-fb890097\",\n  \"us-east-1\": \"ami-f5f41398\",\n  \"us-west-1\": \"ami-6e84fa0e\",\n  \"us-west-2\": \"ami-d0f506b0\"\n}"}, {"name": "bastion_instance_count", "description": "", "default": "1"}, {"name": "create_dns_record", "description": "Choose if you want to create a record name for the bastion (LB). If true 'hosted_zone_name' and 'bastion_record_name' are mandatory ", "default": ""}, {"name": "log_auto_clean", "description": "Enable or not the lifecycle", "default": "false"}, {"name": "log_standard_ia_days", "description": "Number of days before moving logs to IA Storage", "default": "30"}, {"name": "log_glacier_days", "description": "Number of days before moving logs to Glacier", "default": "60"}, {"name": "log_expiry_days", "description": "Number of days before logs expiration", "default": "90"}]}, "dpmerron/s3-static-site-cdn-ssl/aws": {"name": "s3-static-site-cdn-ssl", "url": "https://registry.terraform.io/modules/dpmerron/s3-static-site-cdn-ssl/aws", "provider": "aws", "downloads": 45, "description": "A Terraform Moule to Deploy a HTML static website to an AWS S3 Bucket with CloudFront CDN and SSL Certificates", "source": "dpmerron/s3-static-site-cdn-ssl/aws", "args": [{"name": "name", "description": "Sub Domain of your Site", "default": ""}, {"name": "domain", "description": "Domain Name of the site you want to deploy. Prefix with `.`", "default": ""}, {"name": "zoneid", "description": "Hosted ZoneID of your Route53 Zone", "default": ""}, {"name": "subdomain", "description": "Specify if the site you are creating is a subdomain.", "default": "false"}]}, "amancevice/slack-slash-command/google": {"name": "slack-slash-command", "url": "https://registry.terraform.io/modules/amancevice/slack-slash-command/google", "provider": "google", "downloads": 44, "description": "Generic slash command handler for Slack", "source": "amancevice/slack-slash-command/google", "args": [{"name": "timeout", "description": "Timeout in seconds for Slack event listener.", "default": "10"}, {"name": "auth_users_permission_denied", "description": "Permission denied message for users.", "default": ""}, {"name": "response_type", "description": "Response type of command.", "default": "\"direct\""}, {"name": "auth_channels_permission_denied", "description": "Permission denied message for channels.", "default": ""}, {"name": "description", "description": "Description of the function.", "default": "\"Slack slash command\""}, {"name": "function_name", "description": "Cloud Function for publishing events from Slack to Pub/Sub.", "default": ""}, {"name": "memory", "description": "Memory for Slack event listener.", "default": "512"}, {"name": "auth_channels_exclude", "description": "Optional list of Slack channel IDs to blacklist.", "default": "[]"}, {"name": "auth_channels_include", "description": "Optional list of Slack channel IDs to whitelist.", "default": "[]"}, {"name": "bucket_name", "description": "Cloud Storage bucket for storing Cloud Function code archives.", "default": ""}, {"name": "web_api_token", "description": "Slack Web API token.", "default": ""}, {"name": "auth_users_include", "description": "Optional list of Slack user IDs to whitelist.", "default": "[]"}, {"name": "verification_token", "description": "Slack verification token.", "default": ""}, {"name": "labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "auth_users_exclude", "description": "Optional list of Slack user IDs to blacklist.", "default": "[]"}, {"name": "response", "description": "Slack response object.", "default": ""}]}, "Azure/vmss-cloudinit/azurerm": {"name": "vmss-cloudinit", "url": "https://registry.terraform.io/modules/Azure/vmss-cloudinit/azurerm", "provider": "azurerm", "downloads": 43, "description": "Terraform AzureRM module registry to create a VM Scaleset initialized via cloud-init scripts", "source": "Azure/vmss-cloudinit/azurerm", "args": [{"name": "resource_group_name", "description": "The name of the resource group in which the resources will be created", "default": "\"vmssrg\""}, {"name": "location", "description": "The location where the resources will be created", "default": "\"\""}, {"name": "vm_size", "description": "Size of the Virtual Machine based on Azure sizing", "default": "\"Standard_A0\""}, {"name": "vmscaleset_name", "description": "The name of the VM scale set that will be created in Azure", "default": "\"vmscaleset\""}, {"name": "computer_name_prefix", "description": "The prefix that will be used for the hostname of the instances part of the VM scale set", "default": "\"vmss\""}, {"name": "managed_disk_type", "description": "Type of managed disk for the VMs that will be part of this compute group. Allowable values are 'Standard_LRS' or 'Premium_LRS'.", "default": "\"Standard_LRS\""}, {"name": "data_disk_size", "description": "Specify the size in GB of the data disk", "default": "\"10\""}, {"name": "admin_username", "description": "The admin username of the VMSS that will be deployed", "default": "\"azureuser\""}, {"name": "admin_password", "description": "The admin password to be used on the VMSS that will be deployed. The password must meet the complexity requirements of Azure", "default": "\"\""}, {"name": "ssh_key", "description": "Path to the public key to be used for ssh access to the VM", "default": "\"~/.ssh/id_rsa.pub\""}, {"name": "nb_instance", "description": "Specify the number of vm instances", "default": "\"1\""}, {"name": "vnet_subnet_id", "description": "The subnet id of the virtual network on which the vm scale set will be connected", "default": ""}, {"name": "network_profile", "description": "The name of the network profile that will be used in the VM scale set", "default": "\"terraformnetworkprofile\""}, {"name": "vm_os_simple", "description": "Specify Ubuntu or Windows to get the latest version of each os", "default": "\"\""}, {"name": "vm_os_publisher", "description": "The name of the publisher of the image that you want to deploy", "default": "\"\""}, {"name": "vm_os_offer", "description": "The name of the offer of the image that you want to deploy", "default": "\"\""}, {"name": "vm_os_sku", "description": "The sku of the image that you want to deploy", "default": "\"\""}, {"name": "vm_os_version", "description": "The version of the image that you want to deploy.", "default": "\"latest\""}, {"name": "vm_os_id", "description": "The ID of the image that you want to deploy if you are using a custom image.", "default": "\"\""}, {"name": "load_balancer_backend_address_pool_ids", "description": "The id of the backend address pools of the loadbalancer to which the VM scale set is attached", "default": ""}, {"name": "tags", "description": "A map of the tags to use on the resources that are deployed with this module.", "default": "{\n  \"source\": \"terraform\"\n}"}, {"name": "cloudconfig_file", "description": "The location of the cloud init configuration file.", "default": ""}]}, "cloudposse/ecr/aws": {"name": "ecr", "url": "https://registry.terraform.io/modules/cloudposse/ecr/aws", "provider": "aws", "downloads": 43, "description": "Terraform Module to manage Docker Container Registries on AWS ECR", "source": "cloudposse/ecr/aws", "args": [{"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "roles", "description": "Principal IAM roles to provide with access to the ECR", "default": "[]"}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. `map('BusinessUnit','XYZ')`)", "default": "{}"}, {"name": "max_image_count", "description": "How many Docker Image versions AWS ECR will store", "default": "\"7\""}, {"name": "name", "description": "The Name of the application or solution  (e.g. `bastion` or `portal`)", "default": ""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}]}, "kurron/expiring-s3/aws": {"name": "expiring-s3", "url": "https://registry.terraform.io/modules/kurron/expiring-s3/aws", "provider": "aws", "downloads": 42, "description": "Terraform module that creates an S3 bucket that ages out objects.  Great for holding logs.", "source": "kurron/expiring-s3/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "force_destroy", "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.", "default": "\"false\""}, {"name": "versioning_enabled", "description": "If true, object versioning is enabled. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.", "default": "\"false\""}, {"name": "mfa_delete", "description": "If true, require MFA to either change the versioning state of the bucket or permanently delete an object version.", "default": "\"false\""}, {"name": "acceleration_status", "description": "Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended.", "default": "\"Suspended\""}, {"name": "request_payer", "description": "Specifies who should bear the cost of Amazon S3 data transfer. Can be either BucketOwner or Requester.", "default": "\"BucketOwner\""}, {"name": "abort_incomplete_multipart_upload_days", "description": "Specifies the number of days after initiating a multipart upload when the multipart upload must be completed. ", "default": "\"7\""}, {"name": "expiration_days", "description": "Specifies the number of days after object creation when the object will be automatically deleted.", "default": "\"7\""}, {"name": "acl", "description": "The canned ACL to apply.", "default": "\"private\""}]}, "wpengine/secure-repository/github": {"name": "secure-repository", "url": "https://registry.terraform.io/modules/wpengine/secure-repository/github", "provider": "github", "downloads": 42, "description": "Terraform module for setting up a GitHub review team and branch protections to secure a repo", "source": "wpengine/secure-repository/github", "args": [{"name": "repo", "description": "The name of the repo to add a review team and branch protections to.", "default": ""}, {"name": "reviewers", "description": "List of github users to add to the repo's review team.", "default": ""}, {"name": "branches", "description": "List of branches to add branch protections to.", "default": "[\n  \"develop\",\n  \"master\"\n]"}, {"name": "required_contexts", "description": "List of required status check contexts to require.", "default": ""}, {"name": "required_status_checks_strict", "description": "Boolean: Require branches to be up to date before merging", "default": "\"false\""}]}, "zoitech/network/aws": {"name": "network", "url": "https://registry.terraform.io/modules/zoitech/network/aws", "provider": "aws", "downloads": 41, "description": "This module is intended to be used for configuring an AWS network.", "source": "zoitech/network/aws", "args": [{"name": "aws_region", "description": "The region to use for this module.", "default": "\"eu-central-1\""}, {"name": "vpc_name", "description": "The name of the VPC. Other names will result from this.", "default": ""}, {"name": "vpc_network", "description": "/24 Network within the Subnets will be created.", "default": "\"10.0.0.0/24\""}, {"name": "sn_public_a_name", "description": "The name of the 1st Public Subnet which will be available in AZ-a.", "default": "\"Public A\""}, {"name": "sn_public_b_name", "description": "The name of the 2nd Public Subnet which will be available in AZ-b.", "default": "\"Public B\""}, {"name": "sn_private_a_name", "description": "The name of the 1st Public Subnet which will be available in AZ-a.", "default": "\"Private A\""}, {"name": "sn_private_b_name", "description": "The name of the 1st Private Subnet which will be available in AZ-b.", "default": "\"Private B\""}, {"name": "create_nat", "description": "Create NAT GW for private subnet, create Internet GW for public subnet if set to true", "default": "true"}, {"name": "dns_hostnames", "description": "Enable DNS hostnames in the VPC", "default": "false"}]}, "JamesBelchamber/s3-301-redirect/aws": {"name": "s3-301-redirect", "url": "https://registry.terraform.io/modules/JamesBelchamber/s3-301-redirect/aws", "provider": "aws", "downloads": 41, "description": "Easily create a 301 redirect using an S3 bucket and a Route53 A record", "source": "JamesBelchamber/s3-301-redirect/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "zone_id", "description": "", "default": ""}, {"name": "target", "description": "", "default": ""}]}, "egarbi/ecs-worker/aws": {"name": "ecs-worker", "url": "https://registry.terraform.io/modules/egarbi/ecs-worker/aws", "provider": "aws", "downloads": 41, "description": "This is a simple ECS worker service without an LB associated", "source": "egarbi/ecs-worker/aws", "args": []}, "Aplyca/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/Aplyca/rds/aws", "provider": "aws", "downloads": 38, "description": "Create AWS RDS Aurora Cluster Resource", "source": "Aplyca/rds/aws", "args": [{"name": "name", "description": "Name prefix for all EFS resources.", "default": "\"App\""}, {"name": "cluster", "description": "Enable/disable cluster.", "default": "false"}, {"name": "storage", "description": "Storage size for the DB.", "default": "10"}, {"name": "port", "description": "DB port.", "default": "3306"}, {"name": "azs", "description": "A list of availability zones to associate with.", "default": "[]"}, {"name": "access_sg_ids", "description": "A list of security groups Ids to grant access.", "default": "[]"}, {"name": "vpc_id", "description": "VPC Id where the EFS resources will be deployed.", "default": ""}, {"name": "newbits", "description": "newbits in the cidrsubnet function.", "default": "26"}, {"name": "netnum", "description": "netnum in the cidrsubnet function.", "default": "0"}, {"name": "rt_id", "description": "Route Table Id to assing to the EFS subnet.", "default": ""}, {"name": "access_cidrs", "description": "A list of Subnets CIDR Blocks to grant access", "default": "[]"}, {"name": "tags", "description": "A mapping of tags to assign to the resource.", "default": "{}"}, {"name": "type", "description": "RDS instance type.", "default": "\"db.t2.small\""}, {"name": "engine", "description": "Engine", "default": "\"aurora-mysql\""}, {"name": "engine_version", "description": "Engine version", "default": "\"5.7\""}, {"name": "db_name", "description": "Database name.", "default": "\"app\""}, {"name": "db_user", "description": "Database user.", "default": "\"app\""}, {"name": "db_password", "description": "Database password.", "default": ""}]}, "crisboarna/lambda-invoke/aws": {"name": "lambda-invoke", "url": "https://registry.terraform.io/modules/crisboarna/lambda-invoke/aws", "provider": "aws", "downloads": 38, "description": "Terraform AWS Lambda module to create fully flexible, pluggable Lambda modules", "source": "crisboarna/lambda-invoke/aws", "args": [{"name": "lambda_zip_path", "description": "Local path to Lambda zip code", "default": ""}, {"name": "lambda_memory_size", "description": "Lambda memory size", "default": ""}, {"name": "lambda_description", "description": "Lambda description", "default": "\"\""}, {"name": "lambda_handler", "description": "Lambda handler path", "default": ""}, {"name": "lambda_runtime", "description": "Lambda runtime", "default": ""}, {"name": "lambda_code_s3_bucket_visibility", "description": "S3 bucket ACL", "default": "\"private\""}, {"name": "environmentVariables", "description": "Azure Bot Subscription ID", "default": "{\n  \"DEFAULT\": \"DEFAULT\"\n}"}, {"name": "region", "description": "Region to deploy in", "default": ""}, {"name": "lambda_code_s3_bucket_existing", "description": "Existing 'aws_s3_bucket.bucket'", "default": ""}, {"name": "lambda_function_name", "description": "Local path to Lambda zip code", "default": ""}, {"name": "lambda_timeout", "description": "Maximum runtime for Lambda", "default": "30"}, {"name": "lambda_code_s3_bucket_use_existing", "description": "Boolean flag to specify whether to use 'lambda_code_s3_bucket_new' and create new bucket or to use 'lambda_code_s3_bucket_existing and use existing S3 bucket and now a generate new one", "default": "\"true\""}, {"name": "lambda_code_s3_key", "description": "Location of Lambda code in S3 bucket", "default": ""}, {"name": "lambda_code_s3_storage_class", "description": "Lambda code S3 storage class", "default": "\"ONEZONE_IA\""}, {"name": "lambda_policy_arn_list", "description": "The ARNs of resources you want to allow execution of", "default": "[\n  \"arn:aws:lambda:*:*:*:*\"\n]"}, {"name": "lambda_policy_action_list", "description": "The Actions you want to allow Lambda execution of", "default": "[\n  \"lambda:InvokeFunction\",\n  \"lambda:InvokeAsync\"\n]"}, {"name": "tags", "description": "Tags for lambda", "default": "{}"}, {"name": "lambda_code_s3_bucket_new", "description": "S3 bucket with source code", "default": "\"defaultBucket\""}]}, "kurron/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/kurron/ecs-service/aws", "provider": "aws", "downloads": 37, "description": "Terraform module that realizes an ECS Task Definition, deploying it to a cluster", "source": "kurron/ecs-service/aws", "args": [{"name": "yes", "description": "", "default": "{\n  \"type\": \"distinctInstance\"\n}"}, {"name": "no", "description": "", "default": "{}"}, {"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the service being created, e.g. MongoDB", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "task_definition_arn", "description": "Full ARN of the task definition that you want to run in your service", "default": ""}, {"name": "desired_count", "description": "The number of instances of the task definition to place and keep running, e.g. 2", "default": ""}, {"name": "cluster_arn", "description": "ARN of an ECS cluster to deploy to.", "default": ""}, {"name": "iam_role", "description": "The ARN of IAM role that allows your Amazon ECS container agent to make calls to your load balancer on your behalf.", "default": ""}, {"name": "deployment_maximum_percent", "description": "The upper limit (as a percentage of the service's desired_count) of the number of running tasks that can be running in a service during a deployment, e.g. 200", "default": ""}, {"name": "deployment_minimum_healthy_percent", "description": " The lower limit (as a percentage of the service's desired_count) of the number of running tasks that must remain running and healthy in a service during a deployment, e.g. 50", "default": ""}, {"name": "container_name", "description": "The name of the container to associate with the load balancer (as it appears in a container definition).", "default": ""}, {"name": "container_port", "description": "The port on the container to associate with the load balancer, e.g. 80", "default": ""}, {"name": "container_protocol", "description": " The protocol to use for routing traffic to the container, e.g. HTTP", "default": ""}, {"name": "vpc_id", "description": " The identifier of the VPC in which to create the target group.", "default": ""}, {"name": "enable_stickiness", "description": "If set to Yes, the balancer will attempt to route clients to a consistent back end.", "default": ""}, {"name": "health_check_interval", "description": "The approximate amount of time, in seconds, between health checks of an individual target.", "default": ""}, {"name": "health_check_path", "description": "The destination for the health check request.", "default": ""}, {"name": "health_check_timeout", "description": "The amount of time, in seconds, during which no response means a failed health check.", "default": ""}, {"name": "health_check_healthy_threshold", "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy.", "default": ""}, {"name": "unhealthy_threshold", "description": "The number of consecutive health check failures required before considering the target unhealthy.", "default": ""}, {"name": "matcher", "description": "The HTTP codes to use when checking for a successful response from a target.", "default": ""}, {"name": "insecure_listener_arn", "description": "The ARN of the insecure HTTP listener to which to attach the rule.", "default": ""}, {"name": "secure_listener_arn", "description": "The ARN of the secure HTTP listener to which to attach the rule.", "default": ""}, {"name": "rule_priority", "description": "The priority for the rule. A listener can't have multiple rules with the same priority, e.g. 99", "default": ""}, {"name": "path_pattern", "description": "The path patterns to match, e.g. /my-service*", "default": ""}, {"name": "placement_strategies", "description": "Service level strategy rules that are taken into consideration during task placement.", "default": ""}, {"name": "placement_constraints", "description": "Instance level rules that are taken into consideration during task placement.", "default": ""}]}, "ovh/publiccloud-consul/ovh": {"name": "publiccloud-consul", "url": "https://registry.terraform.io/modules/ovh/publiccloud-consul/ovh", "provider": "ovh", "downloads": 37, "description": "", "source": "ovh/publiccloud-consul/ovh", "args": [{"name": "image_id", "description": "The ID of the glance image to run in the cluster. If `post_install_module` is set to `false`, this should be an image built from the Packer template under examples/consul-glance-image/consul.json. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"\""}, {"name": "image_name", "description": "The name of the glance image to run in the cluster. If `post_install_module` is set to `false`, this should be an image built from the Packer template under examples/consul-glance-image/consul.json. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"CoreOS Stable\""}, {"name": "flavor_name", "description": "The flavor name that will be used for consul nodes.", "default": "\"s1-4\""}, {"name": "region", "description": "The OVH region to deploy into (e.g. GRA3, BHS3, ...).", "default": ""}, {"name": "name", "description": "What to name the Consul cluster and all of its associated resources.", "default": ""}, {"name": "count", "description": "The number of Consul server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "cidr", "description": "The CIDR block of the Network. (e.g. 10.0.0.0/16)", "default": ""}, {"name": "subnet_ids", "description": "The list of subnets ids to deploy consul nodes in.\nIf `count` is specified, will spawn `count` consul node\naccross the list of subnets. Conflicts with `subnets`.\n", "default": "[]"}, {"name": "subnets", "description": "The list of subnets CIDR blocks to deploy consul nodes in.\nIf `count` is specified, will spawn `count` consul node\naccross the list of subnets. Conflicts with `subnet_ids`.\n", "default": "[\n  \"\"\n]"}, {"name": "additional_filepaths", "description": "List of additional file path to add on the server nodes. Useful to set additional configuration files for consul.", "default": "[]"}, {"name": "additional_filecontents", "description": "List of additional file contents to add on the server nodes. Will be written accordingly with the \"additional_filepaths\" variable.", "default": "[]"}, {"name": "additional_units", "description": "List of additional systemd unit to add on the server nodes. Useful to customize nodes, e.g. starting a fabio lb.", "default": "[]"}, {"name": "additional_unitcontents", "description": "List of additional systemd units contents to add on the server nodes. Will be written accordingly with the \"additional_filepaths\" variable.", "default": "[]"}, {"name": "security_group_ids", "description": "An optional list of additional security groups to attach to private ports", "default": "[]"}, {"name": "public_security_group_ids", "description": "An optional list of additional security groups to attach to public ports", "default": "[]"}, {"name": "cacert", "description": "Optional ca certificate to add to the nodes. If `cfssl` is set to `true`, cfssl will use `cacert` along with `cakey` to generate certificates. Otherwise will generate a new self signed ca.", "default": "\"\""}, {"name": "cacert_key", "description": "Optional ca certificate key. If `cfssl` is set to `true`, cfssl will use `cacert` along with `cakey` to generate certificates. Otherwise will generate a new self signed ca.", "default": "\"\""}, {"name": "domain", "description": "The domain of the consul cluster.", "default": "\"consul\""}, {"name": "datacenter", "description": "The datacenter of the consul cluster.", "default": "\"dc1\""}, {"name": "join_ipv4_addr", "description": "An optional list of IPv4 of a consul server nodes to join.", "default": "[]"}, {"name": "join_ipv4_addr_wan", "description": "An optional list of IPv4 of a consul server nodes from a different DC to join.", "default": "[]"}, {"name": "agent_tags", "description": "An optional list of tags to set on the consul agents.", "default": "[]"}, {"name": "cluster_tag_key", "description": "The tag the instances will look for to automatically discover each other and form a cluster.", "default": "\"consul-servers\""}, {"name": "cluster_tag_value", "description": "The tag value the instances will filter for to automatically discover each other and form a cluster.", "default": ""}, {"name": "ssh_public_keys", "description": "The ssh public keys that can be used to SSH to the instances in this cluster.", "default": "[]"}, {"name": "agent_mode", "description": "The agent mode of the consul nodes. Can be either `server` or `client`", "default": "\"server\""}, {"name": "metadata", "description": "A map of metadata to add to all resources supporting it.", "default": "{}"}, {"name": "post_install_modules", "description": "Setting this variable to true will assume the necessary software to boot the cluster hasn't packaged in the image and thus will be post provisionned. Defaults to `false`", "default": "true"}, {"name": "provision_remote_exec", "description": "List of inline remote commands to execute on post provisionning phase", "default": "[]"}, {"name": "ssh_user", "description": "The ssh username of the image used to boot the consul cluster.", "default": "\"core\""}, {"name": "ssh_private_key", "description": "The ssh private key used to post provision the consul cluster. This is required if `post_install_module` is set to `true`. It must be set accordingly to `ssh_key_pair", "default": "\"\""}, {"name": "ssh_bastion_host", "description": "The address of the bastion host used to post provision the consul cluster. This may be required if `post_install_module` is set to `true`", "default": "\"\""}, {"name": "ssh_bastion_user", "description": "The ssh username of the bastion host used to post provision the consul cluster. This may be required if `post_install_module` is set to `true`", "default": "\"\""}, {"name": "ssh_bastion_private_key", "description": "The ssh private key of the bastion host used to post provision the consul cluster. This may be required if `post_install_module` is set to `true`", "default": "\"\""}, {"name": "ignition_mode", "description": "Set to true if os family supports ignition, such as CoreOS/Container Linux distribution", "default": "true"}, {"name": "consul_version", "description": "The version of consul to install with the post installation script if `post_install_module` is set to true", "default": "\"1.0.2\""}, {"name": "consul_sha256sum", "description": "The sha256 checksum of the consul binary to install with the post installation script if `post_install_module` is set to true", "default": "\"418329f0f4fc3f18ef08674537b576e57df3f3026f258794b4b4b611beae6c9b\""}, {"name": "fabio_version", "description": "The version of fabio to install with the post installation script if `post_install_module` is set to true", "default": "\"1.5.3\""}, {"name": "fabio_sha256sum", "description": "The sha256 checksum of the fabio binary to install with the post installation script if `post_install_module` is set to true", "default": "\"ad352a3e770215219c57257c5dcbb14aee83aa50db32ba34431372b570aa58e5\""}, {"name": "associate_public_ipv4", "description": "Associate a public ipv4 with the consul nodes", "default": "false"}, {"name": "ip_dns_domains", "description": "Every public ipv4 addr at OVH is registered as a A record in DNS zones according to the format ip 1.2.3.4 > ip4.ip-q1-2-3.eu for EU regions or  ip4.ip-1-2-3.net for other ones. This variables maps the domain name to use according to the region.", "default": "{\n  \"BHS3\": \"net\",\n  \"DE1\": \"eu\",\n  \"GRA1\": \"eu\",\n  \"GRA3\": \"eu\",\n  \"SBG3\": \"eu\",\n  \"UK1\": \"eu\",\n  \"WAW1\": \"eu\"\n}"}, {"name": "default_ip_dns_domains", "description": "Default value for `ip_dns_domains`", "default": "\"net\""}, {"name": "cfssl", "description": "Defines if cfssl shall be started and used as a pki. If set to `true`\nand no cacert with associated private key is given as argument, cfssl will\ngenerate its own self signed ca cert.\n\nThe cfssl server is started on the first cluster node.\nIf started, consul agents watches for the cfssl service,\nand each agent gets its own tls keypair and restart.\n\nAt every consul agent restart, if tls keypair is older than 1h,\na new keypair will be fetched.\n\nAdditionally, the CA generated by cfssl if no cacert is given as argument,\nwill we publicly available on \"kv/cacerts/\". Any CA under this key prefix\nwill be installed on systems hosting a consul agent.\n(note: works only on container linux)\n", "default": "false"}]}, "kurron/archiving-s3/aws": {"name": "archiving-s3", "url": "https://registry.terraform.io/modules/kurron/archiving-s3/aws", "provider": "aws", "downloads": 37, "description": "Terraform module that creates an S3 bucket that moves objects into Glacier after a period of time", "source": "kurron/archiving-s3/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "force_destroy", "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error. These objects are not recoverable.", "default": "\"false\""}, {"name": "versioning_enabled", "description": "If true, object versioning is enabled. Once you version-enable a bucket, it can never return to an unversioned state. You can, however, suspend versioning on that bucket.", "default": "\"false\""}, {"name": "mfa_delete", "description": "If true, require MFA to either change the versioning state of the bucket or permanently delete an object version.", "default": "\"false\""}, {"name": "acceleration_status", "description": "Sets the accelerate configuration of an existing bucket. Can be Enabled or Suspended.", "default": "\"Suspended\""}, {"name": "request_payer", "description": "Specifies who should bear the cost of Amazon S3 data transfer. Can be either BucketOwner or Requester.", "default": "\"BucketOwner\""}, {"name": "abort_incomplete_multipart_upload_days", "description": "Specifies the number of days after initiating a multipart upload when the multipart upload must be completed. ", "default": "\"7\""}, {"name": "transition_days", "description": "Specifies the number of days after object creation when the transition takes effect.", "default": "\"30\""}, {"name": "storage_class", "description": "Specifies the Amazon S3 storage class to which you want the object to transition. Can be STANDARD_IA or GLACIER.", "default": "\"GLACIER\""}, {"name": "log_bucket", "description": "The name of the bucket that will receive the log objects.", "default": ""}, {"name": "acl", "description": "The canned ACL to apply.", "default": "\"private\""}]}, "silinternational/ecs-asg/aws": {"name": "ecs-asg", "url": "https://registry.terraform.io/modules/silinternational/ecs-asg/aws", "provider": "aws", "downloads": 37, "description": "Terraform Module for creating an ECS cluster and auto-scaling group that scales based on CPU or Memory reservation for the cluster.", "source": "silinternational/ecs-asg/aws", "args": [{"name": "security_groups", "description": "List of security groups to place instances into", "default": ""}, {"name": "subnet_ids", "description": "List of VPC Subnet IDs to place instances into", "default": ""}, {"name": "instance_type", "description": "See: https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instance-types.html#AvailableInstanceTypes", "default": "\"t2.micro\""}, {"name": "user_data", "description": "Bash code for inclusion as user_data on instances. By default contains minimum for registering with ECS cluster", "default": "\"false\""}, {"name": "root_volume_size", "description": "", "default": "\"8\""}, {"name": "min_size", "description": "", "default": "\"1\""}, {"name": "max_size", "description": "", "default": "\"5\""}, {"name": "health_check_type", "description": "", "default": "\"EC2\""}, {"name": "health_check_grace_period", "description": "", "default": "\"300\""}, {"name": "default_cooldown", "description": "", "default": "\"30\""}, {"name": "termination_policies", "description": "The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default.", "default": "[\n  \"Default\"\n]"}, {"name": "protect_from_scale_in", "description": "", "default": "false"}, {"name": "tags", "description": "List of maps with keys: 'key', 'value', and 'propagate_at_launch'", "default": "[\n  {\n    \"key\": \"created_by\",\n    \"propagate_at_launch\": true,\n    \"value\": \"terraform\"\n  }\n]"}, {"name": "scaling_adjustment_up", "description": "How many instances to scale up by when triggered", "default": "\"1\""}, {"name": "scaling_adjustment_down", "description": "How many instances to scale down by when triggered", "default": "\"-1\""}, {"name": "scaling_metric_name", "description": "Options: CPUReservation or MemoryReservation", "default": "\"CPUReservation\""}, {"name": "adjustment_type", "description": "Options: ChangeInCapacity, ExactCapacity, and PercentChangeInCapacity", "default": "\"ChangeInCapacity\""}, {"name": "policy_cooldown", "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start.", "default": "300"}, {"name": "evaluation_periods", "description": "The number of periods over which data is compared to the specified threshold.", "default": "\"2\""}, {"name": "alarm_period", "description": "The period in seconds over which the specified statistic is applied.", "default": "\"120\""}, {"name": "alarm_threshold_up", "description": "The value against which the specified statistic is compared.", "default": "\"100\""}, {"name": "alarm_threshold_down", "description": "The value against which the specified statistic is compared.", "default": "\"50\""}, {"name": "alarm_actions_enabled", "description": "", "default": "true"}, {"name": "cluster_name", "description": "", "default": ""}, {"name": "ecsInstanceRoleAssumeRolePolicy", "description": "", "default": "\"{\\n  \\\"Version\\\": \\\"2008-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Sid\\\": \\\"\\\",\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Principal\\\": {\\n        \\\"Service\\\": \\\"ec2.amazonaws.com\\\"\\n      },\\n      \\\"Action\\\": \\\"sts:AssumeRole\\\"\\n    }\\n  ]\\n}\\n\""}, {"name": "ecsInstancerolePolicy", "description": "", "default": "\"{\\n  \\\"Version\\\": \\\"2012-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": [\\n        \\\"ecs:CreateCluster\\\",\\n        \\\"ecs:DeregisterContainerInstance\\\",\\n        \\\"ecs:DiscoverPollEndpoint\\\",\\n        \\\"ecs:Poll\\\",\\n        \\\"ecs:RegisterContainerInstance\\\",\\n        \\\"ecs:StartTelemetrySession\\\",\\n        \\\"ecs:Submit*\\\",\\n        \\\"ecr:GetAuthorizationToken\\\",\\n        \\\"ecr:BatchCheckLayerAvailability\\\",\\n        \\\"ecr:GetDownloadUrlForLayer\\\",\\n        \\\"ecr:BatchGetImage\\\",\\n        \\\"logs:CreateLogStream\\\",\\n        \\\"logs:PutLogEvents\\\"\\n      ],\\n      \\\"Resource\\\": \\\"*\\\"\\n    }\\n  ]\\n}\\n\""}, {"name": "ecsServiceRoleAssumeRolePolicy", "description": "", "default": "\"{\\n  \\\"Version\\\": \\\"2008-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Sid\\\": \\\"\\\",\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Principal\\\": {\\n        \\\"Service\\\": \\\"ecs.amazonaws.com\\\"\\n      },\\n      \\\"Action\\\": \\\"sts:AssumeRole\\\"\\n    }\\n  ]\\n}\\n\""}, {"name": "ecsServiceRolePolicy", "description": "", "default": "\"{\\n  \\\"Version\\\": \\\"2012-10-17\\\",\\n  \\\"Statement\\\": [\\n    {\\n      \\\"Effect\\\": \\\"Allow\\\",\\n      \\\"Action\\\": [\\n        \\\"ec2:AuthorizeSecurityGroupIngress\\\",\\n        \\\"ec2:Describe*\\\",\\n        \\\"elasticloadbalancing:DeregisterInstancesFromLoadBalancer\\\",\\n        \\\"elasticloadbalancing:DeregisterTargets\\\",\\n        \\\"elasticloadbalancing:Describe*\\\",\\n        \\\"elasticloadbalancing:RegisterInstancesWithLoadBalancer\\\",\\n        \\\"elasticloadbalancing:RegisterTargets\\\"\\n      ],\\n      \\\"Resource\\\": \\\"*\\\"\\n    }\\n  ]\\n}\\n\""}]}, "cloudposse/cloudfront-cdn/aws": {"name": "cloudfront-cdn", "url": "https://registry.terraform.io/modules/cloudposse/cloudfront-cdn/aws", "provider": "aws", "downloads": 36, "description": "Terraform Module that implements a CloudFront Distribution (CDN) for a custom origin. ", "source": "cloudposse/cloudfront-cdn/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "namespace", "description": "", "default": ""}, {"name": "stage", "description": "", "default": ""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "tags", "description": "", "default": "{}"}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "enabled", "description": "", "default": "\"true\""}, {"name": "acm_certificate_arn", "description": "Existing ACM Certificate ARN", "default": "\"\""}, {"name": "aliases", "description": "", "default": "[]"}, {"name": "custom_error_response", "description": "(Optional) - List of one or more custom error response element maps", "default": "[]"}, {"name": "origin_domain_name", "description": "(Required) - The DNS domain name of your custom origin (e.g. website)", "default": "\"\""}, {"name": "origin_path", "description": "(Optional) - An optional element that causes CloudFront to request your content from a directory in your Amazon S3 bucket or your custom origin", "default": "\"\""}, {"name": "origin_http_port", "description": "(Required) - The HTTP port the custom origin listens on", "default": "\"80\""}, {"name": "origin_https_port", "description": "(Required) - The HTTPS port the custom origin listens on", "default": "\"443\""}, {"name": "origin_protocol_policy", "description": "(Required) - The origin protocol policy to apply to your origin. One of http-only, https-only, or match-viewer", "default": "\"match-viewer\""}, {"name": "origin_ssl_protocols", "description": "(Required) - The SSL/TLS protocols that you want CloudFront to use when communicating with your origin over HTTPS", "default": "[\n  \"TLSv1\",\n  \"TLSv1.1\",\n  \"TLSv1.2\"\n]"}, {"name": "origin_keepalive_timeout", "description": "(Optional) The Custom KeepAlive timeout, in seconds. By default, AWS enforces a limit of 60. But you can request an increase.", "default": "\"60\""}, {"name": "origin_read_timeout", "description": "(Optional) The Custom Read timeout, in seconds. By default, AWS enforces a limit of 60. But you can request an increase.", "default": "\"60\""}, {"name": "compress", "description": "(Optional) Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header (default: false)", "default": "\"false\""}, {"name": "is_ipv6_enabled", "description": "", "default": "\"true\""}, {"name": "default_root_object", "description": "", "default": "\"index.html\""}, {"name": "comment", "description": "", "default": "\"Managed by Terraform\""}, {"name": "log_include_cookies", "description": "", "default": "\"false\""}, {"name": "log_prefix", "description": "", "default": "\"\""}, {"name": "log_standard_transition_days", "description": "Number of days to persist in the standard storage tier before moving to the glacier tier", "default": "\"30\""}, {"name": "log_glacier_transition_days", "description": "Number of days after which to move the data to the glacier storage tier", "default": "\"60\""}, {"name": "log_expiration_days", "description": "Number of days after which to expunge the objects", "default": "\"90\""}, {"name": "forward_query_string", "description": "", "default": "\"false\""}, {"name": "forward_headers", "description": "Specifies the Headers, if any, that you want CloudFront to vary upon for this cache behavior. Specify `*` to include all headers.", "default": "[]"}, {"name": "forward_cookies", "description": "Specifies whether you want CloudFront to forward cookies to the origin. Valid options are all, none or whitelist", "default": "\"none\""}, {"name": "forward_cookies_whitelisted_names", "description": "List of forwarded cookie names", "default": "[]"}, {"name": "price_class", "description": "", "default": "\"PriceClass_100\""}, {"name": "viewer_minimum_protocol_version", "description": "(Optional) The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections.", "default": "\"TLSv1\""}, {"name": "viewer_protocol_policy", "description": "allow-all, redirect-to-https", "default": "\"redirect-to-https\""}, {"name": "allowed_methods", "description": "", "default": "[\n  \"DELETE\",\n  \"GET\",\n  \"HEAD\",\n  \"OPTIONS\",\n  \"PATCH\",\n  \"POST\",\n  \"PUT\"\n]"}, {"name": "cached_methods", "description": "", "default": "[\n  \"GET\",\n  \"HEAD\"\n]"}, {"name": "default_ttl", "description": "", "default": "\"60\""}, {"name": "min_ttl", "description": "", "default": "\"0\""}, {"name": "max_ttl", "description": "", "default": "\"31536000\""}, {"name": "geo_restriction_type", "description": "", "default": "\"none\""}, {"name": "geo_restriction_locations", "description": "", "default": "[]"}, {"name": "parent_zone_id", "description": "", "default": "\"\""}, {"name": "parent_zone_name", "description": "", "default": "\"\""}, {"name": "cache_behavior", "description": "List of cache behaviors to implement", "default": "[]"}]}, "kurron/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/kurron/vpc/aws", "provider": "aws", "downloads": 36, "description": "Opinionated Terraform module that creates a VPC with subnets in all availability zones", "source": "kurron/vpc/aws", "args": [{"name": "region", "description": "The AWS region to deploy into, e.g. us-east-1", "default": ""}, {"name": "name", "description": "Name of the VPC", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for, e.g. violet-sloth", "default": ""}, {"name": "purpose", "description": "Role or reason for the existence of these resources, e.g. network for performance testing", "default": ""}, {"name": "creator", "description": "Person creating these resources, e.g. operations@example.com", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags, e.g. request in for more EIPs", "default": ""}, {"name": "cidr_range", "description": "IP range of the network to create, e.g. 10.0.0.0/16", "default": ""}, {"name": "public_subnets", "description": "List of IP ranges for the public subnets, e.g. [10.0.2.0/24, 10.0.4.0/24]", "default": ""}, {"name": "private_subnets", "description": "List of IP ranges for the private subnets, e.g. [10.0.1.0/24, 10.0.3.0/24]", "default": ""}, {"name": "populate_all_zones", "description": "If true, all availability zones will be assigned a public and private subnet, otherwise limit creation to the subnet lists", "default": ""}]}, "samsonov90/event-driven-lambda/aws": {"name": "event-driven-lambda", "url": "https://registry.terraform.io/modules/samsonov90/event-driven-lambda/aws", "provider": "aws", "downloads": 36, "description": "This module allows to deploy AWS Lambda functions with AWS CloudWatch event rules", "source": "samsonov90/event-driven-lambda/aws", "args": [{"name": "lambda_args", "description": "Parameter sets to configure AWS Lambda used with associated Cloudwatch Events Rule", "default": ""}, {"name": "default_lambda_args", "description": "Default parameters", "default": "{}"}]}, "amancevice/slack-events/google": {"name": "slack-events", "url": "https://registry.terraform.io/modules/amancevice/slack-events/google", "provider": "google", "downloads": 36, "description": "Publish Slack events to Google Cloud Pub/Sub using Cloud Functions", "source": "amancevice/slack-events/google", "args": [{"name": "bucket_name", "description": "Cloud Storage bucket for storing Cloud Function code archives.", "default": ""}, {"name": "event_types", "description": "Pub/Sub topic names for handing events.", "default": "[]"}, {"name": "timeout", "description": "Timeout in seconds for Slack event listener.", "default": "10"}, {"name": "memory", "description": "Memory for Slack event listener.", "default": "256"}, {"name": "project", "description": "The ID of the project to apply any resources to.", "default": "\"\""}, {"name": "verification_token", "description": "Slack verification token.", "default": ""}, {"name": "description", "description": "Description of the function.", "default": "\"Slack event publisher\""}, {"name": "function_name", "description": "Cloud Function for publishing events from Slack to Pub/Sub.", "default": "\"slack-event-publisher\""}, {"name": "labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}]}, "Azure/manageddisk/azurerm": {"name": "manageddisk", "url": "https://registry.terraform.io/modules/Azure/manageddisk/azurerm", "provider": "azurerm", "downloads": 35, "description": "Terraform Azure RM Managed Disk Module ", "source": "Azure/manageddisk/azurerm", "args": [{"name": "managed_disk_name", "description": "Name of the new managed disk.", "default": "\"myManagedDisk01\""}, {"name": "resource_group_name", "description": "Name of resource group that the managed disk will be created in.", "default": "\"myapp-rg\""}, {"name": "location", "description": "The location/region where the managed disk will be created. The full list of Azure regions can be found at https://azure.microsoft.com/regions.", "default": "\"\""}, {"name": "source_uri", "description": "URI of a VHD to be imported, resulting in a new managed disk. source_uri, source_resource_id, and image_reference_id are mutually exclusive. Leave them all blank to create a new empty managed disk.", "default": "\"\""}, {"name": "source_resource_id", "description": "ID of an existing managed disk to copy, resulting in a new managed disk. source_uri, source_resource_id, and image_reference_id are mutually exclusive. Leave them all blank to create a new empty managed disk.", "default": "\"\""}, {"name": "image_reference_id", "description": "ID of a platform image to copy, resulting in a new managed disk. source_uri, source_resource_id, and image_reference_id are mutually exclusive. Leave them all blank to create a new empty managed disk.", "default": "\"\""}, {"name": "import_or_copy_os_type", "description": "If new managed disk is imported or copied, the os type contained in the source object. May be 'Linux' or 'Windows'", "default": "\"\""}, {"name": "storage_account_type", "description": "Type of storage to use for new managed disk. May be 'Standard_LRS' or 'Premium_LRS'.", "default": "\"Premium_LRS\""}, {"name": "disk_size_gb", "description": "For a new empty disk, size of the disk in gb. For a disk copy or a platform image, if provided must be >= the size of the source. Providing a 0 means disk size remains the same as the source.", "default": "0"}, {"name": "tags", "description": "The tags to associate with your managed disk.", "default": "{\n  \"tag1\": \"\",\n  \"tag2\": \"\"\n}"}]}, "terraformworld/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/terraformworld/vpc/aws", "provider": "aws", "downloads": 35, "description": "Highly configurable Terraform module which creates VPC resources on AWS", "source": "terraformworld/vpc/aws", "args": [{"name": "default_tags", "description": "Default tags which will be applied to everything", "default": "{\n  \"Terraform\": \"true\"\n}"}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "automatic_networking", "description": "Should we use automatic cidr block creation and AZ allocation", "default": "\"1\""}, {"name": "manual_azs", "description": "Manually define the AZs to use when using automatic_networking", "default": "\"0\""}, {"name": "automatic_azs", "description": "Automatically define the AZs to use when using manual networking", "default": "\"0\""}, {"name": "aws_region", "description": "The region to build in", "default": "\"eu-west-1\""}, {"name": "vpc_name", "description": "The name of the VPC", "default": ""}, {"name": "instance_tenancy", "description": "A tenancy option for instances launched into the VPC", "default": "\"default\""}, {"name": "vpc_cidr_block", "description": "VPC Cidr Block.", "default": ""}, {"name": "enable_dns_hostnames", "description": "should be true if you want to use private DNS within the VPC", "default": "\"1\""}, {"name": "enable_dns_support", "description": "should be true if you want to use private DNS within the VPC", "default": "\"1\""}, {"name": "az_limit", "description": "The number of availability zones to use", "default": "\"2\""}, {"name": "azs", "description": "A list of Availability zones in the region", "default": "[\n  \"dummy\",\n  \"dummy\",\n  \"dummy\",\n  \"dummy\",\n  \"dummy\"\n]"}, {"name": "create_private_subnets", "description": "Should we create private subnets?", "default": "\"1\""}, {"name": "private_subnets", "description": "A list of private subnets inside the VPC.", "default": "[\n  \"dummy\",\n  \"dummy\",\n  \"dummy\",\n  \"dummy\",\n  \"dummy\"\n]"}, {"name": "create_public_subnets", "description": "Should we create public subnets?", "default": "true"}, {"name": "public_subnets", "description": "A list of public subnets inside the VPC.", "default": "[\n  \"dummy\",\n  \"dummy\",\n  \"dummy\",\n  \"dummy\",\n  \"dummy\"\n]"}, {"name": "map_public_ip_on_launch", "description": "should be false if you do not want to auto-assign public IP on launch", "default": "\"0\""}, {"name": "public_propagating_vgws", "description": "A list of VGWs the public route table should propagate.", "default": "[]"}, {"name": "private_propagating_vgws", "description": "A list of VGWs the private route table should propagate.", "default": "[]"}]}, "birkoff/api-method-mock/aws": {"name": "api-method-mock", "url": "https://registry.terraform.io/modules/birkoff/api-method-mock/aws", "provider": "aws", "downloads": 35, "description": "AWS API Gateway Method MOCK (for jquery requests)", "source": "birkoff/api-method-mock/aws", "args": [{"name": "authorization", "description": "", "default": ""}, {"name": "region", "description": "", "default": ""}, {"name": "api_id", "description": "", "default": ""}, {"name": "api_resource_id", "description": "", "default": ""}, {"name": "api_resource_path", "description": "", "default": ""}, {"name": "http_method", "description": "", "default": ""}, {"name": "allow_methods", "description": "", "default": ""}]}, "amancevice/slack-interactive-components/google": {"name": "slack-interactive-components", "url": "https://registry.terraform.io/modules/amancevice/slack-interactive-components/google", "provider": "google", "downloads": 35, "description": "Slack interactive component Cloud Funtion endpoint", "source": "amancevice/slack-interactive-components/google", "args": [{"name": "callback_ids", "description": "List of Pub/Sub topic names to create.", "default": "[]"}, {"name": "description", "description": "Description of the function.", "default": "\"Slack interactive components\""}, {"name": "labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "bucket_name", "description": "Cloud Storage bucket for storing Cloud Function code archives.", "default": ""}, {"name": "project", "description": "The ID of the project to apply any resources to.", "default": "\"\""}, {"name": "verification_token", "description": "Slack verification token.", "default": ""}, {"name": "function_name", "description": "Cloud Function for publishing events from Slack to Pub/Sub.", "default": "\"slack-interactive-components\""}, {"name": "memory", "description": "Memory for Slack event listener.", "default": "256"}, {"name": "timeout", "description": "Timeout in seconds for Slack event listener.", "default": "10"}]}, "cloudposse/ansible/null": {"name": "ansible", "url": "https://registry.terraform.io/modules/cloudposse/ansible/null", "provider": "null", "downloads": 34, "description": "Terraform Module to run ansible playbooks", "source": "cloudposse/ansible/null", "args": [{"name": "arguments", "description": "", "default": "[]"}, {"name": "envs", "description": "", "default": "[]"}, {"name": "playbook", "description": "", "default": "\"\""}, {"name": "dry_run", "description": "", "default": "true"}]}, "cloudposse/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/cloudposse/rds/aws", "provider": "aws", "downloads": 34, "description": " Terraform module to provision AWS RDS instances", "source": "cloudposse/rds/aws", "args": [{"name": "stage", "description": "", "default": "\"default\""}, {"name": "namespace", "description": "", "default": "\"global\""}, {"name": "name", "description": "", "default": "\"app\""}, {"name": "dns_zone_id", "description": "", "default": ""}, {"name": "host_name", "description": "", "default": "\"db\""}, {"name": "security_group_ids", "description": "", "default": ""}, {"name": "database_name", "description": "", "default": ""}, {"name": "database_user", "description": "", "default": ""}, {"name": "database_password", "description": "", "default": ""}, {"name": "database_port", "description": "", "default": ""}, {"name": "multi_az", "description": "Set to true if multi AZ deployment must be supported", "default": "\"false\""}, {"name": "storage_type", "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD).", "default": "\"standard\""}, {"name": "storage_encrypted", "description": "(Optional) Specifies whether the DB instance is encrypted. The default is false if not specified.", "default": "\"false\""}, {"name": "iops", "description": "The amount of provisioned IOPS. Setting this implies a storage_type of 'io1'. Default is 0 if rds storage type is not 'io1'", "default": "\"0\""}, {"name": "allocated_storage", "description": "The allocated storage in GBs", "default": ""}, {"name": "engine", "description": "Database engine type", "default": ""}, {"name": "engine_version", "description": "Database engine version, depends on engine type", "default": ""}, {"name": "instance_class", "description": "Class of RDS instance", "default": ""}, {"name": "db_parameter_group", "description": "Parameter group, depends on DB engine used", "default": ""}, {"name": "publicly_accessible", "description": "Determines if database can be publicly available (NOT recommended)", "default": "\"false\""}, {"name": "subnet_ids", "description": "List of subnets for the DB", "default": ""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "auto_minor_version_upgrade", "description": "Allow automated minor version upgrade", "default": "\"true\""}, {"name": "allow_major_version_upgrade", "description": "Allow major version upgrade", "default": "\"false\""}, {"name": "apply_immediately", "description": "Specifies whether any database modifications are applied immediately, or during the next maintenance window", "default": "\"false\""}, {"name": "maintenance_window", "description": "The window to perform maintenance in. Syntax: 'ddd:hh24:mi-ddd:hh24:mi' UTC ", "default": "\"Mon:03:00-Mon:04:00\""}, {"name": "skip_final_snapshot", "description": "If true (default), no snapshot will be made before deleting DB", "default": "\"true\""}, {"name": "copy_tags_to_snapshot", "description": "Copy tags from DB to a snapshot", "default": "\"true\""}, {"name": "backup_retention_period", "description": "Backup retention period in days. Must be > 0 to enable backups", "default": "0"}, {"name": "backup_window", "description": "When AWS can perform DB snapshots, can't overlap with maintenance window", "default": "\"22:00-03:00\""}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "tags", "description": "", "default": "{}"}, {"name": "db_parameter", "description": "", "default": "[]"}, {"name": "snapshot_identifier", "description": "Snapshot name e.g: rds:production-2015-06-26-06-05", "default": "\"\""}, {"name": "final_snapshot_identifier", "description": "Identifier e.g.: some-db-final-snapshot-2015-06-26-06-05", "default": "\"\""}, {"name": "parameter_group_name", "description": "Name of the DB parameter group to associate", "default": "\"\""}]}, "kurron/iam/aws": {"name": "iam", "url": "https://registry.terraform.io/modules/kurron/iam/aws", "provider": "aws", "downloads": 34, "description": "Terraform module that creates a set of common IAM roles", "source": "kurron/iam/aws", "args": [{"name": "region", "description": "The AWS region to deploy into, e.g. us-east-1", "default": ""}, {"name": "project", "description": "Name of the project this resource is being created for, e.g. violet-sloth", "default": ""}, {"name": "environment", "description": "Context the resources will be used in, e.g. production", "default": ""}]}, "JamesBelchamber/medium-custom-domain/aws": {"name": "medium-custom-domain", "url": "https://registry.terraform.io/modules/JamesBelchamber/medium-custom-domain/aws", "provider": "aws", "downloads": 34, "description": "Easily add a Medium Custom Domain to your Route53 config.", "source": "JamesBelchamber/medium-custom-domain/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "cname_value", "description": "", "default": ""}, {"name": "cname_target", "description": "", "default": ""}, {"name": "zone_id", "description": "", "default": ""}]}, "viceIII/static-site/aws": {"name": "static-site", "url": "https://registry.terraform.io/modules/viceIII/static-site/aws", "provider": "aws", "downloads": 34, "description": "", "source": "viceIII/static-site/aws", "args": [{"name": "site_domain", "description": "", "default": ""}, {"name": "bucket_name", "description": "", "default": ""}, {"name": "ci_user", "description": "", "default": "\"\""}, {"name": "acm_certificate_arn", "description": "", "default": ""}, {"name": "bucket_acl", "description": "", "default": "\"public-read\""}, {"name": "cors_rule", "description": "", "default": "[]"}, {"name": "default_cache_behavior_min_ttl", "description": "", "default": "0"}, {"name": "default_cache_behavior_default_ttl", "description": "", "default": "300"}, {"name": "default_cache_behavior_max_ttl", "description": "", "default": "1200"}, {"name": "custom_error_response_code", "description": "", "default": "\"404\""}, {"name": "custom_not_found_response_code", "description": "", "default": "\"404\""}, {"name": "custom_not_found_response_path", "description": "", "default": "\"/404.html\""}, {"name": "custom_forbidden_response_code", "description": "", "default": "\"403\""}, {"name": "custom_forbidden_response_path", "description": "", "default": "\"/403.html\""}, {"name": "lambda_function_association", "description": "", "default": "[]"}, {"name": "forwarded_headers", "description": "", "default": "[]"}, {"name": "allowed_methods", "description": "", "default": "[\n  \"GET\",\n  \"HEAD\"\n]"}, {"name": "cached_methods", "description": "", "default": "[\n  \"GET\",\n  \"HEAD\"\n]"}, {"name": "aliases", "description": "", "default": "[]"}, {"name": "viewer_protocol_policy", "description": "", "default": "\"redirect-to-https\""}]}, "Automatic/hedwig-lambda-subscription/aws": {"name": "hedwig-lambda-subscription", "url": "https://registry.terraform.io/modules/Automatic/hedwig-lambda-subscription/aws", "provider": "aws", "downloads": 34, "description": "", "source": "Automatic/hedwig-lambda-subscription/aws", "args": [{"name": "function_arn", "description": "Lambda function ARN for the consumer", "default": ""}, {"name": "function_name", "description": "Lambda function name for the consumer", "default": ""}, {"name": "function_qualifier", "description": "Lambda function qualifier for the consumer, this may be used to trigger functions based on aliases", "default": "\"\""}, {"name": "topic", "description": "SNS ARN for the Hedwig topic", "default": ""}]}, "IGNW/jenkins/aws": {"name": "jenkins", "url": "https://registry.terraform.io/modules/IGNW/jenkins/aws", "provider": "aws", "downloads": 33, "description": "Terraform module to deploy Jenkins Master->Slave cluster on AWS.", "source": "IGNW/jenkins/aws", "args": [{"name": "name", "description": "Name to be used on all instances as prefix", "default": "\"\""}, {"name": "win_slave_count", "description": "Number of windows slave instances to launch", "default": "1"}, {"name": "linux_slave_count", "description": "Number of linux slave instances to launch", "default": "1"}, {"name": "aws_region", "description": "The AWS region to deploy into (e.g. us-east-1).", "default": "\"us-east-1\""}, {"name": "master_ami_id", "description": "ID of AMI to use for master instance(s)", "default": "\"\""}, {"name": "linux_slave_ami_id", "description": "ID of AMI to use for linux slave instance(s)", "default": "\"\""}, {"name": "win_slave_ami_id", "description": "ID of AMI to use for windows slave instance(s)", "default": "\"\""}, {"name": "instance_type_master", "description": "Instance Type to use for master instance(s)", "default": "\"t2.micro\""}, {"name": "http_port", "description": "The port to use for HTTP traffic to Jenkins", "default": "8080"}, {"name": "jnlp_port", "description": "The Port to use for Jenkins master to slave communication bewtween instances", "default": "49187"}, {"name": "instance_type_slave", "description": "Instance Type to use for slave instance(s)", "default": "\"t2.micro\""}, {"name": "ssh_key_name", "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.", "default": "\"\""}, {"name": "ssh_key_path", "description": "The path of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Used for provisioning.", "default": "\"\""}, {"name": "plugins", "description": "A list of Jenkins plugins to install, use short names.", "default": "[\n  \"git\",\n  \"xunit\"\n]"}, {"name": "tags", "description": "Supply tags you want added to all resources", "default": "{}"}]}, "GMafra/subnet/gcp": {"name": "subnet", "url": "https://registry.terraform.io/modules/GMafra/subnet/gcp", "provider": "gcp", "downloads": 33, "description": " Terraform module for creating Subnets on Google Cloud", "source": "GMafra/subnet/gcp", "args": [{"name": "name", "description": "Subnet name", "default": ""}, {"name": "vpc", "description": "VPC to link the subnet to", "default": ""}, {"name": "subnet-region", "description": "Zone associated with the subnet. Defaults to the region configured in the provider.", "default": "\"\""}, {"name": "ip_cidr_range", "description": "IP range - format 0.0.0.0/0", "default": ""}]}, "Automatic/hedwig-queue/aws": {"name": "hedwig-queue", "url": "https://registry.terraform.io/modules/Automatic/hedwig-queue/aws", "provider": "aws", "downloads": 33, "description": "", "source": "Automatic/hedwig-queue/aws", "args": [{"name": "queue", "description": "Application queue name (e.g. DEV-MYAPP); unique across your infra", "default": ""}, {"name": "aws_account_id", "description": "AWS account id", "default": ""}, {"name": "aws_region", "description": "AWS region", "default": ""}, {"name": "max_receive_count", "description": "Maximum number of receives allowed before message is moved to the dead-letter-queue", "default": "4"}, {"name": "tags", "description": "Tags to attach to the SQS queues", "default": ""}, {"name": "alerting", "description": "Should Cloudwatch alerts be generated?", "default": "\"false\""}, {"name": "queue_alarm_high_message_count_threshold", "description": "Threshold for alerting on high message count in main queue", "default": "5000"}, {"name": "queue_alarm_high_message_count_actions", "description": "Cloudwatch Action ARNs for main queue Alarm for high message count (required if alerting is on)", "default": "[]"}, {"name": "queue_ok_high_message_count_actions", "description": "Cloudwatch Action ARNs for main queue OK for high message count (required if alerting is on)", "default": "[]"}, {"name": "dlq_alarm_high_message_count_actions", "description": "Cloudwatch Action ARNs for dead-letter queue Alarm for high message count (required if alerting is on)", "default": "[]"}, {"name": "dlq_ok_high_message_count_actions", "description": "Cloudwatch Action ARNs for dead-letter queue OK for high message count (required if alerting is on)", "default": "[]"}]}, "Azure/module-test-jenkins/azurerm": {"name": "module-test-jenkins", "url": "https://registry.terraform.io/modules/Azure/module-test-jenkins/azurerm", "provider": "azurerm", "downloads": 32, "description": "The test infrastructure (Jenkins on Azure VM) to be provisioned for Terraform module testing purpose.", "source": "Azure/module-test-jenkins/azurerm", "args": [{"name": "location", "description": "The data center location where all resources will be put into.", "default": ""}, {"name": "resource_group_name", "description": "The name of the resource group which the Jenkins test farm will be created in.", "default": ""}, {"name": "virtual_network_name", "description": "The name of the virtual network connecting all resources.", "default": "\"module-test-farm-vnet\""}, {"name": "subnet_name", "description": "The name of the subnet where the Jenkins virtual machine will be put into.", "default": "\"jenkins-subnet\""}, {"name": "public_ip_name", "description": "The name of the public IP address for Jenkins virtual machine.", "default": "\"jenkins-pip\""}, {"name": "public_domain_name", "description": "The domain name of the Jenkins virtual machine (without azure subdomain).", "default": ""}, {"name": "network_security_group_name", "description": "The name of the network security group (firewall rules) for Jenkins virtual machine.", "default": "\"ssh-allow\""}, {"name": "network_interface_name", "description": "The name of the primary network interface which will be used by the Jenkins virtual machine.", "default": "\"jenkins-nic\""}, {"name": "virtual_machine_name", "description": "The name of the Jenkins virtual machine which contains the Jenkins server.", "default": "\"jenkins-vm\""}, {"name": "virtual_machine_size", "description": "The size of the Jenkins virtual machine.", "default": "\"Standard_A2_v2\""}, {"name": "virtual_machine_osdisk_name", "description": "The managed OS disk name of the Jenkins virtual machine.", "default": "\"jenkins-osdisk\""}, {"name": "virtual_machine_osdisk_type", "description": "The managed OS disk type of the Jenkins virtual machine.", "default": "\"Standard_LRS\""}, {"name": "virtual_machine_computer_name", "description": "The computer name of the Jenkins virtual machine.", "default": "\"tfmod-jenkins\""}, {"name": "admin_username", "description": "The username of the administrator of the Jenkins virtual machine.", "default": ""}, {"name": "ssh_public_key_data", "description": "The SSH public key for remote connection of the Jenkins virtual machine.", "default": ""}, {"name": "ssh_private_key_data", "description": "The SSH private key for remote connection. It is used to configure the environment after the virtual machine is created.", "default": ""}]}, "walked/usergen/aws": {"name": "usergen", "url": "https://registry.terraform.io/modules/walked/usergen/aws", "provider": "aws", "downloads": 32, "description": "Terraform module for generation of AWS user accounts with IAM policy attachments", "source": "walked/usergen/aws", "args": [{"name": "user_names", "description": "list of user names to populate in IAM", "default": ""}, {"name": "iam_policies", "description": "list of ARN IAM policies to attach to the list of users", "default": ""}, {"name": "pgp_key", "description": "pgp for encrption of the user profile password generated", "default": ""}]}, "devops-workflow/team-members/github": {"name": "team-members", "url": "https://registry.terraform.io/modules/devops-workflow/team-members/github", "provider": "github", "downloads": 32, "description": "Terraform module to manage Github team members", "source": "devops-workflow/team-members/github", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "team_id", "description": "Team ID", "default": ""}, {"name": "users", "description": "List of member user maps to manage in team", "default": ""}]}, "egarbi/static-site/aws": {"name": "static-site", "url": "https://registry.terraform.io/modules/egarbi/static-site/aws", "provider": "aws", "downloads": 30, "description": "Module to create a fully functional static site in AWS based on CloudFront and S3", "source": "egarbi/static-site/aws", "args": [{"name": "domain", "description": "", "default": ""}, {"name": "site_name", "description": "", "default": ""}, {"name": "public_dns_zone", "description": "", "default": ""}, {"name": "acm_certificate_arn", "description": "", "default": "\"\""}, {"name": "ssl_cert", "description": "", "default": "\"\""}, {"name": "error_response_code", "description": "", "default": "\"404\""}, {"name": "error_response_pagepath", "description": "", "default": "\"/404.html\""}, {"name": "web_acl_id", "description": "", "default": "\"\""}]}, "odzhu/asg/aws": {"name": "asg", "url": "https://registry.terraform.io/modules/odzhu/asg/aws", "provider": "aws", "downloads": 30, "description": "AWS Auto Scaling Terraform module", "source": "odzhu/asg/aws", "args": [{"name": "name", "description": "Name tag, e.g stack", "default": "\"stack\""}, {"name": "vpc_id", "description": "Vpc id", "default": ""}, {"name": "environment", "description": "Environment tag, e.g prod", "default": ""}, {"name": "ami", "description": "AMI for the instance", "default": ""}, {"name": "instance_profile", "description": "Instance profile for the service", "default": ""}, {"name": "subnet_ids", "description": "List of Subnets", "default": ""}, {"name": "instance_type", "description": "Instance type", "default": "\"t2.nano\""}, {"name": "admin_ssh_key", "description": "Instance key name", "default": "\"default_instance_key\""}, {"name": "user_data", "description": "", "default": ""}, {"name": "max_size", "description": "ASG max size", "default": "1"}, {"name": "min_size", "description": "ASG min size", "default": "1"}, {"name": "load_balancers", "description": "Load Balancers to attach the ASG", "default": ""}, {"name": "spot_price", "description": "Spot market price", "default": "\"0.1\""}, {"name": "management_net", "description": "Trusted management network", "default": "\"192.168.5.255/32\""}, {"name": "associate_public_ip_address", "description": "Public IP mapping True/false", "default": "\"true\""}]}, "eric-gonzales/acm-certificate/aws": {"name": "acm-certificate", "url": "https://registry.terraform.io/modules/eric-gonzales/acm-certificate/aws", "provider": "aws", "downloads": 30, "description": "Terraform module that allows users to query for AWS Certificate Manager (ACM) managed certificates by domain name", "source": "eric-gonzales/acm-certificate/aws", "args": [{"name": "domain", "description": "The domain of the certificate", "default": ""}, {"name": "statuses", "description": "The statuses of the certificate", "default": ""}, {"name": "types", "description": "The types of the certificate", "default": ""}]}, "carrete/starterkit-mirror/digitalocean": {"name": "starterkit-mirror", "url": "https://registry.terraform.io/modules/carrete/starterkit-mirror/digitalocean", "provider": "digitalocean", "downloads": 30, "description": "This is only a mirror. Please see the official repository on GitLab.", "source": "carrete/starterkit-mirror/digitalocean", "args": [{"name": "starterkit_domain", "description": "", "default": ""}, {"name": "starterkit_ssh_pubkey", "description": "", "default": ""}, {"name": "starterkit_droplet", "description": "", "default": "{\n  \"image\": \"coreos-stable\",\n  \"name\": \"starterkit\",\n  \"region\": \"ams3\",\n  \"size\": \"s-1vcpu-1gb\"\n}"}]}, "amancevice/slackbot/aws": {"name": "slackbot", "url": "https://registry.terraform.io/modules/amancevice/slackbot/aws", "provider": "aws", "downloads": 30, "description": "API Gateway+Lambda Slackbot", "source": "amancevice/slackbot/aws", "args": [{"name": "events_lambda_memory_size", "description": "Memory for Lambda function.", "default": "128"}, {"name": "kms_key_enable_key_rotation", "description": "Flag to enable/disable KMS Key rotation.", "default": "false"}, {"name": "api_name", "description": "Slackbot API name", "default": "\"slackbot\""}, {"name": "api_stage_name", "description": "Slackbot API stage.", "default": "\"v1\""}, {"name": "callbacks_lambda_description", "description": "Description of the function.", "default": "\"Slack callbacks handler\""}, {"name": "events_lambda_description", "description": "Description of the function.", "default": "\"Slack events handler\""}, {"name": "kms_key_tags", "description": "KMS Key tags.", "default": "{\n  \"deployment-tool\": \"terraform\"\n}"}, {"name": "secret_rotation_lambda_arn", "description": "ARN of Lambda with permission to rotate permission.", "default": "\"\""}, {"name": "secret_name", "description": "Name of secret.", "default": "\"\""}, {"name": "secret_recovery_window_in_days", "description": "Recovery window for secret.", "default": "30"}, {"name": "secret_rotation_rules", "description": "Rotation configuration for secret.", "default": "[]"}, {"name": "callback_ids", "description": "List of Slack callback IDs.", "default": "[]"}, {"name": "callbacks_lambda_memory_size", "description": "Memory for Lambda function.", "default": "128"}, {"name": "events_lambda_tags", "description": "A set of key/value label pairs to assign to the function.", "default": "{\n  \"deployment-tool\": \"terraform\"\n}"}, {"name": "slack_bot_access_token", "description": "Slack OAuth bot access token.", "default": ""}, {"name": "events_lambda_timeout", "description": "Timeout in seconds for Lambda function.", "default": "10"}, {"name": "kms_key_alias", "description": "KMS Key alias.", "default": "\"\""}, {"name": "role_path", "description": "Path for Slackbot role.", "default": "\"\""}, {"name": "kms_key_deletion_window_in_days", "description": "KMS key deletion window.", "default": "30"}, {"name": "slack_access_token", "description": "Slack OAuth access token.", "default": ""}, {"name": "api_endpoint_configuration", "description": "Slackbot API endpoint type.", "default": "{\n  \"types\": [\n    \"EDGE\"\n  ]\n}"}, {"name": "events_lambda_function_name", "description": "Lambda Function for publishing events from Slack to SNS.", "default": "\"slack-events\""}, {"name": "kms_key_usage", "description": "Usage of Slackbot KMS Key.", "default": "\"ENCRYPT_DECRYPT\""}, {"name": "auto_encrypt_token", "description": "Flag to automatically encrypt token.", "default": "true"}, {"name": "kms_key_is_enabled", "description": "Flag to enable/disable KMS Key.", "default": "true"}, {"name": "kms_key_name", "description": "Name of Slackbot KMS Key.", "default": "\"Slackbot key\""}, {"name": "callbacks_lambda_timeout", "description": "Timeout in seconds for Lambda function.", "default": "10"}, {"name": "event_types", "description": "List of slack event types.", "default": "[]"}, {"name": "secret_tags", "description": "Secret tags", "default": "{\n  \"deployment-tool\": \"terraform\"\n}"}, {"name": "slack_signing_secret", "description": "Slack signing secret.", "default": ""}, {"name": "api_description", "description": "Slackbot API description.", "default": "\"Slackbot REST API\""}, {"name": "callbacks_lambda_function_name", "description": "Lambda Function for publishing events from Slack to SNS.", "default": "\"slack-callbacks\""}, {"name": "callbacks_lambda_tags", "description": "A set of key/value label pairs to assign to the function.", "default": "{\n  \"deployment-tool\": \"terraform\"\n}"}]}, "Azure/encryptedmanageddisk/azurerm": {"name": "encryptedmanageddisk", "url": "https://registry.terraform.io/modules/Azure/encryptedmanageddisk/azurerm", "provider": "azurerm", "downloads": 29, "description": "Terraform Azure RM Encrypted Managed Disk Module ", "source": "Azure/encryptedmanageddisk/azurerm", "args": [{"name": "managed_disk_name", "description": "Name of the new managed disk.", "default": "\"myManagedDisk01\""}, {"name": "resource_group_name", "description": "Name of resource group that the managed disk will be created in.", "default": "\"myapp-rg\""}, {"name": "location", "description": "The location/region where the managed disk will be created. The full list of Azure regions can be found at https://azure.microsoft.com/regions.", "default": "\"\""}, {"name": "source_uri", "description": "URI of a VHD to be imported, resulting in a new managed disk. source_uri, source_resource_id, and image_reference_id are mutually exclusive. Leave them all blank to create a new empty managed disk.", "default": "\"\""}, {"name": "source_resource_id", "description": "ID of an existing managed disk to copy, resulting in a new managed disk. source_uri, source_resource_id, and image_reference_id are mutually exclusive. Leave them all blank to create a new empty managed disk.", "default": "\"\""}, {"name": "image_reference_id", "description": "ID of a platform image to copy, resulting in a new managed disk. source_uri, source_resource_id, and image_reference_id are mutually exclusive. Leave them all blank to create a new empty managed disk.", "default": "\"\""}, {"name": "import_or_copy_os_type", "description": "If new managed disk is imported or copied, the os type contained in the source object. May be 'Linux' or 'Windows'", "default": "\"\""}, {"name": "storage_account_type", "description": "Type of storage to use for new managed disk. May be 'Standard_LRS' or 'Premium_LRS'.", "default": "\"Premium_LRS\""}, {"name": "disk_size_gb", "description": "For a new empty disk, size of the disk in gb. For a disk copy or a platform image, if provided must be >= the size of the source. Providing a 0 means disk size remains the same as the source.", "default": "0"}, {"name": "keyVaultID", "description": "ID of the key vault providing secret & key for disk encryption", "default": "\"\""}, {"name": "secretURL", "description": "URL of the secret in the key vault that encrypts the disk", "default": "\"\""}, {"name": "keyURL", "description": "URL of the key to the secret in the key vault that encrypts the disk", "default": "\"\""}, {"name": "tags", "description": "The tags to associate with your managed disk.", "default": "{\n  \"tag1\": \"\",\n  \"tag2\": \"\"\n}"}]}, "kurron/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/kurron/ecs/aws", "provider": "aws", "downloads": 29, "description": "Terraform module that creates an ECS cluster, backed by Spot instances", "source": "kurron/ecs/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "instance_type", "description": "They instance type to build the instances from", "default": ""}, {"name": "instance_profile", "description": "ID of the IAM profile to associate with the instances", "default": ""}, {"name": "ssh_key_name", "description": "Name of the SSH key to install onto the instances", "default": ""}, {"name": "security_group_ids", "description": "List of security groups to apply to the instances", "default": ""}, {"name": "ebs_optimized", "description": "Boolean indicating if the instance should enable EBS optimization or not", "default": ""}, {"name": "spot_price", "description": "How much, per hour, you are willing to pay for the instances, e.g. 0.015", "default": "\"0\""}, {"name": "cluster_min_size", "description": "Minimum number of instances to maintain in the cluster, e.g. 2", "default": ""}, {"name": "cluster_max_size", "description": "Maximum number of instances to maintain in the cluster, e.g. 8", "default": ""}, {"name": "cluster_desired_size", "description": "Desired number of instances to maintain in the cluster, e.g. 4", "default": ""}, {"name": "cooldown", "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start, e.g. 30", "default": ""}, {"name": "health_check_grace_period", "description": "Time (in seconds) after instance comes into service before checking health, e.g. 300", "default": ""}, {"name": "subnet_ids", "description": "List of subnets to create the instances in, e.g. [subnet-4a33b402,subnet-ac5f72f7]", "default": ""}, {"name": "scale_up_cron", "description": "Cron expression detailing when to increase cluster capacity, e.g. 0 7 * * MON-FRI", "default": ""}, {"name": "scale_down_cron", "description": "Cron expression detailing when to decrease cluster capacity, e.g. 0 0 * * SUN-SAT", "default": ""}, {"name": "cluster_scaled_down_desired_size", "description": "Minimum number of instances to maintain in the cluster when scaled down, e.g. 2", "default": ""}, {"name": "cluster_scaled_down_min_size", "description": "Desired number of instances to maintain in the cluster when scaled down, e.g. 4", "default": ""}, {"name": "cluster_scaled_down_max_size", "description": "Maximum number of instances to maintain in the cluster when scaled down, e.g. 8", "default": ""}, {"name": "ami_regexp", "description": "Regular expression to use when looking up an AMI in the specified region", "default": ""}]}, "joshuamkite/ssh-bastion-service/aws": {"name": "ssh-bastion-service", "url": "https://registry.terraform.io/modules/joshuamkite/ssh-bastion-service/aws", "provider": "aws", "downloads": 29, "description": "Terraform plan to deploy ssh bastion as a stateless service on AWS", "source": "joshuamkite/ssh-bastion-service/aws", "args": [{"name": "vpc", "description": "ID for Virtual Private Cloud to apply security policy and deploy stack to", "default": ""}, {"name": "subnets_elb", "description": "list of subnets for load balancer", "default": "[]"}, {"name": "subnets_asg", "description": "list of subnets for autoscaling group", "default": "[]"}, {"name": "elb_idle_timeout", "description": "The time in seconds that the connection is allowed to be idle", "default": "\"300\""}, {"name": "bastion_instance_type", "description": "The virtual hardware to be used for the bastion service host", "default": "\"t2.micro\""}, {"name": "bastion_service_host_key_name", "description": "AWS ssh key *.pem to be used for ssh access to the bastion service host", "default": "\"\""}, {"name": "dns_domain", "description": "The domain used for Route53 records", "default": ""}, {"name": "bastion_allowed_iam_group", "description": "Name IAM group, members of this group will be able to ssh into bastion instances if they have provided ssh key in their profile", "default": "\"\""}, {"name": "elb_unhealthy_threshold", "description": "Unhealthy threshold for ELB", "default": "\"2\""}, {"name": "route53_zone_id", "description": "Route53 zoneId", "default": ""}, {"name": "tags", "description": "AWS tags that should be associated with created resources (except autoscaling group!)", "default": "{}"}, {"name": "elb_interval", "description": "interval for ELB health check", "default": "\"30\""}, {"name": "aws_region", "description": "", "default": ""}, {"name": "assume_role_arn", "description": "arn for role to assume in separate identity account if used", "default": "\"\""}, {"name": "asg_max", "description": "Max numbers of bastion-service hosts in ASG", "default": "\"2\""}, {"name": "asg_min", "description": "Min numbers of bastion-service hosts in ASG", "default": "\"1\""}, {"name": "asg_desired", "description": "Desired numbers of bastion-service hosts in ASG", "default": "\"1\""}, {"name": "cidr_blocks_whitelist_host", "description": "range(s) of incoming IP addresses to whitelist for the HOST", "default": "[]"}, {"name": "cidr_blocks_whitelist_service", "description": "range(s) of incoming IP addresses to whitelist for the SERVICE", "default": ""}, {"name": "environment_name", "description": "the name of the environment that we are deploying to", "default": "\"staging\""}, {"name": "elb_healthy_threshold", "description": "Healthy threshold for ELB", "default": "\"2\""}, {"name": "elb_timeout", "description": "timeout for ELB", "default": "\"3\""}, {"name": "aws_profile", "description": "", "default": ""}]}, "connect-group/ses-dashboard/aws": {"name": "ses-dashboard", "url": "https://registry.terraform.io/modules/connect-group/ses-dashboard/aws", "provider": "aws", "downloads": 29, "description": "This module will create a Deliverability Dashboard that shows information about SES Email bounces and complaints.", "source": "connect-group/ses-dashboard/aws", "args": [{"name": "unique_bucket_name", "description": "[Optional] Name of an S3 bucket to create, which will hold the dashboard files. If not specified, generated with random identifier.", "default": "\"\""}, {"name": "report_retention_days", "description": "[Optional] Number of days to retain the reports.", "default": "30"}, {"name": "queue_name", "description": "[Optional] Name of the SQS queue created by this module.", "default": "\"email-delivery-queue\""}, {"name": "email_delivery_topic_name", "description": "[Optional] Name of the SNS Topic created by this module.", "default": "\"email-delivery-topic\""}, {"name": "to_addresses", "description": "[Required] The email addresses that will receive the bounce and complaint report.", "default": ""}, {"name": "email_from_display_name", "description": "[Optional] The email sender displayed in report recipients inbox.  Useful if you have many accounts being monitored.", "default": "\"Email Delivery Dashboard\""}, {"name": "email_introduction_message", "description": "[Optional] Introduction sent with an email when we need to notify that emails have bounced.", "default": "\"\""}, {"name": "bucket_prefix", "description": "[Optional] Prefix (folder) in which to place reports.", "default": "\"\""}, {"name": "tags", "description": "[Optional] Tags to be added to resources that support tagging.", "default": "{}"}]}, "cloudposse/elasticache-redis/aws": {"name": "elasticache-redis", "url": "https://registry.terraform.io/modules/cloudposse/elasticache-redis/aws", "provider": "aws", "downloads": 27, "description": "Terraform module to provision an ElastiCache Redis Cluster", "source": "cloudposse/elasticache-redis/aws", "args": [{"name": "stage", "description": "Stage", "default": "\"default\""}, {"name": "name", "description": "Name", "default": "\"redis\""}, {"name": "maintenance_window", "description": "Maintenance window", "default": "\"wed:03:00-wed:04:00\""}, {"name": "alarm_memory_threshold_bytes", "description": "Ram threshold alarm level", "default": "\"10000000\""}, {"name": "apply_immediately", "description": "Apply changes immediately", "default": "\"true\""}, {"name": "availability_zones", "description": "Availability zone ids", "default": "\"Availability zone ids\""}, {"name": "zone_id", "description": "Route53 DNS Zone id", "default": "\"false\""}, {"name": "namespace", "description": "Namespace", "default": "\"global\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}, {"name": "vpc_id", "description": "AWS VPC id", "default": "\"REQUIRED\""}, {"name": "engine_version", "description": "Redis engine version", "default": "\"4.0.10\""}, {"name": "alarm_cpu_threshold_percent", "description": "CPU threshold alarm level", "default": "\"75\""}, {"name": "automatic_failover", "description": "Automatic failover (Not available for T1/T2 instances)", "default": "\"false\""}, {"name": "security_groups", "description": "AWS security group ids", "default": "[]"}, {"name": "cluster_size", "description": "Count of nodes in cluster", "default": "\"1\""}, {"name": "family", "description": "Redis family ", "default": "\"redis4.0\""}, {"name": "notification_topic_arn", "description": "Notification topic arn", "default": "\"10000000\""}, {"name": "attributes", "description": "Additional attributes (_e.g._ \"1\")", "default": "[]"}, {"name": "tags", "description": "Additional tags (_e.g._ map(\"BusinessUnit\",\"ABC\")", "default": "{}"}, {"name": "subnets", "description": "AWS subnet ids", "default": "[]"}, {"name": "port", "description": "Redis port", "default": "\"6379\""}, {"name": "instance_type", "description": "Elastic cache instance type", "default": "\"cache.t2.micro\""}, {"name": "alarm_actions", "description": "Alarm action list", "default": "[]"}, {"name": "delimiter", "description": "Delimiter between `name`, `namespace`, `stage` and `attributes`", "default": "\"-\""}]}, "trussworks/slack-pivotal-tracker-bot/aws": {"name": "slack-pivotal-tracker-bot", "url": "https://registry.terraform.io/modules/trussworks/slack-pivotal-tracker-bot/aws", "provider": "aws", "downloads": 27, "description": "Terraform module for deploying slack-pivotal-tracker-bot to AWS Lambda", "source": "trussworks/slack-pivotal-tracker-bot/aws", "args": [{"name": "region", "description": "AWS region", "default": "\"us-west-2\""}, {"name": "pivotal_token", "description": "API Token for accessing pivotal projects", "default": ""}, {"name": "slack_token", "description": "API token for posting Slack messages", "default": ""}, {"name": "stage_name", "description": "Stage name of API deployment, e.g. production", "default": "\"production\""}]}, "russmedia/pubsub/google": {"name": "pubsub", "url": "https://registry.terraform.io/modules/russmedia/pubsub/google", "provider": "google", "downloads": 27, "description": "Terraform module for pub/sub on Google Cloud Platform", "source": "russmedia/pubsub/google", "args": [{"name": "project", "description": "", "default": ""}, {"name": "iAm", "description": "    Map of service account used to set permissions for a topic.\"\n\n    Attributes:\n      - role  [string]\n      - email [string]\n", "default": "{\n  \"email\": \"\",\n  \"role\": \"\"\n}"}, {"name": "definition", "description": "    Attributes:\n      - name [list]\n\n      - pull [list]\n        The list of PULL subscriptions should be defined by those attributes:\n          - name\n          - deadline (optional) (default: 10)\n\n      - push [list]\n        The list of PUSH subscriptions should be defined by those attributes:\n          - name\n          - url\n          - deadline (optional) (default: 10)\n", "default": ""}, {"name": "module_depends_on", "description": "The module which should be created before Pub/Sub, required if iAm is used.", "default": "[]"}]}, "telia-oss/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/telia-oss/vpc/aws", "provider": "aws", "downloads": 27, "description": "VPC module for Terraform", "source": "telia-oss/vpc/aws", "args": [{"name": "name_prefix", "description": "A prefix used for naming resources.", "default": ""}, {"name": "cidr_block", "description": "The CIDR block for the VPC.", "default": "\"10.0.0.0/16\""}, {"name": "create_nat_gateways", "description": "If this is set to false NAT gateways (which cost $) will not be created and the private subnets will only route trafffic to the internet via the egress only gateway(no cost) - Egress only gateways only work for IPv6)", "default": "\"true\""}, {"name": "enable_dns_hostnames", "description": "A boolean flag to enable/disable DNS hostnames in the VPC.", "default": "\"false\""}, {"name": "private_subnet_count", "description": "Number of private subnets to provision (will not exceed the number of AZ's in the region).", "default": "\"0\""}, {"name": "tags", "description": "A map of tags (key-value pairs) passed to resources.", "default": "{}"}]}, "azavea/ecs-web-service/aws": {"name": "ecs-web-service", "url": "https://registry.terraform.io/modules/azavea/ecs-web-service/aws", "provider": "aws", "downloads": 26, "description": "A Terraform module to create an Amazon Web Services (AWS) EC2 Container Service (ECS) service associated with an Application Load Balancer (ALB).", "source": "azavea/ecs-web-service/aws", "args": [{"name": "vpc_id", "description": "", "default": ""}, {"name": "access_log_bucket", "description": "", "default": ""}, {"name": "access_log_prefix", "description": "", "default": ""}, {"name": "task_definition_id", "description": "", "default": ""}, {"name": "project", "description": "", "default": "\"Unknown\""}, {"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "public_subnet_ids", "description": "", "default": ""}, {"name": "deployment_min_healthy_percent", "description": "", "default": "\"100\""}, {"name": "min_count", "description": "", "default": "\"1\""}, {"name": "scale_up_cooldown_seconds", "description": "", "default": "\"300\""}, {"name": "scale_down_cooldown_seconds", "description": "", "default": "\"300\""}, {"name": "security_group_ids", "description": "", "default": "[]"}, {"name": "health_check_path", "description": "", "default": "\"/\""}, {"name": "ssl_certificate_arn", "description": "", "default": ""}, {"name": "cluster_name", "description": "", "default": ""}, {"name": "deployment_max_percent", "description": "", "default": "\"200\""}, {"name": "container_name", "description": "", "default": ""}, {"name": "container_port", "description": "", "default": ""}, {"name": "ecs_service_role_name", "description": "", "default": ""}, {"name": "name", "description": "", "default": ""}, {"name": "port", "description": "", "default": ""}, {"name": "desired_count", "description": "", "default": "\"1\""}, {"name": "max_count", "description": "", "default": "\"1\""}]}, "HopeUA/vm/azurerm": {"name": "vm", "url": "https://registry.terraform.io/modules/HopeUA/vm/azurerm", "provider": "azurerm", "downloads": 26, "description": "VM create", "source": "HopeUA/vm/azurerm", "args": [{"name": "admin", "description": "Default user with root access", "default": "{\n  \"name\": \"terraform\",\n  \"public_key\": \"\"\n}"}, {"name": "namespace", "description": "Prefix for resource names", "default": ""}, {"name": "name", "description": "Name of the service", "default": ""}, {"name": "location", "description": "Resource location. To see full list run 'az account list-locations'", "default": ""}, {"name": "cidr", "description": "", "default": "\"10.0.0.0/16\""}, {"name": "subnet", "description": "", "default": "\"10.0.1.0/24\""}, {"name": "vm_size", "description": "Size of the vm. To see full list run 'az vm list-sizes'", "default": ""}, {"name": "vm_disk_type", "description": "Storage class. Can be Standard_LRS or Premium_LRS", "default": "\"Standard_LRS\""}, {"name": "os", "description": "Disk image with preinstalled OS", "default": "{\n  \"offer\": \"CentOS\",\n  \"publisher\": \"OpenLogic\",\n  \"sku\": \"7.4\",\n  \"version\": \"latest\"\n}"}]}, "thomasbiddle/vpc-peering/aws": {"name": "vpc-peering", "url": "https://registry.terraform.io/modules/thomasbiddle/vpc-peering/aws", "provider": "aws", "downloads": 26, "description": "A Terraform module to configure a VPC Peering connection in AWS.", "source": "thomasbiddle/vpc-peering/aws", "args": [{"name": "peer_from_vpc_name", "description": "Name for the peer_from VPC.", "default": ""}, {"name": "peer_from_vpc_id", "description": "The VPC to peer from.", "default": ""}, {"name": "peer_from_route_tables", "description": "List of route tables from the peer_from VPC", "default": ""}, {"name": "peer_to_vpc_name", "description": "Name for the peer_to VPC.", "default": ""}, {"name": "peer_to_vpc_id", "description": "The VPC ID to peer to.", "default": ""}, {"name": "peer_to_route_tables", "description": "List of route tables from the peer to VPC.", "default": ""}, {"name": "auto_accept", "description": "Specify whether or not connections should be automatically accepted", "default": "\"1\""}]}, "isaaguilar/multi-account-peering/aws": {"name": "multi-account-peering", "url": "https://registry.terraform.io/modules/isaaguilar/multi-account-peering/aws", "provider": "aws", "downloads": 26, "description": "Set up a peering connection, auto accept, and add to route tables", "source": "isaaguilar/multi-account-peering/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "auto_accept_peering", "description": "", "default": "true"}, {"name": "tags", "description": "", "default": ""}, {"name": "this_vpc_id", "description": "", "default": ""}, {"name": "this_cidr_block", "description": "", "default": ""}, {"name": "this_route_table_ids", "description": "", "default": "[]"}, {"name": "peer_vpc_id", "description": "", "default": ""}, {"name": "peer_region", "description": "", "default": ""}, {"name": "peer_profile", "description": "", "default": ""}, {"name": "peer_cidr_block", "description": "", "default": ""}, {"name": "peer_route_table_ids", "description": "", "default": "[]"}]}, "mewa/lambda-alias/aws": {"name": "lambda-alias", "url": "https://registry.terraform.io/modules/mewa/lambda-alias/aws", "provider": "aws", "downloads": 26, "description": "", "source": "mewa/lambda-alias/aws", "args": [{"name": "alias", "description": "Lambda alias that will be created", "default": ""}, {"name": "function_name", "description": "function_name of Lambda which will have its alias created", "default": ""}, {"name": "function_arn", "description": "function_arn of Lambda which will have its alias created", "default": ""}, {"name": "invoke_arn", "description": "invoke_arn of Lambda which will have its alias created", "default": ""}, {"name": "function_version", "description": "Lambda version to which created alias will point", "default": ""}]}, "li0nel/single-page-application/aws": {"name": "single-page-application", "url": "https://registry.terraform.io/modules/li0nel/single-page-application/aws", "provider": "aws", "downloads": 26, "description": "Terraform module which lets you deploy SPAs on AWS using Git Push", "source": "li0nel/single-page-application/aws", "args": [{"name": "aws_region", "description": "", "default": ""}, {"name": "aws_profile", "description": "", "default": ""}, {"name": "domain_name", "description": "", "default": ""}, {"name": "stack_name", "description": "", "default": ""}]}, "anugnes/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/anugnes/bastion/aws", "provider": "aws", "downloads": 25, "description": "Terraform module to deploy a bastion host in a custom VPC", "source": "anugnes/bastion/aws", "args": [{"name": "name", "description": "Bastion host instance name", "default": "\"bastion\""}, {"name": "ami", "description": "AMI for the image to use", "default": ""}, {"name": "vpc_id", "description": "ID for the VPC you want to deploy the bastion host in", "default": ""}, {"name": "vpc_cidr", "description": "VPC CIDR blocks", "default": ""}, {"name": "public_subnet_ids", "description": "IDs for the public subnet(s) you want your bastion host to join", "default": ""}, {"name": "key_name", "description": "Name of the Key Pair to use in the host", "default": ""}, {"name": "instance_type", "description": "Bastion Instance type", "default": ""}]}, "sjones-sot/aks/azurerm": {"name": "aks", "url": "https://registry.terraform.io/modules/sjones-sot/aks/azurerm", "provider": "azurerm", "downloads": 24, "description": "Quickstart module to get Azure AKS (preview) up and running with minimal input", "source": "sjones-sot/aks/azurerm", "args": [{"name": "location", "description": "(Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.", "default": "\"westeurope\""}, {"name": "cluster_name", "description": "Name for this cluster", "default": "\"myakscluster\""}, {"name": "k8s_version", "description": "Version of Kubernetes to install on the cluster - see `az aks get-versions --location [location] for valid values`", "default": "\"1.8.7\""}, {"name": "dns_prefix", "description": "(Optional) DNS prefix specified when creating the managed cluster.", "default": "\"\""}, {"name": "sp_client_id", "description": "  Service Principal ID with permissions to manage resources in the target subscription\n  Note: this should be defined as either an environment variable or an external var-file reference and not stored with the code base\n", "default": "\"please-configure-sp-details\""}, {"name": "sp_client_secret", "description": "  Service Principal password with permissions to manage resources in the target subscription\n  Note: this should be defined as either an environment variable or an external var-file reference and not stored with the code base\n", "default": "\"000000000000000000000000000000000000000000000=\""}, {"name": "agent_prefix", "description": "DNS name prefix for the worker nodes (aka minions)", "default": "\"minion\""}, {"name": "agent_vm_sku", "description": "Azure VM SKU for the agent/worker nodes", "default": "\"Standard_DS2_v2\""}, {"name": "node_os_disk_size_gb", "description": "Size in GB of the node's OS disks (default 30)", "default": "30"}, {"name": "node_count", "description": "Number of worker nodes to create - defaults to 3", "default": "3"}, {"name": "agent_admin_user", "description": "Admin username for the first user created on the worker nodes", "default": "\"azureuser\""}, {"name": "public_key_data", "description": "Public key to install for SSH to the nodes - defaults to the running user's .ssh/id_rsa.pub file", "default": "\"\""}, {"name": "create_container_registry", "description": "Should a container registry be created with the AKS cluster (true / false)", "default": "\"false\""}, {"name": "container_registry_rg", "description": "(Optional) Name of the resource group into which the Container Registry (if used) will be created", "default": "\"\""}, {"name": "container_registry_tags", "description": "Map of tags to apply to the container registry", "default": "{}"}, {"name": "container_registry_sku", "description": "SKU for the container registry - one of Basic, Standard, Premium", "default": "\"Basic\""}, {"name": "container_registry_name", "description": "Name for the container registry - will generate one from the name of the AKS cluster if left empty", "default": "\"\""}, {"name": "nginx_deployment_name", "description": "Kubernetes deployment name for the ingress controller", "default": "\"ingress-nginx\""}, {"name": "cert_manager_deployment_name", "description": "Kubernetes deployment name for the certificate manager", "default": "\"certifcate-manager\""}, {"name": "cert_manager_helm_package", "description": "Certificate manager (LetsEncrypt implementation) - the deprecated 'kube-lego' should be used until AKS supports RBAC properly, at which time this module will be migrated to cert-manager\n", "default": "\"kube-lego\""}, {"name": "ingress_controller_namespace", "description": "Kubernetes namespace the ingress controller will be deployed into", "default": "\"default\""}, {"name": "certificate_email", "description": "(Reqiured) Email account to use for the LetsEncrypt service", "default": "\"noreply@contoso.com\""}, {"name": "lets_encypt_url", "description": "URL to use for getting certificates from LetsEncrypt - defaults to v2 Staging", "default": "\"https://acme-staging.api.letsencrypt.org/directory\""}]}, "F1ERCE/backend-s3/aws": {"name": "backend-s3", "url": "https://registry.terraform.io/modules/F1ERCE/backend-s3/aws", "provider": "aws", "downloads": 23, "description": "", "source": "F1ERCE/backend-s3/aws", "args": [{"name": "create_s3_bucket", "description": "Boolean.  If you have an S3 bucket already, use that one, else make this true and provide a name", "default": "false"}, {"name": "tf_backend_s3_bucket", "description": "Name of S3 bucket prepared to hold your terraform state(s)", "default": ""}, {"name": "s3_key", "description": "Path to your state.  Examples: dev/tf.state, prod/tf.state, dev/frontend/tf.state, dev/db-tier.tf, etc..", "default": ""}, {"name": "dynamodb_state_lock_table", "description": "table to hold state lock when updating.  You should have a distinct one for each separate TF state.", "default": ""}]}, "influxdata/influxdb/aws": {"name": "influxdb", "url": "https://registry.terraform.io/modules/influxdata/influxdb/aws", "provider": "aws", "downloads": 23, "description": "Deploys InfluxDB OSS and Enterprise to AWS", "source": "influxdata/influxdb/aws", "args": [{"name": "name", "description": "The prefix that will be applied to resources managed by this module", "default": "\"influx\""}, {"name": "ami", "description": "The AMI ID to deploy", "default": ""}, {"name": "data_instances", "description": "The number of data nodes to run", "default": ""}, {"name": "meta_instances", "description": "The number of meta nodes to run", "default": ""}, {"name": "tags", "description": "Tags to be applied to all resources managed by this module", "default": ""}, {"name": "subnet_ids", "description": "The subnet ID for servers, data-nodes will be equally distributed accross these subnets", "default": ""}, {"name": "instance_type", "description": "The AWS Instance type. For example, m2.large", "default": ""}, {"name": "vpc_id", "description": "VPC ID for instances and security groups", "default": ""}, {"name": "key_name", "description": "Key name for new hosts", "default": ""}, {"name": "zone_id", "description": "The private DNS zone to create records for hosts", "default": ""}, {"name": "data_disk_size", "description": "The size of the data disks to provision, for data nodes only", "default": "300"}, {"name": "data_disk_iops", "description": "The number of IOPs for the io1 type volume", "default": "4000"}, {"name": "security_groups", "description": "Extra security groups to apply to all hosts, useful for bastion host access", "default": "[]"}, {"name": "user_data", "description": "User data script for all instances", "default": "\"\""}, {"name": "data_disk_device_name", "description": "The name of the device to attach to the data-nodes", "default": "\"/dev/xvdh\""}, {"name": "meta_disk_device_name", "description": "The name of the device to attach to the meta-nodes", "default": "\"/dev/xvdh\""}]}, "Aplyca/elasticsearch/aws": {"name": "elasticsearch", "url": "https://registry.terraform.io/modules/Aplyca/elasticsearch/aws", "provider": "aws", "downloads": 23, "description": "Terraform AWS ElasticSearch domain", "source": "Aplyca/elasticsearch/aws", "args": [{"name": "enable_logs", "description": "Enalbe CloudWatch Logs", "default": "false"}, {"name": "name", "description": "Name prefix for all EFS resources.", "default": "\"App\""}, {"name": "azs", "description": "A list of availability zones to associate with.", "default": "[]"}, {"name": "access_sg_ids", "description": "A list of security groups Ids to grant access.", "default": "[]"}, {"name": "netnum", "description": "netnum in the cidrsubnet function.", "default": "0"}, {"name": "access_cidrs", "description": "A list of Subnets CIDR Blocks to grant access", "default": "[]"}, {"name": "tags", "description": "A mapping of tags to assign to the resource.", "default": "{}"}, {"name": "vpc_id", "description": "VPC Id where the EFS resources will be deployed.", "default": ""}, {"name": "newbits", "description": "newbits in the cidrsubnet function.", "default": "26"}, {"name": "es_version", "description": "Version", "default": "\"6.2\""}, {"name": "storage", "description": "Storage size", "default": "10"}, {"name": "type", "description": "Instance type", "default": "\"t2.small.elasticsearch\""}, {"name": "instances", "description": "Instance count", "default": "1"}]}, "amancevice/slack-slash-command/aws": {"name": "slack-slash-command", "url": "https://registry.terraform.io/modules/amancevice/slack-slash-command/aws", "provider": "aws", "downloads": 23, "description": "Generic slash command handler for Slack", "source": "amancevice/slack-slash-command/aws", "args": [{"name": "api_name", "description": "Slackbot REST API Gateway Name.", "default": ""}, {"name": "auth_users_exclude", "description": "Optional list of Slack user IDs to blacklist.", "default": "[]"}, {"name": "auth_users_permission_denied", "description": "Permission denied message for users.", "default": "{\n  \"text\": \"Sorry, you don't have permission to do that.\"\n}"}, {"name": "lambda_description", "description": "Lambda function description.", "default": "\"Slack slash command handler.\""}, {"name": "response", "description": "Slack response object.", "default": "{\n  \"text\": \"OK\"\n}"}, {"name": "slack_verification_token", "description": "Slack verification token.", "default": ""}, {"name": "response_type", "description": "Direct or dialog.", "default": "\"direct\""}, {"name": "api_parent_id", "description": "Slackbot slash commands parent resource ID.", "default": ""}, {"name": "auth_channels_include", "description": "Optional list of Slack channel IDs to whitelist.", "default": "[]"}, {"name": "auth_users_include", "description": "Optional list of Slack user IDs to whitelist.", "default": "[]"}, {"name": "auto_encrypt_tokens", "description": "Flag to automatically encrypt tokens.", "default": "true"}, {"name": "lambda_function_name", "description": "Lambda function name", "default": "\"\""}, {"name": "role_path", "description": "Path for slash command role.", "default": "\"/service-role/\""}, {"name": "api_execution_arn", "description": "Slackbot REST API Gateway deployment execution ARN.", "default": ""}, {"name": "lambda_tags", "description": "A set of key/value label pairs to assign to the function.", "default": "{\n  \"deployment-tool\": \"terraform\"\n}"}, {"name": "role_inline_policy_name", "description": "Name of inline slash command role policy.", "default": "\"\""}, {"name": "role_name", "description": "Name of role for slash command Lambdas.", "default": "\"\""}, {"name": "slack_web_api_token", "description": "Slack Web API token.", "default": ""}, {"name": "api_invoke_url", "description": "Slackbot REST API Gateway invocation URL.", "default": ""}, {"name": "auth_channels_exclude", "description": "Optional list of Slack channel IDs to blacklist.", "default": "[]"}, {"name": "auth_channels_permission_denied", "description": "Permission denied message for channels.", "default": "{\n  \"text\": \"Sorry, you can't do that in this channel.\"\n}"}, {"name": "kms_key_id", "description": "Slackbot KMS Key ID.", "default": ""}, {"name": "lambda_memory_size", "description": "Lambda function memory size.", "default": "128"}, {"name": "lambda_timeout", "description": "Lambda function timeout.", "default": "3"}, {"name": "slash_command", "description": "Name of slash command.", "default": ""}]}, "telia-oss/ssm-agent-policy/aws": {"name": "ssm-agent-policy", "url": "https://registry.terraform.io/modules/telia-oss/ssm-agent-policy/aws", "provider": "aws", "downloads": 23, "description": "An IAM policy which grants the necessary permissions to run the SSM agent.", "source": "telia-oss/ssm-agent-policy/aws", "args": [{"name": "output_bucket", "description": "Name of a bucket where the SSM agent will be allowed to write command outputs.", "default": "\"\""}, {"name": "name_prefix", "description": "A prefix used for naming resources.", "default": ""}, {"name": "role", "description": "The IAM role to attach to the policy.", "default": ""}]}, "azavea/memcached-elasticache/aws": {"name": "memcached-elasticache", "url": "https://registry.terraform.io/modules/azavea/memcached-elasticache/aws", "provider": "aws", "downloads": 22, "description": "A Terraform module to create an Amazon Web Services (AWS) Memcached ElastiCache cluster.", "source": "azavea/memcached-elasticache/aws", "args": [{"name": "project", "description": "", "default": "\"Unknown\""}, {"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "cache_identifier", "description": "", "default": ""}, {"name": "parameter_group", "description": "", "default": "\"memcached1.4\""}, {"name": "subnet_group", "description": "", "default": ""}, {"name": "maintenance_window", "description": "", "default": ""}, {"name": "desired_clusters", "description": "", "default": "\"1\""}, {"name": "instance_type", "description": "", "default": "\"cache.t2.micro\""}, {"name": "engine_version", "description": "", "default": "\"1.4.33\""}, {"name": "notification_topic_arn", "description": "", "default": ""}, {"name": "alarm_cpu_threshold_percent", "description": "", "default": "\"75\""}, {"name": "alarm_memory_threshold_bytes", "description": "", "default": "\"10000000\""}, {"name": "alarm_actions", "description": "", "default": ""}]}, "moltin/ha/rancher": {"name": "ha", "url": "https://registry.terraform.io/modules/moltin/ha/rancher", "provider": "rancher", "downloads": 22, "description": "Terraform Rancher HA cluster in AWS", "source": "moltin/ha/rancher", "args": []}, "matti/service/kontena": {"name": "service", "url": "https://registry.terraform.io/modules/matti/service/kontena", "provider": "kontena", "downloads": 22, "description": "", "source": "matti/service/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "deploy", "description": "", "default": "true"}, {"name": "name", "description": "", "default": ""}, {"name": "image", "description": "", "default": ""}, {"name": "stateful", "description": "", "default": "\"\""}, {"name": "read_only", "description": "", "default": "\"\""}, {"name": "volumes", "description": "", "default": "[]"}, {"name": "volume_froms", "description": "", "default": "[]"}, {"name": "ports", "description": "", "default": "[]"}, {"name": "envs", "description": "", "default": "[]"}, {"name": "links", "description": "", "default": "[]"}, {"name": "affinities", "description": "", "default": "[]"}, {"name": "cpus", "description": "", "default": "\"\""}, {"name": "cpu_shares", "description": "", "default": "\"\""}, {"name": "memory", "description": "", "default": "\"\""}, {"name": "memory_swap", "description": "", "default": "\"\""}, {"name": "shm_size", "description": "", "default": "\"\""}, {"name": "cmd", "description": "", "default": "\"\""}, {"name": "instances", "description": "", "default": "\"1\""}, {"name": "user", "description": "", "default": "\"\""}, {"name": "privileged", "description": "", "default": "false"}, {"name": "cap_adds", "description": "", "default": "[]"}, {"name": "cap_drops", "description": "", "default": "[]"}, {"name": "net", "description": "", "default": "\"\""}, {"name": "log_driver", "description": "", "default": "\"\""}, {"name": "log_opts", "description": "", "default": "[]"}, {"name": "deploy_strategy", "description": "", "default": "\"\""}, {"name": "deploy_wait_for_port", "description": "", "default": "\"\""}, {"name": "deploy_min_health", "description": "", "default": "\"\""}, {"name": "deploy_interval", "description": "", "default": "\"\""}, {"name": "pid", "description": "", "default": "\"\""}, {"name": "secrets", "description": "", "default": "[]"}, {"name": "health_check_uri", "description": "", "default": "\"\""}, {"name": "health_check_timeout", "description": "", "default": "\"\""}, {"name": "health_check_interval", "description": "", "default": "\"\""}, {"name": "health_check_initial_delay", "description": "", "default": "\"\""}, {"name": "health_check_port", "description": "", "default": "\"\""}, {"name": "health_check_protocol", "description": "", "default": "\"\""}, {"name": "stop_signal", "description": "", "default": "\"\""}, {"name": "stop_timeout", "description": "", "default": "\"\""}]}, "bborysenko/gke-node-pool/google": {"name": "gke-node-pool", "url": "https://registry.terraform.io/modules/bborysenko/gke-node-pool/google", "provider": "google", "downloads": 22, "description": "Terraform Module to create Google Kubernetes Engine Node Pool", "source": "bborysenko/gke-node-pool/google", "args": [{"name": "name", "description": "The name of the node pool.", "default": ""}, {"name": "zone", "description": "The zone in which the cluster resides.", "default": ""}, {"name": "cluster", "description": "The cluster name to create the node pool for.", "default": ""}, {"name": "min_node_count", "description": "Minimum number of nodes", "default": "\"1\""}, {"name": "max_node_count", "description": "Maximum number of nodes", "default": "\"1\""}, {"name": "auto_repair", "description": "Sets Auto-Repair feature. More info here: https://cloud.google.com/kubernetes-engine/docs/concepts/node-auto-repair", "default": "\"false\""}, {"name": "auto_upgrade", "description": "Sets Auto-Upgrade feature. See https://cloud.google.com/kubernetes-engine/docs/node-managament for more info.", "default": "\"false\""}, {"name": "machine_type", "description": "Google Compute Engine machine type", "default": "\"n1-standard-1\""}, {"name": "disk_size_gb", "description": "Size of the disk attached to each node", "default": "\"100\""}, {"name": "preemptible", "description": "Whether or not the underlying node VMs are preemptible", "default": "\"false\""}, {"name": "tags", "description": "Instance tags applied to all nodes to identify valid sources or targets for network firewalls.", "default": "[]"}, {"name": "labels", "description": "The Kubernetes labels (key/value pairs) to be applied to each node", "default": "{}"}, {"name": "taint", "description": "Kubernetes taints to apply to each node", "default": "[]"}]}, "vinaynb/ec2-test/aws": {"name": "ec2-test", "url": "https://registry.terraform.io/modules/vinaynb/ec2-test/aws", "provider": "aws", "downloads": 22, "description": "Testing terraform registry. Provision fleet of EC2 instances distributed across subnets", "source": "vinaynb/ec2-test/aws", "args": [{"name": "instance_type", "description": "Type of EC2 instance", "default": "\"t2.nano\""}, {"name": "ami", "description": "AMI used to provision", "default": ""}, {"name": "subnet_id", "description": "Subnet to provision this ec2", "default": ""}]}, "traveloka/codebuild-traveloka-backend-release/aws": {"name": "codebuild-traveloka-backend-release", "url": "https://registry.terraform.io/modules/traveloka/codebuild-traveloka-backend-release/aws", "provider": "aws", "downloads": 21, "description": "A Terraform module which provisions a CodeBuild project for traveloka's java builds", "source": "traveloka/codebuild-traveloka-backend-release/aws", "args": [{"name": "product_domain", "description": "The owner of the service", "default": ""}, {"name": "description", "description": "Description for this build project", "default": ""}, {"name": "pre_build_commands", "description": "Commands for the pre_build phase", "default": "[]"}, {"name": "compute_type", "description": "The builder instance class", "default": "\"BUILD_GENERAL1_LARGE\""}, {"name": "image", "description": "The image that CodeBuild will use to execute the build steps", "default": "\"traveloka/codebuild-openjdk:latest\""}, {"name": "name", "description": "The project name. If unspecified, this will be <service_name>-release-build", "default": "\"\""}, {"name": "post_build_commands", "description": "Commands for the post_build phase", "default": "[]"}, {"name": "source_repository_url", "description": "The source repository URL", "default": ""}, {"name": "timeout", "description": "The build timeout after which project will be stopped and considered to be failed", "default": "60"}, {"name": "additional_policies", "description": "Additional policies in JSONs to be given to the build project's role", "default": "[]"}, {"name": "build_commands", "description": "Commands for the build phase", "default": ""}, {"name": "cache_bucket", "description": "An S3 bucket to store build caches (in <cache_bucket>/<codebuild_project_name>/ path) to", "default": "\"\""}, {"name": "git_clone_depth", "description": "The history depth with which the repository will be cloned. Setting this to 0 means full clone", "default": "1"}, {"name": "service_name", "description": "The service name that will be released", "default": ""}, {"name": "source_type", "description": "The type of repository that contains the source code to be built. See https://www.terraform.io/docs/providers/aws/r/codebuild_project.html#type-3", "default": "\"GITHUB\""}]}, "Chhed13/sns-to-slack/aws": {"name": "sns-to-slack", "url": "https://registry.terraform.io/modules/Chhed13/sns-to-slack/aws", "provider": "aws", "downloads": 20, "description": "", "source": "Chhed13/sns-to-slack/aws", "args": [{"name": "name", "description": "name of lambda and SNS topic (suffix will be added to waranty uniqness)", "default": ""}, {"name": "webhook_path", "description": "web_hook path where to post messages", "default": ""}, {"name": "account_number", "description": "account on which you run. Needed for policy creation", "default": ""}, {"name": "notify_channel", "description": "slack channel in which all notifications will be posted", "default": ""}, {"name": "error_channel", "description": "slack channel in which only error notifications will be posted", "default": "\"\""}, {"name": "username", "description": "user name under which messeges will be posted", "default": "\"AWS Bot\""}, {"name": "icon_emoji", "description": "user icon from emoji list to show", "default": "\":aws:\""}]}, "Smartbrood/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/Smartbrood/efs/aws", "provider": "aws", "downloads": 20, "description": "Terraform module to create EFS volume and mount targets", "source": "Smartbrood/efs/aws", "args": [{"name": "performance_mode", "description": "The file system performance mode.", "default": "\"generalPurpose\""}, {"name": "tags", "description": "A mapping of tags.", "default": "{\n  \"Terraform\": \"true\"\n}"}, {"name": "private_subnet_a", "description": "The ID of private subnet in zone a.", "default": "\"\""}, {"name": "private_subnet_b", "description": "The ID of private subnet in zone b.", "default": "\"\""}, {"name": "private_subnet_c", "description": "The ID of private subnet in zone c.", "default": "\"\""}]}, "sjones-sot/database-for-postgres/azurerm": {"name": "database-for-postgres", "url": "https://registry.terraform.io/modules/sjones-sot/database-for-postgres/azurerm", "provider": "azurerm", "downloads": 20, "description": "Terraform module for creation of a Azure Database for Postgres", "source": "sjones-sot/database-for-postgres/azurerm", "args": [{"name": "location", "description": "(Required) Azure location string - see 'az account list-locations' output for valid strings", "default": ""}, {"name": "service_name", "description": "(Required) Service this resource belongs to", "default": ""}, {"name": "environment", "description": "(Optional) The working environment this resouce belongs to", "default": "\"development\""}, {"name": "resource_group_name", "description": "(Optional) Name of the resource group to place the database into. Optional and will create it's own if omitted", "default": "\"\""}, {"name": "db_admin_username", "description": "(Optional) Username for the database admin user", "default": "\"pgadmin\""}, {"name": "db_admin_password", "description": "(Required) Password for the database admin user", "default": ""}, {"name": "azure_postgres_sku_tier", "description": "(Required) Azure SKU tier reference for the DB (Preview - Basic and Standard available)", "default": "\"Standard\""}, {"name": "sku_compute_units", "description": "(Required) Azure compute units. 100 ~= 1 core. Default 100", "default": "100"}, {"name": "db_disk_size_mb", "description": "(Required) Size of the DB storage in MB - allowed values (basic) 51200, 179200, 307200. 435200 / (Standard) 128000, 256000, 384000 etc...", "default": "128000"}, {"name": "postgres_version", "description": "(Required) Version of postgres to use.  Currently 9.5 and 9.6 supported. Defaults to 9.6", "default": "\"9.6\""}, {"name": "enforce_ssl", "description": "(Optional) Should the server enforce SSL on connections to the database. Defaults to Enabled", "default": "\"Enabled\""}]}, "brantburnett/autoscaling-route53-srv/aws": {"name": "autoscaling-route53-srv", "url": "https://registry.terraform.io/modules/brantburnett/autoscaling-route53-srv/aws", "provider": "aws", "downloads": 20, "description": "Manages a Route 53 DNS SRV record to refer to all servers in a set of auto scaling groups", "source": "brantburnett/autoscaling-route53-srv/aws", "args": [{"name": "function_name", "description": "Unique function name for the Lambda function.", "default": ""}, {"name": "hosted_zone_id", "description": "Hosted zone ID of the DNS SRV record.", "default": ""}, {"name": "domain_name", "description": "Domain name of the service.  Defaults to the domain name of the hosted zone.", "default": "\"\""}, {"name": "topology", "description": "'private' to use private DNS names of the instances, 'public' to use public DNS names.  Defaults to 'private'.", "default": "\"private\""}, {"name": "autoscaling_group_names", "description": "Names of the autoscaling groups to monitor and register in the DNS SRV record.", "default": ""}, {"name": "service_name", "description": "Name of the service used to build the DNS entry.  Do not include the leading underscore.", "default": ""}, {"name": "service_protocol", "description": "Name of the protocol used to build the DNS entry (i.e. 'tcp').  Do not include the leading underscore.", "default": "\"tcp\""}, {"name": "service_port", "description": "Port number of the service.", "default": ""}, {"name": "iam_role_arn", "description": "Optional IAM role for the Lambda function, one will be created if blank.", "default": "\"\""}, {"name": "tags", "description": "Optional tags to apply to the Lambda function.", "default": "{}"}]}, "Automatic/taskhawk-lambda/aws": {"name": "taskhawk-lambda", "url": "https://registry.terraform.io/modules/Automatic/taskhawk-lambda/aws", "provider": "aws", "downloads": 20, "description": "", "source": "Automatic/taskhawk-lambda/aws", "args": [{"name": "name", "description": "Application name (e.g. DEV-MYAPP); unique across your infra", "default": ""}, {"name": "function_arn", "description": "Lambda function ARN for the worker app", "default": ""}, {"name": "function_name", "description": "Lambda function name for the worker app", "default": ""}, {"name": "function_qualifier", "description": "Lambda function qualifier for the worker app, this may be used to trigger functions based on aliases", "default": "\"\""}, {"name": "aws_region", "description": "AWS Region (required if enable_scheduler is true)", "default": "\"\""}, {"name": "aws_account_id", "description": "AWS Account ID (required if enable_scheduler is true)", "default": "\"\""}, {"name": "enable_scheduler", "description": "Should Taskhawk scheduler be enabled?", "default": "false"}]}, "amancevice/slackbot-sns/aws": {"name": "slackbot-sns", "url": "https://registry.terraform.io/modules/amancevice/slackbot-sns/aws", "provider": "aws", "downloads": 20, "description": "Forward messages sent to SNS through your Slack bot", "source": "amancevice/slackbot-sns/aws", "args": []}, "kurron/security-groups/aws": {"name": "security-groups", "url": "https://registry.terraform.io/modules/kurron/security-groups/aws", "provider": "aws", "downloads": 19, "description": "Terraform module that creates a set of common security groups", "source": "kurron/security-groups/aws", "args": [{"name": "region", "description": "The AWS region to deploy into, e.g. us-east-1", "default": ""}, {"name": "vpc_id", "description": "ID of the VPC to associate the created resources to", "default": ""}, {"name": "vpc_cidr", "description": "Network CIDR of the VPC to allow traffic to.", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for, e.g. violet-sloth", "default": ""}, {"name": "creator", "description": "Person creating these resources, e.g. operations@example.com", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags, e.g. end-of-life 12/31/2021", "default": ""}, {"name": "bastion_ingress_cidr_blocks", "description": "IP ranges to allows inbound SSH access to, e.g. [98.216.147.13/32]", "default": ""}, {"name": "mysql_port_number", "description": "Port to allow for communicating with MySQL, e.g. 3306", "default": "\"3306\""}, {"name": "redis_port_number", "description": "Port to allow for communicating with Redis, e.g. 6379", "default": "\"6379\""}]}, "anonymint/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/anonymint/ecs-service/aws", "provider": "aws", "downloads": 19, "description": "Terraform module to create ECS service and tasks running multiple containers per instances with dynamic ports and surface via ALB", "source": "anonymint/ecs-service/aws", "args": [{"name": "service_name", "description": "The name of the service", "default": ""}, {"name": "ecs_cluster_id", "description": "ARN of an ECS cluster", "default": ""}, {"name": "ecs_service_role_arn", "description": " The ARN of IAM role that allows your Amazon ECS container agent to make calls to your load balancer on your behalf.", "default": ""}, {"name": "container_definition", "description": "A list of valid container definitions provided as a single valid JSON document.", "default": ""}, {"name": "placement_constraints", "description": "", "default": "[\n  {\n    \"type\": \"distinctInstance\"\n  }\n]"}, {"name": "placement_strategies", "description": "", "default": "[\n  {\n    \"field\": \"attribute:ecs.availability-zone\",\n    \"type\": \"spread\"\n  }\n]"}, {"name": "vpc_id", "description": "The identifier of the VPC in which to create the ALB target group.", "default": ""}, {"name": "security_groups", "description": "A list of security group IDs to assign to the ALB", "default": ""}, {"name": "subnet_ids", "description": "A list of subnet IDs to attach to the ALB, it has to be on different AZ at least", "default": ""}, {"name": "alb_port", "description": "Default exposed port of ALB", "default": "80"}, {"name": "container_name", "description": "The name of the container to associate with the load balancer (as it appears in a container definition).", "default": ""}, {"name": "container_port", "description": "The port on the container to associate with the load balancer.", "default": ""}, {"name": "container_count", "description": "The number of task running", "default": "2"}]}, "GMafra/vpc/gcp": {"name": "vpc", "url": "https://registry.terraform.io/modules/GMafra/vpc/gcp", "provider": "gcp", "downloads": 19, "description": "Terraform module for creating VPCs on Google Cloud", "source": "GMafra/vpc/gcp", "args": [{"name": "name", "description": "VPC Name", "default": ""}, {"name": "auto_create_subnetworks", "description": "false = creates custom VPC, true = automatically creates subnets in each region", "default": "\"false\""}]}, "anugnes/ecs-scalable-cluster/aws": {"name": "ecs-scalable-cluster", "url": "https://registry.terraform.io/modules/anugnes/ecs-scalable-cluster/aws", "provider": "aws", "downloads": 18, "description": "Terraform module to deploy an Amazon ECS cluster using autoscaling groups", "source": "anugnes/ecs-scalable-cluster/aws", "args": [{"name": "cluster_name", "description": "The name of your ECS cluster", "default": ""}, {"name": "role_name", "description": "Role Name", "default": ""}, {"name": "role_policy_name", "description": "Role Policy Name", "default": ""}, {"name": "instance_profile_name", "description": "EC2 Instance Profile Name", "default": ""}, {"name": "type", "description": "EC2 Instance Type", "default": ""}, {"name": "cluster_max_size", "description": "Max number of EC2 instances in the cluster", "default": ""}, {"name": "cluster_min_size", "description": "Min number of EC2 instances in the cluster", "default": ""}, {"name": "subnet_id", "description": "List of subnet IDs to use when spinning up your cluster", "default": ""}, {"name": "key_name", "description": "AWS Key Pair to use for instances in the cluster", "default": ""}, {"name": "vpc_id", "description": "This is the ID of the VPC you want to use", "default": ""}]}, "kurron/batch-job-trigger/aws": {"name": "batch-job-trigger", "url": "https://registry.terraform.io/modules/kurron/batch-job-trigger/aws", "provider": "aws", "downloads": 18, "description": "A Terraform module that combines a CloudWatch Event with a Python Lamba that issues a POST request on a schedule.", "source": "kurron/batch-job-trigger/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "Role the resource will play in the system", "default": ""}, {"name": "creator", "description": "Person creating the resources", "default": ""}, {"name": "environment", "description": "Context the resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "trigger_cron_expression", "description": "Cron expression describing when the trigger should be fired", "default": ""}, {"name": "role_arn", "description": "ARN of the role that has rights to make HTTP calls", "default": ""}, {"name": "api_key", "description": "API Key to specify in the x-api-key header", "default": ""}, {"name": "endpoint", "description": "URL to POST to, triggering the batch job", "default": ""}]}, "cloudposse/tfstate-backend/aws": {"name": "tfstate-backend", "url": "https://registry.terraform.io/modules/cloudposse/tfstate-backend/aws", "provider": "aws", "downloads": 18, "description": "Provision an S3 bucket to store terraform.tfstate file and a DynamoDB table to lock the state file to prevent concurrent modifications and state corruption", "source": "cloudposse/tfstate-backend/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": "\"terraform\""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `state`)", "default": "[\n  \"state\"\n]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "region", "description": "AWS Region the S3 bucket should reside in", "default": ""}, {"name": "acl", "description": "The canned ACL to apply to the S3 bucket", "default": "\"private\""}, {"name": "read_capacity", "description": "DynamoDB read capacity units", "default": "5"}, {"name": "write_capacity", "description": "DynamoDB write capacity units", "default": "5"}, {"name": "force_destroy", "description": "A boolean that indicates the S3 bucket can be destroyed even if it contains objects. These objects are not recoverable", "default": "\"false\""}, {"name": "enable_server_side_encryption", "description": "Enable DynamoDB server-side encryption", "default": "\"true\""}]}, "tasdikrahman/network-firewall/google": {"name": "network-firewall", "url": "https://registry.terraform.io/modules/tasdikrahman/network-firewall/google", "provider": "google", "downloads": 17, "description": "Terraform module : GCP : for creation of firewall rules inside the VPC", "source": "tasdikrahman/network-firewall/google", "args": [{"name": "name", "description": "A unique name for the resource, required by GCE", "default": ""}, {"name": "network", "description": "The name of the network to attach this firewall to", "default": ""}, {"name": "protocol", "description": "The name of the protocol to allow", "default": ""}, {"name": "ports", "description": "List of ports and/or port ranges to allow. This can only be specified if the protocol is TCP or UDP", "default": ""}, {"name": "source_ranges", "description": "A list of source CIDR ranges that this firewall applies to. Can't be used for EGRESS", "default": ""}]}, "npalm/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/npalm/ecs-service/aws", "provider": "aws", "downloads": 17, "description": "Terraform module to create ECS / FARGATE services", "source": "npalm/ecs-service/aws", "args": [{"name": "vpc_id", "description": "ID of the VPC.", "default": ""}, {"name": "vpc_cidr", "description": "CIDR for the VPC.", "default": ""}, {"name": "environment", "description": "Logical name of the environment, will be used as prefix and in tags.", "default": ""}, {"name": "lb_subnetids", "description": "List of subnets to which the load balancer needs to be attached. Mandatory when enable_lb = true.", "default": "[]"}, {"name": "task_role_arn", "description": "The AWS IAM role that will be provided to the task to perform AWS actions.", "default": "\"\""}, {"name": "ecs_cluster_id", "description": "The id of the ECS cluster", "default": ""}, {"name": "task_network_mode", "description": "The network mode to be used in the task definiton. Supported modes are awsvpc and bridge.", "default": "\"awsvpc\""}, {"name": "service_name", "description": "Logical name of the service.", "default": ""}, {"name": "lb_target_group", "description": "The target group to connectect the container to the load balancer listerner.", "default": "{\n  \"container_port\": 8080,\n  \"host_port\": 80,\n  \"protocol\": \"http\"\n}"}, {"name": "lb_listener", "description": "The listner for the load balancer, SSL in only applied once a certificate arn is provided.", "default": "{\n  \"certificate_arn\": \"\",\n  \"port\": \"80\",\n  \"ssl_policy\": \"ELBSecurityPolicy-TLS-1-1-2017-01\"\n}"}, {"name": "awsvpc_service_security_groups", "description": "List of security groups to be attached to service running in awsvpc network mode.", "default": "[]"}, {"name": "awsvpc_service_subnetids", "description": "List of subnet ids to which a service is deployed in fargate mode.", "default": "[]"}, {"name": "lb_internal", "description": "Indicates if the load balancer should be internal or external.", "default": "\"true\""}, {"name": "task_definition", "description": "The AWS task definition of the containers to be created.", "default": ""}, {"name": "service_desired_count", "description": "The number of services that needs to be created.", "default": "\"1\""}, {"name": "lb_health_check", "description": "A health check block for the load balancer, see https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html more for details.", "default": "[\n  {}\n]"}, {"name": "awsvpc_task_execution_role_arn", "description": "The role arn used for task execution. Required for network mode awsvpc.", "default": "\"\""}, {"name": "service_launch_type", "description": "The launch type, can be EC2 or FARGATE.", "default": "\"EC2\""}, {"name": "task_cpu", "description": "CPU value for the task, required for FARGATE.", "default": "\"\""}, {"name": "task_memory", "description": "Memory value for the task, required for FARGATE.", "default": "\"\""}, {"name": "enable_lb", "description": "Enable or disable the load balancer.", "default": "true"}, {"name": "ecs_service_role", "description": "", "default": "\"\""}]}, "brantburnett/couchbase/aws": {"name": "couchbase", "url": "https://registry.terraform.io/modules/brantburnett/couchbase/aws", "provider": "aws", "downloads": 17, "description": "Creates a complete Couchbase cluster in AWS, with support for Multidimensional Scaling", "source": "brantburnett/couchbase/aws", "args": [{"name": "cluster_name", "description": "Cluster name, only used when bootstrapping a new cluster", "default": ""}, {"name": "cluster_admin_username", "description": "Cluster administrator user name for bootstrapping", "default": "\"Administrator\""}, {"name": "cluster_admin_password", "description": "Cluster administrator password for bootstrapping", "default": ""}, {"name": "cluster_index_storage", "description": "Index storage method for the cluster, used only on the primary bootstrap node (i.e. `default` or `memopt`", "default": "\"default\""}, {"name": "cluster_ram_size", "description": "RAM size in MB for the each service, used only on the primary bootstrap node", "default": "{\n  \"data\": 10000,\n  \"fts\": 10000,\n  \"index\": 10000\n}"}, {"name": "installer_url", "description": "URL for installer to download and install on each instance, uses default if blank", "default": "\"\""}, {"name": "couchbase_version", "description": "If installer_url is blank, use this version of Couchbase", "default": ""}, {"name": "couchbase_edition", "description": "If installer_url is blank, use this edition of Couchbase ('enterprise' or 'community')", "default": "\"community\""}, {"name": "auto_rebalance", "description": "If true, automatically performs a rebalance as soon as nodes are added to the cluster.  This may not be desirable in large production clusters.", "default": "true"}, {"name": "key_pair_name", "description": "EC2 key pair for creating the instance", "default": ""}, {"name": "ami", "description": "ID of the AMI to use, or blank to auto select", "default": "\"\""}, {"name": "apply_updates", "description": "If true, yum updates are applied during the first boot", "default": "true"}, {"name": "subnet_ids", "description": "List of subnets the nodes will be created within", "default": ""}, {"name": "security_group_ids", "description": "List of additional security groups to assign.  This is in addition to the automatically created security groups.", "default": "[]"}, {"name": "topology", "description": "Indicates if the cluster is using public or private hostnames.  Must be either 'public' or 'private'.", "default": "\"private\""}, {"name": "iam_instance_profile", "description": "IAM instance profile to apply IAM roles.  If missing, a new role will be created instead.  The profile must include certain rights, consult README.md.", "default": "\"\""}, {"name": "termination_protection", "description": "If true, prevents accidental termination", "default": "false"}, {"name": "detailed_monitoring", "description": "If true, turns on detailed CloudWatch monitoring (additional cost)", "default": "false"}, {"name": "placement_tenancy", "description": "Indicates instance host tenancy, 'default' or 'dedicated'", "default": "\"default\""}, {"name": "boot_volume", "description": "Configuration of the boot volume", "default": "{\n  \"volume_size\": \"30\",\n  \"volume_type\": \"gp2\"\n}"}, {"name": "client_security_group_ids", "description": "List of security group IDs to receive client-to-node access", "default": "[]"}, {"name": "client_cidr_blocks", "description": "List of CIDR blocks to receive client-to-node access", "default": "[]"}, {"name": "group_name", "description": "Name of each MDS group", "default": "{}"}, {"name": "node_count", "description": "Default number of nodes for each MDS group", "default": "{\n  \"1\": 1\n}"}, {"name": "tags", "description": "Tags for each autoscaling group and EC2 instances.  Each MDS group has a list of maps with `key`, `value`, and `propogate_at_launch` entries.", "default": "{\n  \"1\": []\n}"}, {"name": "services", "description": "List of node services (data, index, query, fts) for each MDS group", "default": "{\n  \"1\": [\n    \"data\",\n    \"index\",\n    \"query\",\n    \"fts\"\n  ]\n}"}, {"name": "instance_type", "description": "Instance type for each MDS group, such as 'm4.xlarge'", "default": "{\n  \"1\": \"m4.xlarge\"\n}"}, {"name": "data_volume", "description": "Configuration of the data volume for each MDS group", "default": "{\n  \"1\": [\n    {\n      \"volume_size\": \"300\",\n      \"volume_type\": \"gp2\"\n    }\n  ]\n}"}, {"name": "ebs_optimized", "description": "For each MDS group, creates an EBS optimized instance if true.", "default": "{\n  \"1\": true\n}"}, {"name": "additional_initialization_script", "description": "Additional Bash script to run after the node is initialized for each MDS group.", "default": "{\n  \"1\": \"\"\n}"}]}, "neillturner/lambda-scheduler/aws": {"name": "lambda-scheduler", "url": "https://registry.terraform.io/modules/neillturner/lambda-scheduler/aws", "provider": "aws", "downloads": 17, "description": "Stop and start EC2 and RDS instances according to schedule via lambda and terraform", "source": "neillturner/lambda-scheduler/aws", "args": [{"name": "schedule_expression", "description": "the aws cloudwatch event rule scheule expression that specifies when the scheduler runs. Default is 5 minuts past the hour. for debugging use 'rate(5 minutes)'. See https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html", "default": "\"cron(5 * * * ? *)\""}, {"name": "tag", "description": "the tag name used on the EC2 or RDS instance to contain the schedule json string for the instance.", "default": "\"schedule\""}, {"name": "schedule_tag_force", "description": "Whether to force the EC2 or RDS instance to have the default schedule tag is no schedule tag exists for the instance.", "default": "\"false\""}, {"name": "exclude", "description": "common separated list of EC2 and RDS instance ids to exclude from scheduling.", "default": "\"\""}, {"name": "default", "description": "the default schedule tag containing json schedule information to add to instance when schedule_tag_force set to true.", "default": "\"{\\\"mon\\\": {\\\"start\\\": 7, \\\"stop\\\": 20},\\\"tue\\\": {\\\"start\\\": 7, \\\"stop\\\": 20},\\\"wed\\\": {\\\"start\\\": 7, \\\"stop\\\": 20},\\\"thu\\\": {\\\"start\\\": 7, \\\"stop\\\": 20}, \\\"fri\\\": {\\\"start\\\": 7, \\\"stop\\\": 20}}\""}, {"name": "time", "description": "timezone to use for scheduler. Can be 'local' or 'gmt'. Default is gmt. local time is for the AWS region.", "default": "\"gmt\""}, {"name": "ec2_schedule", "description": "Whether to do scheduling for EC2 instances.", "default": "\"true\""}, {"name": "rds_schedule", "description": "Whether to do scheduling for RDS instances.", "default": "\"true\""}, {"name": "security_group_ids", "description": "list of the vpc security groups to run lambda scheduler in.", "default": "[]"}, {"name": "subnet_ids", "description": "list of subnet_ids that the scheduler runs in.", "default": "[]"}]}, "kickin6/network-peering-full/google": {"name": "network-peering-full", "url": "https://registry.terraform.io/modules/kickin6/network-peering-full/google", "provider": "google", "downloads": 17, "description": "Modular Network Peering Two Projects on Google Compute Engine for Terraform.", "source": "kickin6/network-peering-full/google", "args": [{"name": "peering_name", "description": "Peering connection name", "default": "\"peer1\""}, {"name": "peer1_network", "description": "Resource link of network #1.", "default": "\"\""}, {"name": "peer2_network", "description": "Resource link of network #2.", "default": "\"\""}, {"name": "auto_create_routes", "description": "If set to true, the routes between the two networks will be created and managed automatically.", "default": "\"true\""}]}, "terraform-aws-modules/atlantis/aws": {"name": "atlantis", "url": "https://registry.terraform.io/modules/terraform-aws-modules/atlantis/aws", "provider": "aws", "downloads": 17, "description": "Terraform configurations for running Atlantis on AWS Fargate", "source": "terraform-aws-modules/atlantis/aws", "args": [{"name": "vpc_id", "description": "ID of an existing VPC where resources will be created", "default": "\"\""}, {"name": "azs", "description": "A list of availability zones in the region", "default": "[]"}, {"name": "public_subnets", "description": "A list of public subnets inside the VPC", "default": "[]"}, {"name": "acm_certificate_domain_name", "description": "Route53 domain name to use for ACM certificate. Route53 zone for this domain should be created in advance. Specify if it is different from value in `route53_zone_name`", "default": "\"\""}, {"name": "atlantis_github_user_token", "description": "GitHub token of the user that is running the Atlantis command", "default": ""}, {"name": "atlantis_repo_whitelist", "description": "List of allowed repositories Atlantis can be used with", "default": ""}, {"name": "name", "description": "Name to use on all resources created (VPC, ALB, etc)", "default": "\"atlantis\""}, {"name": "certificate_arn", "description": "ARN of certificate issued by AWS ACM. If empty, a new ACM certificate will be created and validated using Route53 DNS", "default": "\"\""}, {"name": "cloudwatch_log_retention_in_days", "description": "Retention period of Atlantis CloudWatch logs", "default": "7"}, {"name": "private_subnets", "description": "A list of private subnets inside the VPC", "default": "[]"}, {"name": "route53_zone_name", "description": "Route53 zone name to create ACM certificate in and main A-record", "default": "\"\""}, {"name": "atlantis_version", "description": "Verion of Atlantis to run. If not specified latest will be used", "default": "\"latest\""}, {"name": "atlantis_github_user", "description": "GitHub username of the user that is running the Atlantis command", "default": ""}, {"name": "github_token", "description": "Github token", "default": "\"\""}, {"name": "github_repo_names", "description": "Github repositories where webhook should be created", "default": "[]"}, {"name": "public_subnet_ids", "description": "A list of IDs of existing public subnets inside the VPC", "default": "[]"}, {"name": "private_subnet_ids", "description": "A list of IDs of existing private subnets inside the VPC", "default": "[]"}, {"name": "cidr", "description": "The CIDR block for the VPC which will be created if `vpc_id` is not specified", "default": "\"\""}, {"name": "create_route53_record", "description": "Whether to create Route53 record for Atlantis", "default": "true"}, {"name": "ecs_service_assign_public_ip", "description": "Should be true, if ECS service is using public subnets (more info: https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_cannot_pull_image.html)", "default": "false"}, {"name": "atlantis_image", "description": "Docker image to run Atlantis with. If not specified, official Atlantis image will be used", "default": "\"\""}, {"name": "create_github_repository_webhook", "description": "Whether to create Github repository webhook for Atlantis. This requires valid Github credentials specified as `github_token` and `github_organization`.", "default": "true"}, {"name": "github_organization", "description": "Github organization", "default": "\"\""}]}, "hashicorp/nomad/google": {"name": "nomad", "url": "https://registry.terraform.io/modules/hashicorp/nomad/google", "provider": "google", "downloads": 16, "description": "A Terraform Module for how to run Nomad on Google Cloud using Terraform and Packer", "source": "hashicorp/nomad/google", "args": [{"name": "gcp_project", "description": "The name of the GCP Project where all resources will be launched.", "default": ""}, {"name": "gcp_region", "description": "The region in which all GCP resources will be launched.", "default": ""}, {"name": "gcp_zone", "description": "The region in which all GCP resources will be launched.", "default": ""}, {"name": "nomad_consul_server_cluster_name", "description": "The name of the Nomad/Consul Server cluster. All resources will be namespaced by this value. E.g. nomad-server-prod", "default": ""}, {"name": "nomad_consul_server_source_image", "description": "The Google Image used to launch each node in the Nomad/Consul Server cluster.", "default": ""}, {"name": "nomad_client_cluster_name", "description": "The name of the Nomad client cluster. All resources will be namespaced by this value. E.g. consul-server-prod", "default": ""}, {"name": "nomad_client_source_image", "description": "The Google Image used to launch each node in the Nomad client cluster.", "default": ""}, {"name": "nomad_consul_server_cluster_size", "description": "The number of nodes to have in the Nomad Server cluster. We strongly recommended that you use either 3 or 5.", "default": "3"}, {"name": "nomad_consul_server_cluster_machine_type", "description": "The machine type of the Compute Instance to run for each node in the Vault cluster (e.g. n1-standard-1).", "default": "\"g1-small\""}, {"name": "nomad_client_cluster_size", "description": "The number of nodes to have in the Nomad client cluster. This number is arbitrary.", "default": "3"}, {"name": "nomad_client_machine_type", "description": "The machine type of the Compute Instance to run for each node in the Nomad client cluster (e.g. n1-standard-1).", "default": "\"g1-small\""}]}, "hashicorp/nomad/azurerm": {"name": "nomad", "url": "https://registry.terraform.io/modules/hashicorp/nomad/azurerm", "provider": "azurerm", "downloads": 16, "description": "A Terraform Module for how to run Nomad on AzureRM using Terraform and Packer", "source": "hashicorp/nomad/azurerm", "args": [{"name": "subscription_id", "description": "The Azure subscription ID", "default": ""}, {"name": "tenant_id", "description": "The Azure tenant ID", "default": ""}, {"name": "client_id", "description": "The Azure client ID", "default": ""}, {"name": "secret_access_key", "description": "The Azure secret access key", "default": ""}, {"name": "resource_group_name", "description": "The name of the Azure resource group consul will be deployed into. This RG should already exist", "default": ""}, {"name": "storage_account_name", "description": "The name of an Azure Storage Account. This SA should already exist", "default": ""}, {"name": "image_uri", "description": "The URI of the Azure Image to run in the cluster. This should be an Azure Image built from the Packer template under examples/nomad-consul-ami/nomad-consul.json.", "default": ""}, {"name": "key_data", "description": "The SSH public key that will be added to SSH authorized_users on the consul instances", "default": ""}, {"name": "location", "description": "The Azure region the consul cluster will be deployed in", "default": "\"East US\""}, {"name": "allowed_ssh_cidr_blocks", "description": "A list of CIDR-formatted IP address ranges from which the Azure Instances will allow SSH connections", "default": "[]"}, {"name": "address_space", "description": "The supernet for the resources that will be created", "default": "\"10.0.0.0/16\""}, {"name": "subnet_address", "description": "The subnet that consul resources will be deployed into", "default": "\"10.0.10.0/24\""}, {"name": "cluster_name", "description": "What to name the cluster and all of its associated resources", "default": "\"nomad-example\""}, {"name": "instance_size", "description": "The instance size for the servers", "default": "\"Standard_A0\""}, {"name": "num_servers", "description": "The number of server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "num_clients", "description": "The number of client nodes to deploy. You can deploy as many as you need to run your jobs.", "default": "6"}, {"name": "cluster_tag_key", "description": "The tag the Azure Instances will look for to automatically discover each other and form a cluster.", "default": "\"nomad-servers\""}, {"name": "ssh_key_name", "description": "The name of an EC2 Key Pair that can be used to SSH to the Azure Instances in this cluster. Set to an empty string to not associate a Key Pair.", "default": "\"\""}]}, "poseidon/kubernetes/aws": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/poseidon/kubernetes/aws", "provider": "aws", "downloads": 16, "description": "Typhoon AWS - minimal and free Kubernetes (mirror)", "source": "poseidon/kubernetes/aws", "args": [{"name": "pod_cidr", "description": "CIDR IPv4 range to assign Kubernetes pods", "default": "\"10.2.0.0/16\""}, {"name": "asset_dir", "description": "Path to a directory where generated assets should be placed (contains secrets)", "default": ""}, {"name": "worker_count", "description": "Number of workers", "default": "\"1\""}, {"name": "controller_type", "description": "EC2 instance type for controllers", "default": "\"t2.small\""}, {"name": "worker_price", "description": "Spot price in USD for autoscaling group spot instances. Leave as default empty string for autoscaling group to use on-demand instances. Note, switching in-place from spot to on-demand is not possible: https://github.com/terraform-providers/terraform-provider-aws/issues/4320", "default": "\"\""}, {"name": "networking", "description": "Choice of networking provider (calico or flannel)", "default": "\"calico\""}, {"name": "network_mtu", "description": "CNI interface MTU (applies to calico only). Use 8981 if using instances types with Jumbo frames.", "default": "\"1480\""}, {"name": "dns_zone_id", "description": "AWS Route53 DNS Zone ID (e.g. Z3PAABBCFAKEC0)", "default": ""}, {"name": "os_image", "description": "AMI channel for a Container Linux derivative (coreos-stable, coreos-beta, coreos-alpha, flatcar-stable, flatcar-beta, flatcar-alpha)", "default": "\"coreos-stable\""}, {"name": "disk_size", "description": "Size of the EBS volume in GB", "default": "\"40\""}, {"name": "worker_clc_snippets", "description": "Worker Container Linux Config snippets", "default": "[]"}, {"name": "ssh_authorized_key", "description": "SSH public key for user 'core'", "default": ""}, {"name": "service_cidr", "description": "CIDR IPv4 range to assign Kubernetes services.\nThe 1st IP will be reserved for kube_apiserver, the 10th IP will be reserved for coredns.\n", "default": "\"10.3.0.0/16\""}, {"name": "cluster_domain_suffix", "description": "Queries for domains with the suffix will be answered by coredns. Default is cluster.local (e.g. foo.default.svc.cluster.local) ", "default": "\"cluster.local\""}, {"name": "dns_zone", "description": "AWS Route53 DNS Zone (e.g. aws.example.com)", "default": ""}, {"name": "controller_count", "description": "Number of controllers (i.e. masters)", "default": "\"1\""}, {"name": "worker_type", "description": "EC2 instance type for workers", "default": "\"t2.small\""}, {"name": "disk_type", "description": "Type of the EBS volume (e.g. standard, gp2, io1)", "default": "\"gp2\""}, {"name": "controller_clc_snippets", "description": "Controller Container Linux Config snippets", "default": "[]"}, {"name": "host_cidr", "description": "CIDR IPv4 range to assign to EC2 nodes", "default": "\"10.0.0.0/16\""}, {"name": "cluster_name", "description": "Unique cluster name (prepended to dns_zone)", "default": ""}]}, "cloudposse/dynamodb/aws": {"name": "dynamodb", "url": "https://registry.terraform.io/modules/cloudposse/dynamodb/aws", "provider": "aws", "downloads": 16, "description": "Terraform module that implements AWS DynamoDB with support for AutoScaling", "source": "cloudposse/dynamodb/aws", "args": [{"name": "enable_streams", "description": "Enable DynamoDB streams", "default": "\"false\""}, {"name": "hash_key", "description": "DynamoDB table Hash Key", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`, `infra`)", "default": ""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "enable_autoscaler", "description": "Flag to enable/disable DynamoDB autoscaling", "default": "\"true\""}, {"name": "dynamodb_attributes", "description": "Additional DynamoDB attributes in the form of a list of mapped values", "default": "[]"}, {"name": "global_secondary_index_map", "description": "Additional global secondary indexes in the form of a list of mapped values", "default": "[]"}, {"name": "autoscale_write_target", "description": "The target value (in %) for DynamoDB write autoscaling", "default": "50"}, {"name": "autoscale_max_write_capacity", "description": "DynamoDB autoscaling max write capacity", "default": "20"}, {"name": "enable_encryption", "description": "Enable DynamoDB server-side encryption", "default": "\"true\""}, {"name": "autoscale_max_read_capacity", "description": "DynamoDB autoscaling max read capacity", "default": "20"}, {"name": "enable_point_in_time_recovery", "description": "Enable DynamoDB point in time recovery", "default": "\"true\""}, {"name": "range_key", "description": "DynamoDB table Range Key", "default": ""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "autoscale_min_read_capacity", "description": "DynamoDB autoscaling min read capacity", "default": "5"}, {"name": "stream_view_type", "description": "When an item in the table is modified, what information is written to the stream", "default": "\"\""}, {"name": "ttl_attribute", "description": "DynamoDB table TTL attribute", "default": "\"Expires\""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "autoscale_read_target", "description": "The target value (in %) for DynamoDB read autoscaling", "default": "50"}, {"name": "autoscale_min_write_capacity", "description": "DynamoDB autoscaling min write capacity", "default": "5"}]}, "cloudposse/acm-request-certificate/aws": {"name": "acm-request-certificate", "url": "https://registry.terraform.io/modules/cloudposse/acm-request-certificate/aws", "provider": "aws", "downloads": 16, "description": "Terraform module to request an ACM certificate for a domain name and create a CNAME record in the DNZ zone to complete certificate validation", "source": "cloudposse/acm-request-certificate/aws", "args": [{"name": "domain_name", "description": "A domain name for which the certificate should be issued", "default": ""}, {"name": "validation_method", "description": "Which method to use for validation, DNS or EMAIL", "default": "\"DNS\""}, {"name": "proces_domain_validation_options", "description": "Flag to enable/disable processing of the record to add to the DNS zone to complete certificate validation", "default": "\"true\""}, {"name": "ttl", "description": "The TTL of the record to add to the DNS zone to complete certificate validation", "default": "\"300\""}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "subject_alternative_names", "description": "A list of domains that should be SANs in the issued certificate", "default": "[]"}]}, "nephosolutions/gcp-project/google": {"name": "gcp-project", "url": "https://registry.terraform.io/modules/nephosolutions/gcp-project/google", "provider": "google", "downloads": 16, "description": "Terraform module to provision Google Cloud Platform projects", "source": "nephosolutions/gcp-project/google", "args": [{"name": "project_name", "description": "the name of the project", "default": ""}, {"name": "api_services", "description": "list of Google APIs to activate on this project", "default": "[]"}, {"name": "billing_account", "description": "the billing_account to which the project should be attached to", "default": ""}, {"name": "organisation_id", "description": "the id of the organisation in which the project should be created", "default": ""}]}, "alibaba/slb/alicloud": {"name": "slb", "url": "https://registry.terraform.io/modules/alibaba/slb/alicloud", "provider": "alicloud", "downloads": 15, "description": "Terraform module which creates Load balancer and set HTTP, HTTPS, TCP, and UDP listeners for it on Alibaba Cloud.", "source": "alibaba/slb/alicloud", "args": []}, "deanwilson/github-ssh-keys/aws": {"name": "github-ssh-keys", "url": "https://registry.terraform.io/modules/deanwilson/github-ssh-keys/aws", "provider": "aws", "downloads": 15, "description": "Use your GitHub SSH public key as an AWS EC2 key pair", "source": "deanwilson/github-ssh-keys/aws", "args": [{"name": "github_user", "description": "GitHub user name", "default": ""}, {"name": "github_key_index", "description": "Index of the key to use. Starts from 0", "default": "\"0\""}, {"name": "aws_key_pair_name", "description": "AWS key pair name to create. Defaults to github_user", "default": "\"\""}]}, "birkoff/lambda-scheduled-function/aws": {"name": "lambda-scheduled-function", "url": "https://registry.terraform.io/modules/birkoff/lambda-scheduled-function/aws", "provider": "aws", "downloads": 15, "description": "Terraform module for AWS Lambda scheduled functions", "source": "birkoff/lambda-scheduled-function/aws", "args": [{"name": "region", "description": "AWS Region to deplpy the function", "default": ""}, {"name": "timeout", "description": "Execution timeout", "default": ""}, {"name": "s3_lambda_bucket", "description": "S3 Bucket where the code is stored", "default": ""}, {"name": "s3_function_key", "description": "S3 key where the code is stored", "default": ""}, {"name": "function_name", "description": "Lambda Function Name", "default": ""}, {"name": "description", "description": "Lambda Function Description", "default": ""}, {"name": "handler", "description": "Lambda Halndler", "default": ""}, {"name": "runtime", "description": "Runtime Engine", "default": ""}, {"name": "event_schedule", "description": "Cron - Schedule", "default": ""}, {"name": "lambda_role_arn", "description": "Role Permission to execute lambda", "default": ""}, {"name": "tags", "description": "Tags to apply to lambda function", "default": ""}, {"name": "env_vars", "description": "Environment variables to apply to the lambda function", "default": ""}]}, "Aplyca/route53/aws": {"name": "route53", "url": "https://registry.terraform.io/modules/Aplyca/route53/aws", "provider": "aws", "downloads": 15, "description": "Terraform AWS Route53 module.  Create a Route53 zone and dns records", "source": "Aplyca/route53/aws", "args": [{"name": "description", "description": "Description of the DNS Zone", "default": "\"\""}, {"name": "domain", "description": "DNS domain zone", "default": ""}, {"name": "records", "description": "List of DNS Records to add to the DNS zone", "default": "{\n  \"names\": [],\n  \"ttls\": [],\n  \"types\": [],\n  \"values\": []\n}"}, {"name": "alias", "description": "List of DNS Aliases to add to the DNS zone", "default": "{\n  \"names\": [],\n  \"values\": [],\n  \"zones_id\": []\n}"}]}, "erikvanbrakel/anthology/aws": {"name": "anthology", "url": "https://registry.terraform.io/modules/erikvanbrakel/anthology/aws", "provider": "aws", "downloads": 15, "description": "Terraform Module which creates a private Terraform Registry using https://github.com/erikvanbrakel/Anthology.", "source": "erikvanbrakel/anthology/aws", "args": [{"name": "tld", "description": "TLD under which the registry will be hosted.", "default": ""}, {"name": "storage_bucket", "description": "This bucket is used to store the terraform modules.", "default": ""}]}, "sl1pm4t/redis/kubernetes": {"name": "redis", "url": "https://registry.terraform.io/modules/sl1pm4t/redis/kubernetes", "provider": "kubernetes", "downloads": 15, "description": "Terraform module for deploying redis to Kubernetes", "source": "sl1pm4t/redis/kubernetes", "args": [{"name": "metrics_image_tag", "description": "The redis metrics exporter docker tag / version that will be deployed.", "default": "\"v0.11\""}, {"name": "metrics_resource_requests", "description": "Redis metrics resource requests\nref: http://kubernetes.io/docs/user-guide/compute-resources/\n  metrics_resource_requests = {\n    memory = \"256Mi\"\n    cpu = \"100m\"\n  }\n", "default": "{}"}, {"name": "metrics_resource_limits", "description": "Redis metrics resource limits\nref: http://kubernetes.io/docs/user-guide/compute-resources/\n  metrics_resource_limits = {\n    memory = \"256Mi\"\n    cpu = \"100m\"\n  }\n", "default": "{}"}, {"name": "master_disable_commands", "description": "Comma-separated list of Redis commands to disable\nCan be used to disable Redis commands for security reasons.\nref: https://github.com/bitnami/bitnami-docker-redis#disabling-redis-commands\n", "default": "[\n  \"FLUSHDB\",\n  \"FLUSHALL\"\n]"}, {"name": "master_resource_requests", "description": "Redis Master resource requests\nref: http://kubernetes.io/docs/user-guide/compute-resources/\n  master_resource_requests = {\n    memory = \"256Mi\"\n    cpu = \"100m\"\n  }\n", "default": "{}"}, {"name": "master_resource_limits", "description": "Redis Master resource limits\nref: http://kubernetes.io/docs/user-guide/compute-resources/\n  master_resource_limits = {\n    memory = \"256Mi\"\n    cpu = \"100m\"\n  }\n", "default": "{}"}, {"name": "release_name", "description": "A user specified descriptor of this deployment", "default": "\"redis\""}, {"name": "redis_image_registry", "description": "The docker image registry used to retrieve the redis image", "default": "\"docker.io\""}, {"name": "master_persistence_sub_path", "description": "", "default": "\"\""}, {"name": "master_persistence_size", "description": "", "default": "\"8Gi\""}, {"name": "master_service_annotations", "description": "", "default": "{}"}, {"name": "slave_pod_annotations", "description": "", "default": "{}"}, {"name": "master_pod_annotations", "description": "", "default": "{}"}, {"name": "master_security_context", "description": "", "default": "{\n  \"enabled\": true,\n  \"fs_group\": 1001,\n  \"run_as_user\": 1001\n}"}, {"name": "metrics_image_repository", "description": "The redis metrics exporter docker image that will be deployed.", "default": "\"oliver006/redis_exporter\""}, {"name": "kubernetes_node_selector", "description": "", "default": "{}"}, {"name": "master_liveness_probe", "description": "Redis Master Liveness Probe configuration", "default": "{\n  \"enabled\": true,\n  \"failure_threshold\": 5,\n  \"initial_delay_seconds\": 30,\n  \"period_seconds\": 10,\n  \"success_threshold\": 1,\n  \"timeout_seconds\": 5\n}"}, {"name": "master_service_type", "description": "", "default": "\"ClusterIP\""}, {"name": "slave_resource_limits", "description": "Redis Slave resource limits\nref: http://kubernetes.io/docs/user-guide/compute-resources/\n  slave_resource_limits = {\n    memory = \"256Mi\"\n    cpu = \"100m\"\n  }\n", "default": "{}"}, {"name": "slave_service_annotations", "description": "", "default": "{\n  \"prometheus.io/port\": \"9121\",\n  \"prometheus.io/scrape\": \"true\"\n}"}, {"name": "use_password", "description": "Set to 'false' to disable password protected access to redis.", "default": "true"}, {"name": "metrics_image_registry", "description": "The docker image registry used to retrieve the redis_exporter image", "default": "\"docker.io\""}, {"name": "metrics_port", "description": "The port the metrics exporter will listen for scrape requests.", "default": "\"9121\""}, {"name": "kubernetes_namespace", "description": "", "default": "\"default\""}, {"name": "master_pod_labels", "description": "Redis Master additional pod labels\nref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/\n", "default": "{}"}, {"name": "master_persistence_path", "description": "", "default": "\"/bitnami/redis/data\""}, {"name": "master_persistence_storage_class", "description": "", "default": "\"\""}, {"name": "redis_image_tag", "description": "", "default": "\"4.0.9\""}, {"name": "password", "description": "Redis password (both master and slave)\nDefaults to a random 10-character alphanumeric string if not set and usePassword is true\n", "default": "\"\""}, {"name": "master_persistence_enabled", "description": "", "default": "true"}, {"name": "slave_replica_count", "description": "", "default": "3"}, {"name": "slave_args", "description": "", "default": "[]"}, {"name": "cluster_enabled", "description": "Set to 'false' to deploy a redis master only.", "default": "true"}, {"name": "master_readiness_probe", "description": "Redis Master Readiness Probe configuration", "default": "{\n  \"enabled\": true,\n  \"failure_threshold\": 5,\n  \"initial_delay_seconds\": 30,\n  \"period_seconds\": 10,\n  \"success_threshold\": 1,\n  \"timeout_seconds\": 5\n}"}, {"name": "slave_service_type", "description": "", "default": "\"ClusterIP\""}, {"name": "master_persistence_access_modes", "description": "", "default": "[\n  \"ReadWriteOnce\"\n]"}, {"name": "slave_port", "description": "", "default": "\"6379\""}, {"name": "slave_resource_requests", "description": "Redis Slave resource requests\nref: http://kubernetes.io/docs/user-guide/compute-resources/\n  slave_resource_requests = {\n    memory = \"256Mi\"\n    cpu = \"100m\"\n  }\n", "default": "{}"}, {"name": "redis_image_pull_policy", "description": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.", "default": "\"IfNotPresent\""}, {"name": "metrics_pod_annotations", "description": "", "default": "{}"}, {"name": "master_args", "description": "Redis command arguments.\nCan be used to specify command line arguments, for example:\n\nmaster_args = [\n \"redis-server\",\n \"--maxmemory-policy volatile-ttl\"\n]\n", "default": "[]"}, {"name": "cluster_slave_count", "description": "The number of redis slave pods to deploy.", "default": "1"}, {"name": "metrics_enabled", "description": "Should the Redis Prometheus metrics exporter pod be deployed?", "default": "true"}, {"name": "metrics_image_pull_secrets", "description": "", "default": "[]"}, {"name": "master_port", "description": "", "default": "\"6379\""}, {"name": "master_extra_flags", "description": " Redis additional command line flags\n Can be used to specify command line flags, for example:\n\n redisExtraFlags = [\n  \"--maxmemory-policy volatile-ttl\",\n  \"--repl-backlog-size 1024mb\"\n ]\n", "default": "[]"}, {"name": "master_service_loadbalancer_ip", "description": "", "default": "\"\""}, {"name": "slave_service_loadbalancer_ip", "description": "", "default": "\"\""}, {"name": "redis_image_repository", "description": "", "default": "\"bitnami/redis\""}, {"name": "metrics_image_pull_policy", "description": "One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.", "default": "\"IfNotPresent\""}]}, "anonymint/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/anonymint/ecs-cluster/aws", "provider": "aws", "downloads": 14, "description": "Terraform script to create ECS cluster", "source": "anonymint/ecs-cluster/aws", "args": [{"name": "cluster_name", "description": "ECS cluster name", "default": ""}, {"name": "asg_ami_id", "description": "AMI ID", "default": ""}, {"name": "asg_instance_type", "description": "EC2 instance type", "default": "\"t2.micro\""}, {"name": "asg_security_groups", "description": "List of security groups id", "default": "[]"}, {"name": "asg_keypair_name", "description": "keypair name", "default": "\"\""}, {"name": "asg_root_block_device_volume_type", "description": "Root block device volume type eg. gp2, io1, st1, standard", "default": "\"gp2\""}, {"name": "asg_root_block_device_volume_size", "description": "Root block device volume size in G", "default": "8"}, {"name": "asg_subnet_ids", "description": "List of subnet id", "default": ""}, {"name": "asg_min_size", "description": "Minimum # of instances", "default": "0"}, {"name": "asg_max_size", "description": "Maximum # of instances", "default": "1"}, {"name": "asg_desired_size", "description": "Desired # of instances", "default": "1"}, {"name": "asg_tags", "description": "tags of the ec2 in asg", "default": "[]"}]}, "ovh/publiccloud-docker-swarm/ovh": {"name": "publiccloud-docker-swarm", "url": "https://registry.terraform.io/modules/ovh/publiccloud-docker-swarm/ovh", "provider": "ovh", "downloads": 14, "description": "", "source": "ovh/publiccloud-docker-swarm/ovh", "args": [{"name": "region", "description": "The OVH region to deploy into (e.g. GRA3, BHS3, ...).", "default": ""}, {"name": "name", "description": "What to name the Docker Swarm cluster and all of its associated resources.", "default": "\"mydockerswarm\""}, {"name": "image_id", "description": "The id if a docker enabled image.", "default": "\"\""}, {"name": "image_names", "description": "The name per region of the docker enabled images. This variable can be overriden by the \"image_id\" variable", "default": "{\n  \"BHS3\": \"CoreOS Stable\",\n  \"DE1\": \"CoreOS Stable\",\n  \"GRA1\": \"CoreOS Stable\",\n  \"GRA3\": \"CoreOS Stable\",\n  \"SBG3\": \"CoreOS Stable\",\n  \"WAW1\": \"CoreOS Stable\"\n}"}, {"name": "flavor_id", "description": "the id of the flavor that will be used for docker swarm nodes", "default": "\"\""}, {"name": "flavor_name", "description": "the name of the flavor that will be used for docker swarm nodes", "default": "\"\""}, {"name": "flavor_names", "description": "A map of flavor names per openstack region that will be used for the docker swarm nodes.", "default": "{\n  \"BHS3\": \"s1-4\",\n  \"DE1\": \"s1-4\",\n  \"GRA1\": \"s1-4\",\n  \"GRA3\": \"s1-4\",\n  \"SBG3\": \"s1-4\",\n  \"WAW1\": \"s1-4\"\n}"}, {"name": "join_ip", "description": "The ip of an existing docker swarm node to join.", "default": "\"\""}, {"name": "join_token", "description": "The secret token reauired to join an existing docker swarm node.", "default": "\"\""}, {"name": "count", "description": "The number of docker swarm node to deploy. Defaults to 3.", "default": "3"}, {"name": "manager_count", "description": "The number of nodes that will play the role of swarm managers.\nIf < 0, the `manager_count` will be computed as follows:\n - `count` < 3, `manager_count` = 1\n - 3 <= `count` <= 5, `manager_count` = 3\n - `count` > 5, `manager_count` = 5\n\nImportant note: changing the `count` or `manager_count` may trigger\ndestroy/create of existing instances.\nTo change the topology of an existing cluster, you should create a new cluster\nand make it join the existing one.\n", "default": "-1"}, {"name": "cidr", "description": "The global CIDR block of the Network. (e.g. 10.0.0.0/16).\nIf left blank, the fetched CIDR blocks of the subnets will be used to calculate routes.\n\nImportant Note:\nIf you change the network topology by adding subnets, it may recalculate routes\nfor existing instances and thus destroy/create all your cluster at once.\nThus, you may prefer to setup a wider cidr range instead of letting this\nmodule compute routes.\n", "default": "\"\""}, {"name": "network_id", "description": "The network_id is not yet accessible through the openstack subnet datasource but it will soon be released. Meanwhile this attribute must be set. It will become deprecated and optional as soon as the openstack provider is released.", "default": ""}, {"name": "subnet_ids", "description": "The list of subnets ids to deploy docker swarm nodes in.\nIf `count` is specified, will spawn `count` docker swarm node\naccross the list of subnets. Conflicts with `subnets`.\n", "default": "[]"}, {"name": "subnets", "description": "The list of subnets CIDR blocks to deploy docker swarm nodes in.\nIf `count` is specified, will spawn `count` docker swarm node\naccross the list of subnets. Conflicts with `subnet_ids`.\n", "default": "[\n  \"\"\n]"}, {"name": "public_facing", "description": "If set to `true`, the instances will also be attached to the Ext-Net network. 80 and 443 ports will be opened to 0.0.0.0/0", "default": "false"}, {"name": "ssh_public_keys", "description": "The ssh public keys that can be used to SSH to the instances in this cluster.", "default": "[]"}, {"name": "metadata", "description": "A map of metadata to add to all resources supporting it.", "default": "{}"}, {"name": "labels", "description": "A list of labels to add to all to docker swarm nodes. Labels may be in the form key=value", "default": "[]"}, {"name": "security_group_ids", "description": "A list of security group to add the nodes in. Note: if the cluster is `public_facing`, the security groups will only be applied to private ports, not public ports.", "default": "[]"}, {"name": "etcd_join_nodes", "description": "A String representing a static list of etcd nodes to join the cluster.", "default": "\"\""}]}, "javilac/s3/aws": {"name": "s3", "url": "https://registry.terraform.io/modules/javilac/s3/aws", "provider": "aws", "downloads": 14, "description": "Terraform module, provides s3 resources.", "source": "javilac/s3/aws", "args": [{"name": "bucket", "description": "The name of the bucket.", "default": ""}, {"name": "acl", "description": "The canned ACL to apply", "default": "\"private\""}, {"name": "policy", "description": "A valid bucket policy JSON document.", "default": "\"\""}, {"name": "tags", "description": "A mapping of tags to assign to the resource.", "default": "{}"}, {"name": "force_destroy", "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without error.", "default": "false"}, {"name": "website", "description": "A website object.", "default": "[]"}, {"name": "cors_rule", "description": "A rule of Cross-Origin Resource Sharing.", "default": "[]"}, {"name": "versioning", "description": "A state of versioning.", "default": "[]"}, {"name": "logging", "description": "A settings of bucket logging.", "default": "[]"}, {"name": "lifecycle_rule", "description": "A configuration of object lifecycle management.", "default": "[]"}, {"name": "region", "description": "the AWS region this bucket should reside in.", "default": "\"\""}, {"name": "request_payer", "description": "Specifies who should bear the cost of Amazon S3 data transfer.", "default": "\"BucketOwner\""}, {"name": "replication_configuration", "description": "A configuration of replication configuration.", "default": "[]"}, {"name": "server_side_encryption_configuration", "description": "A configuration of server-side encryption configuration.", "default": "[]"}]}, "matti/until/tcp": {"name": "until", "url": "https://registry.terraform.io/modules/matti/until/tcp", "provider": "tcp", "downloads": 14, "description": "", "source": "matti/until/tcp", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "address", "description": "", "default": "\"\""}, {"name": "addresses", "description": "", "default": "[]"}, {"name": "port", "description": "", "default": ""}, {"name": "timeout", "description": "", "default": "\"1\""}, {"name": "interval", "description": "", "default": "\"1\""}, {"name": "max_tries", "description": "", "default": "\"60\""}]}, "sacloud/server/sakuracloud": {"name": "server", "url": "https://registry.terraform.io/modules/sacloud/server/sakuracloud", "provider": "sakuracloud", "downloads": 14, "description": "Terraform module for provisioning server instance", "source": "sacloud/server/sakuracloud", "args": [{"name": "os_type", "description": "", "default": "\"centos\""}, {"name": "password", "description": "Password for server root user", "default": ""}, {"name": "ssh_key_name", "description": "", "default": "\"sshkey\""}, {"name": "ssh_public_key", "description": "", "default": "\"\""}, {"name": "disk_connector", "description": "", "default": "\"virtio\""}, {"name": "disk_name", "description": "", "default": "\"\""}, {"name": "disk_size", "description": "Size of master node disk(Unit:GB)", "default": "20"}, {"name": "disk_icon_id", "description": "", "default": "\"\""}, {"name": "disk_plan", "description": "", "default": "\"ssd\""}, {"name": "disk_description", "description": "", "default": "\"\""}, {"name": "disk_tags", "description": "", "default": "[]"}, {"name": "disable_pw_auth", "description": "", "default": "true"}, {"name": "startup_script_ids", "description": "", "default": "[]"}, {"name": "hostname", "description": "", "default": "\"\""}, {"name": "server_name", "description": "", "default": "\"server\""}, {"name": "server_cdrom_id", "description": "", "default": "\"\""}, {"name": "server_icon_id", "description": "", "default": "\"\""}, {"name": "server_additional_disks", "description": "", "default": "[]"}, {"name": "server_core", "description": "Number of master node CPU core", "default": "1"}, {"name": "server_memory", "description": "Size of master node memory(Unit:GB)", "default": "1"}, {"name": "server_description", "description": "", "default": "\"\""}, {"name": "server_tags", "description": "", "default": "[]"}, {"name": "server_interface_driver", "description": "", "default": "\"virtio\""}, {"name": "packet_filter_ids", "description": "", "default": "[]"}, {"name": "additional_nics", "description": "", "default": "[]"}, {"name": "nic", "description": "", "default": "\"shared\""}, {"name": "ipaddress", "description": "", "default": "\"\""}, {"name": "gateway", "description": "", "default": "\"\""}, {"name": "nw_mask_len", "description": "", "default": "0"}]}, "azavea/postgresql-rds/aws": {"name": "postgresql-rds", "url": "https://registry.terraform.io/modules/azavea/postgresql-rds/aws", "provider": "aws", "downloads": 13, "description": "A Terraform module to create an Amazon Web Services (AWS) PostgreSQL Relational Database Server (RDS).", "source": "azavea/postgresql-rds/aws", "args": [{"name": "engine_version", "description": "", "default": "\"9.5.2\""}, {"name": "snapshot_identifier", "description": "", "default": "\"\""}, {"name": "multi_availability_zone", "description": "", "default": "false"}, {"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "iops", "description": "", "default": "\"0\""}, {"name": "alarm_disk_queue_threshold", "description": "", "default": "\"10\""}, {"name": "insufficient_data_actions", "description": "", "default": ""}, {"name": "allocated_storage", "description": "", "default": "\"32\""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "database_port", "description": "", "default": "\"5432\""}, {"name": "alarm_cpu_credit_balance_threshold", "description": "", "default": "\"30\""}, {"name": "database_password", "description": "", "default": ""}, {"name": "database_username", "description": "", "default": ""}, {"name": "backup_retention_period", "description": "", "default": "\"30\""}, {"name": "backup_window", "description": "", "default": "\"04:00-04:30\""}, {"name": "skip_final_snapshot", "description": "", "default": "true"}, {"name": "subnet_group", "description": "", "default": ""}, {"name": "alarm_cpu_threshold", "description": "", "default": "\"75\""}, {"name": "alarm_free_memory_threshold", "description": "", "default": "\"128000000\""}, {"name": "instance_type", "description": "", "default": "\"db.t2.micro\""}, {"name": "storage_type", "description": "", "default": "\"gp2\""}, {"name": "maintenance_window", "description": "", "default": "\"sun:04:30-sun:05:30\""}, {"name": "auto_minor_version_upgrade", "description": "", "default": "true"}, {"name": "copy_tags_to_snapshot", "description": "", "default": "false"}, {"name": "ok_actions", "description": "", "default": ""}, {"name": "parameter_group", "description": "", "default": "\"default.postgres9.4\""}, {"name": "alarm_free_disk_threshold", "description": "", "default": "\"5000000000\""}, {"name": "project", "description": "", "default": "\"Unknown\""}, {"name": "final_snapshot_identifier", "description": "", "default": "\"terraform-aws-postgresql-rds-snapshot\""}, {"name": "storage_encrypted", "description": "", "default": "false"}, {"name": "alarm_actions", "description": "", "default": ""}, {"name": "database_identifier", "description": "", "default": ""}, {"name": "database_name", "description": "", "default": ""}]}, "metadevpro/sqlserver-seed/azurerm": {"name": "sqlserver-seed", "url": "https://registry.terraform.io/modules/metadevpro/sqlserver-seed/azurerm", "provider": "azurerm", "downloads": 13, "description": "Terraform module for creating an Azure SQL Server Database and initialize it with a SQL script.", "source": "metadevpro/sqlserver-seed/azurerm", "args": [{"name": "location", "description": "Azure location where the db server is located.", "default": ""}, {"name": "resource_group", "description": "Azure Resource Group name where the db server is located.", "default": ""}, {"name": "db_server_fqdn", "description": "Full qualified domain name of the database sever. The server where to create the database. In the form xxxx.database.windows.net", "default": ""}, {"name": "db_name", "description": "The name of the database to be created.", "default": ""}, {"name": "sql_admin_username", "description": "The administrator username of the SQL Server to use for launching the seed script.", "default": ""}, {"name": "sql_admin_password", "description": "The administrator password of the SQL Server to use for launching the seed script.", "default": ""}, {"name": "tags", "description": "The tags to associate with the database.", "default": "{\n  \"provisioner\": \"terraform\"\n}"}, {"name": "init_script_file", "description": "SQL Script to seed the database.", "default": ""}, {"name": "log_file", "description": "Log file to create with the seeding results.", "default": "\"db-init.log\""}, {"name": "collation", "description": "The collation for the database. Default is SQL_Latin1_General_CP1_CI_AS", "default": "\"SQL_Latin1_General_CP1_CI_AS\""}, {"name": "db_edition", "description": "The edition of the database to be created.", "default": "\"Basic\""}, {"name": "service_objective_name", "description": "The performance level for the database. For the list of acceptable values, see https://docs.microsoft.com/en-gb/azure/sql-database/sql-database-service-tiers. Default is Basic.", "default": "\"Basic\""}]}, "matti/until/shell": {"name": "until", "url": "https://registry.terraform.io/modules/matti/until/shell", "provider": "shell", "downloads": 13, "description": "", "source": "matti/until/shell", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "command", "description": "", "default": "\"\""}, {"name": "exit_status_must_equal", "description": "", "default": "\"\""}, {"name": "stdout_must_include", "description": "", "default": "\"\""}, {"name": "stdout_must_not_include", "description": "", "default": "\"\""}, {"name": "max_tries", "description": "", "default": "60"}, {"name": "interval", "description": "", "default": "1"}]}, "jdpleiness/storage-static-website/google": {"name": "storage-static-website", "url": "https://registry.terraform.io/modules/jdpleiness/storage-static-website/google", "provider": "google", "downloads": 13, "description": "A Terraform Module for a static website hosted on Google Cloud Storage", "source": "jdpleiness/storage-static-website/google", "args": [{"name": "bucket_name", "description": "Name of bucket that will store the static website. Should match your website domain name", "default": ""}, {"name": "bucket_location", "description": "Location of the bucket that will store the static website", "default": "\"US\""}, {"name": "project_id", "description": "ID of the project where the bucket will be created", "default": ""}, {"name": "bucket_storage_class", "description": "Storage class of the bucket that will store the static website", "default": "\"MULTI_REGIONAL\""}, {"name": "bucket_versioning", "description": "Enable/disable versioning for the bucket that will store the static website", "default": "false"}, {"name": "main_page_suffix", "description": "bucket's directory index where missing objects are treated as potential directories", "default": "\"index.html\""}, {"name": "not_found_page", "description": "The custom object to return when a requested resource is not found", "default": "\"404.html\""}, {"name": "role_entity", "description": "Sets bucket default object ACLs to allow all users read access to objects", "default": "[\n  \"READER:allUsers\"\n]"}]}, "matti/yaml/map": {"name": "yaml", "url": "https://registry.terraform.io/modules/matti/yaml/map", "provider": "map", "downloads": 13, "description": "", "source": "matti/yaml/map", "args": [{"name": "root", "description": "", "default": ""}]}, "matti/map-picker/list": {"name": "map-picker", "url": "https://registry.terraform.io/modules/matti/map-picker/list", "provider": "list", "downloads": 13, "description": "", "source": "matti/map-picker/list", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "list", "description": "", "default": ""}, {"name": "key", "description": "", "default": ""}]}, "newcontext-oss/instance/google": {"name": "instance", "url": "https://registry.terraform.io/modules/newcontext-oss/instance/google", "provider": "google", "downloads": 13, "description": "Terraform module which creates a Google compute instance within the default networking of an existing project", "source": "newcontext-oss/instance/google", "args": [{"name": "ssh_public_key_filepath", "description": "Filepath for the ssh public key", "default": "\"ubuntu.pub\""}]}, "julienlevasseur/security-group/openstack": {"name": "security-group", "url": "https://registry.terraform.io/modules/julienlevasseur/security-group/openstack", "provider": "openstack", "downloads": 12, "description": "Terraform OpenStack Security Group Module", "source": "julienlevasseur/security-group/openstack", "args": [{"name": "name", "description": "A unique name for the resource", "default": ""}, {"name": "description", "description": " A description for the security group", "default": ""}, {"name": "from_port", "description": "An integer representing the lower bound of the port range to open", "default": ""}, {"name": "to_port", "description": "An integer representing the upper bound of the port range to open", "default": ""}, {"name": "ip_protocol", "description": "The protocol type that will be allowed", "default": ""}, {"name": "cidr", "description": "The IP range that will be the source of network traffic to the security group. Use 0.0.0.0/0 to allow all IP addresses", "default": ""}]}, "cloudposse/cloudwatch-flow-logs/aws": {"name": "cloudwatch-flow-logs", "url": "https://registry.terraform.io/modules/cloudposse/cloudwatch-flow-logs/aws", "provider": "aws", "downloads": 12, "description": "", "source": "cloudposse/cloudwatch-flow-logs/aws", "args": [{"name": "name", "description": "Name  (e.g. `bastion` or `db`)", "default": "\"\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "region", "description": "AWS region", "default": "\"\""}, {"name": "retention_in_days", "description": "Number of days you want to retain log events in the log group", "default": "\"30\""}, {"name": "traffic_type", "description": "Type of traffic to capture. Valid values: ACCEPT,REJECT, ALL", "default": "\"ALL\""}, {"name": "vpc_id", "description": "ID of VPC", "default": ""}, {"name": "subnet_ids", "description": "IDs of subnets", "default": "[]"}, {"name": "eni_ids", "description": "IDs of ENIs", "default": "[]"}, {"name": "shard_count", "description": "Number of shards that the stream will use", "default": "\"1\""}, {"name": "retention_period", "description": "Length of time data records are accessible after they are added to the stream", "default": "\"48\""}, {"name": "shard_level_metrics", "description": "List of shard-level CloudWatch metrics which can be enabled for the stream", "default": "[\n  \"IncomingBytes\",\n  \"OutgoingBytes\"\n]"}, {"name": "encryption_type", "description": "GUID for the customer-managed KMS key to use for encryption. The only acceptable values are NONE or KMS", "default": "\"NONE\""}, {"name": "filter_pattern", "description": "Valid CloudWatch Logs filter pattern for subscribing to a filtered stream of log events", "default": "\"[version, account, eni, source, destination, srcport, destport, protocol, packets, bytes, windowstart, windowend, action, flowlogstatus]\""}, {"name": "kms_key_id", "description": "ID of KMS key", "default": "\"\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "\"true\""}]}, "matti/download/http": {"name": "download", "url": "https://registry.terraform.io/modules/matti/download/http", "provider": "http", "downloads": 12, "description": "", "source": "matti/download/http", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "uri", "description": "", "default": ""}, {"name": "max_tries", "description": "", "default": "\"3\""}, {"name": "interval", "description": "", "default": "\"1\""}]}, "devops-workflow/teams/github": {"name": "teams", "url": "https://registry.terraform.io/modules/devops-workflow/teams/github", "provider": "github", "downloads": 12, "description": "Terraform module for managing Github teams", "source": "devops-workflow/teams/github", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "teams", "description": "List of Github team maps to manage", "default": ""}]}, "alexandarp/wordpress/digitalocean": {"name": "wordpress", "url": "https://registry.terraform.io/modules/alexandarp/wordpress/digitalocean", "provider": "digitalocean", "downloads": 12, "description": "Lunch a WordPress Droplet with 1 command", "source": "alexandarp/wordpress/digitalocean", "args": [{"name": "image", "description": "The Droplet image ID or slug", "default": "\"wordpress-16-04\""}, {"name": "name", "description": "The name of the Droplet", "default": "\"wordpress\""}, {"name": "region", "description": "The region of the Droplet", "default": "\"nyc1\""}, {"name": "size", "description": "The instance size", "default": "\"1gb\""}, {"name": "backups", "description": "Boolean controlling if backups are made", "default": "false"}, {"name": "monitoring", "description": "Boolean controlling whether monitoring agent is installed", "default": "false"}, {"name": "ipv6", "description": "Boolean controlling if IPv6 is enabled", "default": "false"}, {"name": "private_networking", "description": "Boolean controlling if private networks are enabled", "default": "false"}, {"name": "resize_disk", "description": "Boolean controlling whether to increase the disk size when resizing a Droplet", "default": "true"}]}, "google-terraform-modules/cloudsql-ha/google": {"name": "cloudsql-ha", "url": "https://registry.terraform.io/modules/google-terraform-modules/cloudsql-ha/google", "provider": "google", "downloads": 12, "description": "Create Google CloudSQL HA (RR)", "source": "google-terraform-modules/cloudsql-ha/google", "args": [{"name": "replica", "description": "Replica configuration", "default": ""}, {"name": "labels", "description": "Global labels", "default": "{}"}, {"name": "authorized_gae_applications_master", "description": "A list of Google App Engine (GAE) project names that are allowed to access this master instance", "default": "[]"}, {"name": "authorized_gae_applications_replica", "description": "A list of Google App Engine (GAE) project names that are allowed to access this replica instance", "default": "[]"}, {"name": "general", "description": "General configuration", "default": ""}, {"name": "master", "description": "Master configuration", "default": ""}]}, "jeromegamez/enforce-mfa/aws": {"name": "enforce-mfa", "url": "https://registry.terraform.io/modules/jeromegamez/enforce-mfa/aws", "provider": "aws", "downloads": 12, "description": "A terraform module to enforce MFA for AWS groups and users", "source": "jeromegamez/enforce-mfa/aws", "args": [{"name": "groups", "description": "Enforce MFA for the members in these groups", "default": "[]"}, {"name": "users", "description": "Enforce MFA for these users", "default": "[]"}, {"name": "allow_password_change_without_mfa", "description": "Allow changing the user password without MFA", "default": "\"false\""}]}, "howdio/eks/aws": {"name": "eks", "url": "https://registry.terraform.io/modules/howdio/eks/aws", "provider": "aws", "downloads": 12, "description": "Terraform module which creates EKS resources on AWS", "source": "howdio/eks/aws", "args": [{"name": "vpc_id", "description": "ID of the VPC where to create the cluster resources.", "default": "\"\""}, {"name": "node_user_data", "description": "Additional user data used when bootstrapping the EC2 instance.", "default": "\"\""}, {"name": "enable_dashboard", "description": "When enabled, it will install the Kubernetes Dashboard.", "default": "false"}, {"name": "availability_zone_count", "description": "Number of availability zones used in the region.", "default": "2"}, {"name": "default_vpc", "description": "Use the default VPC for creating your cluster resources.", "default": "false"}, {"name": "enable_kube2iam", "description": "When enabled, it will install Kube2IAM to support assigning IAM roles to Pods.", "default": "false"}, {"name": "name", "description": "Name to be used on all the resources as identifier.", "default": ""}, {"name": "availability_zones", "description": "List of availability zones in the region", "default": "[]"}, {"name": "cluster_subnet_ids", "description": "A list of VPC subnet IDs which the cluster uses.", "default": "[]"}, {"name": "node_subnet_ids", "description": "A list of VPC subnet IDs which the worker nodes are using.", "default": "[]"}, {"name": "node_instance_type", "description": "Instance type of the worker node.", "default": "\"m5.large\""}, {"name": "node_min_size", "description": "Minimum size of the worker node AutoScaling Group.", "default": "1"}, {"name": "node_max_size", "description": "Maximum size of the worker node AutoScaling Group.", "default": "2"}, {"name": "version", "description": "Kubernetes version to use for the cluster.", "default": "\"1.10\""}, {"name": "key_pair", "description": "Adds an EC2 Key Pair to the cluster nodes.", "default": "\"\""}, {"name": "enable_kubectl", "description": "When enabled, it will merge the cluster's configuration with the one located in ~/.kube/config.", "default": "false"}, {"name": "enable_calico", "description": "When enabled, it will install Calico for network policy support.", "default": "false"}, {"name": "workstation_cidr_blocks", "description": "CIDR blocks from which to allow inbound traffic to the Kubernetes control plane.", "default": "[]"}]}, "anugnes/openvpn/aws": {"name": "openvpn", "url": "https://registry.terraform.io/modules/anugnes/openvpn/aws", "provider": "aws", "downloads": 11, "description": "Terraform module to deploy an OpenVPN EC2 instance in a custom VPC", "source": "anugnes/openvpn/aws", "args": [{"name": "name", "description": "OpenVPN instance name", "default": "\"openvpn\""}, {"name": "vpc_id", "description": "ID of the VPC to use", "default": ""}, {"name": "vpc_cidr", "description": "VPC CIDRs to use", "default": ""}, {"name": "public_subnet_ids", "description": "Public Subnet IDs", "default": ""}, {"name": "route_zone_id", "description": "Route Zone ID", "default": ""}, {"name": "domain", "description": "Public domain to assign to the openVPN host. With a value of 'example.com' The resulting value will be 'vpn.example.com", "default": ""}, {"name": "instance_type", "description": "OPenVPN EC2 instance type", "default": ""}, {"name": "key_name", "description": "Key Pair name", "default": ""}, {"name": "ebs_region", "description": "Region for the EBS volume where we'll store credentials and certificates", "default": ""}, {"name": "ebs_size", "description": "EBS volume size. 1GB should be fine in most cases", "default": ""}, {"name": "ami", "description": "AMI ID to use for the EC2 instance", "default": ""}]}, "matti/compute-instance/google": {"name": "compute-instance", "url": "https://registry.terraform.io/modules/matti/compute-instance/google", "provider": "google", "downloads": 11, "description": "", "source": "matti/compute-instance/google", "args": [{"name": "region", "description": "", "default": ""}, {"name": "amount", "description": "", "default": ""}, {"name": "name_prefix", "description": "", "default": ""}, {"name": "machine_type", "description": "", "default": ""}, {"name": "user_data", "description": "", "default": ""}, {"name": "disk_type", "description": "", "default": "\"pd-ssd\""}, {"name": "disk_size", "description": "", "default": ""}, {"name": "disk_image", "description": "", "default": ""}, {"name": "disk_create_local_exec_command_or_fail", "description": "", "default": "\":\""}, {"name": "disk_create_local_exec_command_and_continue", "description": "", "default": "\":\""}, {"name": "disk_destroy_local_exec_command_or_fail", "description": "", "default": "\":\""}, {"name": "disk_destroy_local_exec_command_and_continue", "description": "", "default": "\":\""}]}, "kurron/elasticache-redis/aws": {"name": "elasticache-redis", "url": "https://registry.terraform.io/modules/kurron/elasticache-redis/aws", "provider": "aws", "downloads": 11, "description": "Terraform module that creates a Redis-based ElastiCache instance.", "source": "kurron/elasticache-redis/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "engine_version", "description": "The version of Redis to use, e.g. 3.2.10.  If left blank, the latest engine is used.", "default": "\"\""}, {"name": "maintenance_window", "description": "The window to perform maintenance in.", "default": "\"Sun:03:00-Sun:05:00\""}, {"name": "node_type", "description": "The instance type of the Redis instance, e.g. cache.t2.micro", "default": "\"cache.t2.micro\""}, {"name": "parameter_group_name", "description": "Name of the Redis parameter group to associate to the instance, e.g. default.redis3.2", "default": "\"\""}, {"name": "security_group_ids", "description": "List of VPC security groups to associate to the instance.", "default": ""}, {"name": "apply_immediately", "description": "If true, engine upgrades are done immediately, otherwise done during the next maintenance window.", "default": "\"false\""}, {"name": "snapshot_window", "description": "The daily time range (in UTC) during which automated backups are created, if enabled.", "default": "\"00:00-02:00\""}, {"name": "snapshot_retention_limit", "description": "How many days to retain backups.", "default": "\"7\""}, {"name": "availability_zone", "description": "The availability zone to place the instance into.", "default": "\"\""}, {"name": "subnet_ids", "description": "List of subnets ids where the instance can live, e.g. [subnet-6412a148,subnet-e18b0185]", "default": ""}, {"name": "domain_name", "description": "Route53 managed domain name to map the instance to, e.g. example.com.", "default": ""}, {"name": "host_name", "description": "The host name to use when creating the mapping to your managed domain name, e.g. development-redis.", "default": ""}]}, "gearnode/get-secret/kubernetes": {"name": "get-secret", "url": "https://registry.terraform.io/modules/gearnode/get-secret/kubernetes", "provider": "kubernetes", "downloads": 11, "description": "Terraform module to get value in Kubernetes secrets store", "source": "gearnode/get-secret/kubernetes", "args": [{"name": "name", "description": "", "default": ""}, {"name": "key", "description": "", "default": ""}, {"name": "namespace", "description": "", "default": ""}]}, "devops-workflow/members/github": {"name": "members", "url": "https://registry.terraform.io/modules/devops-workflow/members/github", "provider": "github", "downloads": 11, "description": "Terraform module to manage Github organization members", "source": "devops-workflow/members/github", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "users", "description": "List of organization member user maps to manage", "default": ""}]}, "10thmagnitude/consul/azurerm": {"name": "consul", "url": "https://registry.terraform.io/modules/10thmagnitude/consul/azurerm", "provider": "azurerm", "downloads": 11, "description": "A Terraform Module for how to run Consul on AzureRM using Terraform and Packer", "source": "10thmagnitude/consul/azurerm", "args": [{"name": "location", "description": "The location that the resources will run in (e.g. East US)", "default": ""}, {"name": "resource_group_name", "description": "The name of the resource group that the resources for consul will run in", "default": ""}, {"name": "subnet_id", "description": "The id of the subnet to deploy the cluster into", "default": ""}, {"name": "image_id", "description": "The URL of the Image to run in this cluster. Should be an image that had Consul installed and configured by the install-consul module.", "default": ""}, {"name": "key_data", "description": "The SSH public key that will be added to SSH authorized_users on the consul instances", "default": ""}, {"name": "gossip_encryption_key", "description": "The encryption key for consul to encrypt gossip traffic", "default": ""}, {"name": "allowed_inbound_cidr_blocks", "description": "A list of CIDR-formatted IP address ranges from which the Azure Instances will allow connections to Consul", "default": ""}, {"name": "tls_key_file_path", "description": "A path to the key used by Consul for RPC encrpytion with TLS", "default": ""}, {"name": "tls_cert_file_path", "description": "A path to the cert used by Consul for RPC encrpytion with TLS", "default": ""}, {"name": "tls_ca_file_path", "description": "A path to the ca used by Consul for RPC encrpytion with TLS", "default": ""}, {"name": "consul_install_path", "description": "A path to the directory where consul is installed", "default": "\"/etc/consul.d/\""}, {"name": "create_as_server", "description": "Start consul agent with -server", "default": "true"}, {"name": "instance_size", "description": "The size of Azure Instances to run for each node in the cluster (e.g. Standard_A0).", "default": "\"Standard_A1_v2\""}, {"name": "cluster_prefix", "description": "The name of the Consul cluster (e.g. consul-stage). This variable is used to namespace all resources created by this module.", "default": "\"consul\""}, {"name": "computer_name_prefix", "description": "The string that the name of each instance in the cluster will be prefixed with", "default": "\"consul\""}, {"name": "admin_user_name", "description": "The name of the administrator user for each instance in the cluster", "default": "\"consuladmin\""}, {"name": "instance_root_volume_size", "description": "Specifies the size of the instance root volume in GB. Default 40GB", "default": "40"}, {"name": "cluster_size", "description": "The number of nodes to have in the Consul cluster. We strongly recommended that you use either 3 or 5.", "default": "3"}, {"name": "subnet_ids", "description": "The subnet IDs into which the Azure Instances should be deployed. We recommend one subnet ID per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty.", "default": "[]"}, {"name": "allowed_ssh_cidr_blocks", "description": "A list of CIDR-formatted IP address ranges from which the Azure Instances will allow SSH connections", "default": "[]"}, {"name": "server_rpc_port", "description": "The port used by servers to handle incoming requests from other agents.", "default": "8300"}, {"name": "cli_rpc_port", "description": "The port used by all agents to handle RPC from the CLI.", "default": "8400"}, {"name": "serf_lan_port", "description": "The port used to handle gossip in the LAN. Required by all agents.", "default": "8301"}, {"name": "serf_wan_port", "description": "The port used by servers to gossip over the WAN to other servers.", "default": "8302"}, {"name": "http_api_port", "description": "The port used by clients to talk to the HTTP API", "default": "8500"}, {"name": "dns_port", "description": "The port used to resolve DNS queries.", "default": "8600"}, {"name": "ssh_port", "description": "The port used for SSH connections", "default": "22"}, {"name": "tags", "description": "A map of the tags to use on the resources that are deployed with this module.", "default": "{}"}]}, "akshaykarle/mongodbatlas/provider": {"name": "mongodbatlas", "url": "https://registry.terraform.io/modules/akshaykarle/mongodbatlas/provider", "provider": "provider", "downloads": 11, "description": "Terraform provider for MongoDB Atlas", "source": "akshaykarle/mongodbatlas/provider", "args": []}, "amancevice/slack-sms/aws": {"name": "slack-sms", "url": "https://registry.terraform.io/modules/amancevice/slack-sms/aws", "provider": "aws", "downloads": 11, "description": "Send group SMS messages from Slack slash commands", "source": "amancevice/slack-sms/aws", "args": [{"name": "api_execution_arn", "description": "Slackbot REST API Gateway deployment execution ARN.", "default": ""}, {"name": "kms_key_id", "description": "Slackbot KMS Key ID.", "default": ""}, {"name": "slash_command_dialog_element_label", "description": "Dialog textarea label.", "default": "\"Message\""}, {"name": "slash_command_role_name", "description": "Name of role for Slackbot Lambdas.", "default": "\"\""}, {"name": "slash_command_role_path", "description": "Path for Slackbot role.", "default": "\"/service-role/\""}, {"name": "api_parent_id", "description": "Slackbot slash commands parent resource ID.", "default": ""}, {"name": "slack_web_api_token", "description": "Slack Web API token.", "default": ""}, {"name": "slash_command_auth_channels_permission_denied", "description": "Permission denied message for channels.", "default": ""}, {"name": "slash_command_dialog_title", "description": "Dialog title.", "default": "\"Group SMS\""}, {"name": "slash_command_lambda_description", "description": "Lambda function description.", "default": "\"Slack slash command handler.\""}, {"name": "api_name", "description": "Slackbot REST API Gateway Name.", "default": ""}, {"name": "role_path", "description": "Path for slash command role.", "default": "\"/service-role/\""}, {"name": "slash_command_response", "description": "Slack response object.", "default": ""}, {"name": "target_topic_arn", "description": "ARN of target SNS topic for sending SMS messages.", "default": ""}, {"name": "sms_description", "description": "Lambda function description.", "default": "\"Slack slash command handler.\""}, {"name": "slash_command_role_inline_policy_name", "description": "Name of inline Slackbot role policy.", "default": "\"\""}, {"name": "sms_tags", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "sms_timeout", "description": "Lambda function timeout.", "default": "3"}, {"name": "callback_id", "description": "Slack callback ID.", "default": "\"\""}, {"name": "slash_command_auth_users_exclude", "description": "Optional list of Slack user IDs to blacklist.", "default": "[]"}, {"name": "slash_command_auth_users_permission_denied", "description": "Permission denied message for users.", "default": ""}, {"name": "slash_command_auto_encrypt_tokens", "description": "Flag to automatically encrypt tokens.", "default": "true"}, {"name": "slash_command_lambda_timeout", "description": "Lambda function timeout.", "default": "3"}, {"name": "auto_encrypt_tokens", "description": "Flag to automatically encrypt tokens.", "default": "true"}, {"name": "slash_command_dialog_element_hint", "description": "Dialog textarea hint.", "default": "\"This will send a text to a group.\""}, {"name": "slash_command_dialog_element_max_length", "description": "Dialog textarea max characters.", "default": "160"}, {"name": "sms_memory_size", "description": "Lambda function memory size.", "default": "128"}, {"name": "role_inline_policy_name", "description": "Name of inline slash command role policy.", "default": "\"\""}, {"name": "slash_command", "description": "Name of slash command.", "default": ""}, {"name": "slash_command_auth_channels_include", "description": "Optional list of Slack channel IDs to whitelist.", "default": "[]"}, {"name": "slash_command_auth_users_include", "description": "Optional list of Slack user IDs to whitelist.", "default": "[]"}, {"name": "slash_command_response_type", "description": "Direct or dialog.", "default": "\"direct\""}, {"name": "api_invoke_url", "description": "Slackbot REST API Gateway invocation URL.", "default": ""}, {"name": "role_name", "description": "Name of role for slash command Lambda.", "default": "\"\""}, {"name": "slack_verification_token", "description": "Slack verification token.", "default": ""}, {"name": "sms_function_name", "description": "Lambda function name", "default": "\"\""}, {"name": "slash_command_auth_channels_exclude", "description": "Optional list of Slack channel IDs to blacklist.", "default": "[]"}, {"name": "slash_command_lambda_function_name", "description": "Lambda function name", "default": "\"\""}, {"name": "slash_command_lambda_memory_size", "description": "Lambda function memory size.", "default": "128"}, {"name": "slash_command_lambda_tags", "description": "A set of key/value label pairs to assign to the function.", "default": ""}]}, "terraform-aws-modules/customer-gateway/aws": {"name": "customer-gateway", "url": "https://registry.terraform.io/modules/terraform-aws-modules/customer-gateway/aws", "provider": "aws", "downloads": 10, "description": "Terraform module which creates Customer Gateway and other resources necessary to configure a VPN Connection on AWS", "source": "terraform-aws-modules/customer-gateway/aws", "args": []}, "trung/ec2-instance-simple/aws": {"name": "ec2-instance-simple", "url": "https://registry.terraform.io/modules/trung/ec2-instance-simple/aws", "provider": "aws", "downloads": 10, "description": "Provision fleet of EC2 instances distributed across subnets", "source": "trung/ec2-instance-simple/aws", "args": [{"name": "name_prefix", "description": "Name prefix for EC2 instance(s)", "default": ""}, {"name": "count", "description": "Number of EC2 instance(s) to be provisioned", "default": "\"1\""}, {"name": "instance_type", "description": "Type of EC2 instance", "default": "\"t2.micro\""}, {"name": "ami", "description": "AMI used to provision", "default": ""}, {"name": "network_configuration", "description": "Network configuration (subnet_ids) used when provisioning EC2 instance(s)", "default": ""}, {"name": "security_configuration", "description": "Security configuration (security_group_ids, iam_instance_profile) used when provisioning EC2 instance(s)", "default": ""}, {"name": "tags", "description": "Addtional tags for EC2 instance(s)", "default": "{}"}]}, "ipolyzos/acs/azurerm": {"name": "acs", "url": "https://registry.terraform.io/modules/ipolyzos/acs/azurerm", "provider": "azurerm", "downloads": 10, "description": "Terraform module for the Azure Access Control Service (ACS) ", "source": "ipolyzos/acs/azurerm", "args": [{"name": "azure_subscription_id", "description": "Azure Subscription ID", "default": ""}, {"name": "azure_tenant_id", "description": "Azure Tenant ID", "default": ""}, {"name": "orchestration_platform", "description": "ACS Engine Platform to be deployed", "default": "\"Kubernetes\""}, {"name": "ssh_key", "description": "SSH public key in PEM format to apply to VMs", "default": ""}, {"name": "azure_client_id", "description": "Azure Client ID", "default": ""}, {"name": "azure_client_secret", "description": "Azure Client Secret", "default": ""}, {"name": "dns_prefix", "description": "DNS prefix for the cluster", "default": ""}, {"name": "azure_location", "description": "Azure Location, e.g. North Europe", "default": "\"North Europe\""}, {"name": "cluster_name", "description": "Name of the cluster", "default": "\"acs-engine-cluster\""}, {"name": "resource_group_name", "description": "Azure Resource Group Name", "default": "\"acs-engine-group\""}, {"name": "deployment_profile", "description": "Deployment Profule", "default": "\"test\""}, {"name": "virtual_network_name", "description": "Name of the virtual network", "default": "\"acs-engine_vnet\""}, {"name": "cidr", "description": "CIDR range of the VPC", "default": "\"169.100.0.0/16\""}, {"name": "cidr_subnet", "description": "CIDR range of the only subnet in the VPC", "default": "\"169.100.10.0/24\""}, {"name": "vm_size", "description": "Azure VM type", "default": "\"Standard_A2\""}, {"name": "master_vm_count", "description": "Number of master VMs to create", "default": "1"}, {"name": "first_master_ip", "description": "First IP address to be assigned to master nodes", "default": "\"169.100.10.1\""}, {"name": "worker_vm_count", "description": "Number of worker VMs to initially create", "default": "3"}, {"name": "admin_user", "description": "Administrative username for the VMs", "default": "\"acsuser\""}, {"name": "diagnostics_profile_enabled", "description": "Diagnostics Profile", "default": "\"false\""}, {"name": "kube", "description": "", "default": "[\n  \"kubernetes\"\n]"}, {"name": "swarm-dcos", "description": "", "default": "[\n  \"swarm\",\n  \"swarmmode\",\n  \"dcos\"\n]"}, {"name": "tags", "description": "", "default": "{}"}]}, "dshmelev/cloudformation-autoscaling/aws": {"name": "cloudformation-autoscaling", "url": "https://registry.terraform.io/modules/dshmelev/cloudformation-autoscaling/aws", "provider": "aws", "downloads": 10, "description": "Terraform module which creates Auto Scaling resources on AWS", "source": "dshmelev/cloudformation-autoscaling/aws", "args": [{"name": "existing_launch_configuration", "description": "Name of existing launch configuration to use. If empty new launch configuration will be created", "default": "\"\""}, {"name": "lc_name", "description": "Creates a unique name beginning with the specified prefix", "default": ""}, {"name": "image_id", "description": "The EC2 image ID to launch", "default": ""}, {"name": "instance_type", "description": "The size of instance to launch", "default": ""}, {"name": "iam_instance_profile", "description": "The IAM instance profile to associate with launched instances", "default": "\"\""}, {"name": "key_name", "description": "The key name that should be used for the instance", "default": "\"\""}, {"name": "security_groups", "description": "A list of security group IDs to assign to the launch configuration", "default": ""}, {"name": "associate_public_ip_address", "description": "Associate a public ip address with an instance in a VPC", "default": "false"}, {"name": "user_data", "description": "The user data to provide when launching the instance", "default": "\"\""}, {"name": "enable_monitoring", "description": "Enables/disables detailed monitoring. This is enabled by default.", "default": "true"}, {"name": "ebs_optimized", "description": "If true, the launched EC2 instance will be EBS-optimized", "default": "false"}, {"name": "root_block_device", "description": "Customize details about the root block device of the instance", "default": "[]"}, {"name": "ebs_block_device", "description": "Additional EBS block devices to attach to the instance", "default": "[]"}, {"name": "ephemeral_block_device", "description": "Customize Ephemeral (also known as 'Instance Store') volumes on the instance", "default": "[]"}, {"name": "spot_price", "description": "The price to use for reserving spot instances", "default": "0"}, {"name": "placement_tenancy", "description": "The tenancy of the instance. Valid values are 'default' or 'dedicated'", "default": "\"default\""}, {"name": "asg_name", "description": "The name of the auto scaling group", "default": ""}, {"name": "max_size", "description": "The maximum size of the auto scale group", "default": ""}, {"name": "min_size", "description": "The minimum size of the auto scale group", "default": ""}, {"name": "desired_capacity", "description": "The number of Amazon EC2 instances that should be running in the group", "default": ""}, {"name": "max_batch_size", "description": "Specifies the maximum number of instances that AWS CloudFormation updates", "default": "1"}, {"name": "pause_time", "description": "The amount of time that AWS CloudFormation pauses after making a change to a batch of instances to give those instances time to start software applications.", "default": "\"PT0S\""}, {"name": "wait_on_resource_signals", "description": "Specifies whether the Auto Scaling group waits on signals from new instances during an update.", "default": "false"}, {"name": "vpc_zone_identifier", "description": "A list of subnet IDs to launch resources in", "default": ""}, {"name": "default_cooldown", "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start", "default": "300"}, {"name": "health_check_grace_period", "description": "Time (in seconds) after instance comes into service before checking health", "default": "300"}, {"name": "health_check_type", "description": "Controls how health checking is done. Values are - EC2 and ELB", "default": ""}, {"name": "force_delete", "description": "Allows deleting the autoscaling group without waiting for all instances in the pool to terminate. You can force an autoscaling group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling", "default": "false"}, {"name": "load_balancers", "description": "A list of elastic load balancer names to add to the autoscaling group names", "default": "[]"}, {"name": "target_group_arns", "description": "A list of aws_alb_target_group ARNs, for use with Application Load Balancing", "default": "[]"}, {"name": "termination_policies", "description": "A list of policies to decide how the instances in the auto scale group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default", "default": "[\n  \"Default\"\n]"}, {"name": "suspended_processes", "description": "A list of processes to suspend for the AutoScaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer. Note that if you suspend either the Launch or Terminate process types, it can prevent your autoscaling group from functioning properly.", "default": "[]"}, {"name": "tags", "description": "A list of tag blocks", "default": "[]"}, {"name": "placement_group", "description": "The name of the placement group into which you'll launch your instances, if any", "default": "\"\""}, {"name": "metrics_granularity", "description": "The granularity to associate with the metrics to collect. The only valid value is 1Minute", "default": "\"1Minute\""}, {"name": "enabled_metrics", "description": "A list of metrics to collect. The allowed values are GroupMinSize, GroupMaxSize, GroupDesiredCapacity, GroupInServiceInstances, GroupPendingInstances, GroupStandbyInstances, GroupTerminatingInstances, GroupTotalInstances", "default": "[\n  \"GroupMinSize\",\n  \"GroupMaxSize\",\n  \"GroupDesiredCapacity\",\n  \"GroupInServiceInstances\",\n  \"GroupPendingInstances\",\n  \"GroupStandbyInstances\",\n  \"GroupTerminatingInstances\",\n  \"GroupTotalInstances\"\n]"}, {"name": "wait_for_capacity_timeout", "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior.", "default": "\"10m\""}, {"name": "min_elb_capacity", "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes", "default": "0"}, {"name": "wait_for_elb_capacity", "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over min_elb_capacity behavior.", "default": "false"}, {"name": "protect_from_scale_in", "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for terminination during scale in events.", "default": "false"}]}, "odzhu/openshift/aws": {"name": "openshift", "url": "https://registry.terraform.io/modules/odzhu/openshift/aws", "provider": "aws", "downloads": 10, "description": "Automated cloud reference architecture library based on proven design patterns using Terraform", "source": "odzhu/openshift/aws", "args": [{"name": "environment", "description": "Environment tag, e.g prod", "default": "\"default\""}, {"name": "vpc_id", "description": "VPC id which will host openshift", "default": ""}, {"name": "public_subnet_ids", "description": "List of Subnets", "default": ""}, {"name": "private_subnet_ids", "description": "List of Subnets", "default": ""}, {"name": "admin_ssh_key", "description": "Instance key name", "default": "\"\""}, {"name": "management_net", "description": "", "default": ""}, {"name": "public_domain", "description": "Public domain name used as parent for all environments", "default": ""}, {"name": "provisioner_ami", "description": "", "default": "\"ami-0d063c6b\""}, {"name": "provisioner_instance_type", "description": "", "default": "\"m3.large\""}, {"name": "provisioner_user_data", "description": "", "default": "\"provisioner_user_data.tpl\""}, {"name": "provisioner_name", "description": "", "default": "\"provisioner\""}, {"name": "master_node_count", "description": "", "default": "\"1\""}, {"name": "master_ami", "description": "", "default": "\"ami-0d063c6b\""}, {"name": "master_instance_type", "description": "", "default": "\"m3.large\""}, {"name": "master_user_data", "description": "", "default": "\"node_user_data.tpl\""}, {"name": "master_name", "description": "", "default": "\"master\""}, {"name": "infra_node_count", "description": "", "default": "\"1\""}, {"name": "infra_ami", "description": "", "default": "\"ami-0d063c6b\""}, {"name": "infra_instance_type", "description": "", "default": "\"m3.large\""}, {"name": "infra_user_data", "description": "", "default": "\"node_user_data.tpl\""}, {"name": "infra_name", "description": "", "default": "\"infra\""}, {"name": "app_node_count", "description": "", "default": "\"1\""}, {"name": "app_ami", "description": "", "default": "\"ami-0d063c6b\""}, {"name": "app_instance_type", "description": "", "default": "\"m3.large\""}, {"name": "app_user_data", "description": "", "default": "\"node_user_data.tpl\""}, {"name": "app_name", "description": "", "default": "\"app\""}, {"name": "allowed_ports_tcp_from_master_to_master", "description": "", "default": "[\n  \"53\",\n  \"8053\",\n  \"2049\",\n  \"2379\",\n  \"2380\",\n  \"4001\",\n  \"8443\"\n]"}, {"name": "allowed_ports_udp_from_master_to_master", "description": "", "default": "[\n  \"53\",\n  \"8053\",\n  \"2049\"\n]"}, {"name": "allowed_ports_tcp_from_node_to_master", "description": "", "default": "[\n  \"53\",\n  \"8053\",\n  \"443\",\n  \"8443\"\n]"}, {"name": "allowed_ports_udp_from_node_to_master", "description": "", "default": "[\n  \"53\",\n  \"8053\"\n]"}, {"name": "allowed_ovs_port_inside_cluster", "description": "", "default": "\"4789\""}, {"name": "allowed_ports_tcp_from_master_inside_cluster", "description": "", "default": "[\n  \"10250\"\n]"}, {"name": "allowed_ports_tcp_from_public_to_infra", "description": "", "default": "[\n  \"80\",\n  \"443\"\n]"}]}, "matti/kubernetes-engine/google": {"name": "kubernetes-engine", "url": "https://registry.terraform.io/modules/matti/kubernetes-engine/google", "provider": "google", "downloads": 10, "description": "", "source": "matti/kubernetes-engine/google", "args": [{"name": "settings", "description": "", "default": "{}"}]}, "olindata/ezvpc/aws": {"name": "ezvpc", "url": "https://registry.terraform.io/modules/olindata/ezvpc/aws", "provider": "aws", "downloads": 10, "description": "Creating AWS VPC resources for dummies (no subnetting required) in Terraform", "source": "olindata/ezvpc/aws", "args": [{"name": "name", "description": "Name to be used on all the resources as identifier", "default": "\"\""}, {"name": "cidr", "description": "The CIDR block for the VPC", "default": "\"\""}, {"name": "instance_tenancy", "description": "A tenancy option for instances launched into the VPC", "default": "\"default\""}, {"name": "number_of_azs", "description": "The number of AZs to span, this should be 2, 3 or 4", "default": "2"}, {"name": "cidr_addition_map", "description": "lookup map for cidr additions for automatic subnetting", "default": "{\n  \"2\": \"2\",\n  \"3\": \"3\",\n  \"4\": \"3\"\n}"}, {"name": "enable_dns_hostnames", "description": "Should be true to enable DNS hostnames in the VPC", "default": "false"}, {"name": "enable_dns_support", "description": "Should be true to enable DNS support in the VPC", "default": "true"}, {"name": "enable_nat_gateway", "description": "Should be true if you want to provision NAT Gateways for each of your private networks", "default": "false"}, {"name": "single_nat_gateway", "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks", "default": "false"}, {"name": "reuse_nat_ips", "description": "Should be true if you don't want EIPs to be created for your NAT Gateways and will instead pass them in via the 'external_nat_ip_ids' variable", "default": "false"}, {"name": "external_nat_ip_ids", "description": "List of EIP IDs to be assigned to the NAT Gateways (used in combination with reuse_nat_ips)", "default": "[]"}, {"name": "enable_dynamodb_endpoint", "description": "Should be true if you want to provision a DynamoDB endpoint to the VPC", "default": "false"}, {"name": "enable_s3_endpoint", "description": "Should be true if you want to provision an S3 endpoint to the VPC", "default": "false"}, {"name": "map_public_ip_on_launch", "description": "Should be false if you do not want to auto-assign public IP on launch", "default": "true"}, {"name": "enable_vpn_gateway", "description": "Should be true if you want to create a new VPN Gateway resource and attach it to the VPC", "default": "false"}, {"name": "private_propagating_vgws", "description": "A list of VGWs the private route table should propagate", "default": "[]"}, {"name": "public_propagating_vgws", "description": "A list of VGWs the public route table should propagate", "default": "[]"}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "enable_dhcp_options", "description": "Should be true if you want to specify a DHCP options set with a custom domain name, DNS servers, NTP servers, netbios servers, and/or netbios server type", "default": "false"}, {"name": "dhcp_options_domain_name", "description": "Specifies DNS name for DHCP options set", "default": "\"\""}, {"name": "dhcp_options_domain_name_servers", "description": "Specify a list of DNS server addresses for DHCP options set, default to AWS provided", "default": "[\n  \"AmazonProvidedDNS\"\n]"}, {"name": "dhcp_options_ntp_servers", "description": "Specify a list of NTP servers for DHCP options set", "default": "[]"}, {"name": "dhcp_options_netbios_name_servers", "description": "Specify a list of netbios servers for DHCP options set", "default": "[]"}, {"name": "dhcp_options_netbios_node_type", "description": "Specify netbios node_type for DHCP options set", "default": "\"\""}]}, "matti/remove-known-hosts/ssh": {"name": "remove-known-hosts", "url": "https://registry.terraform.io/modules/matti/remove-known-hosts/ssh", "provider": "ssh", "downloads": 10, "description": "", "source": "matti/remove-known-hosts/ssh", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "hosts", "description": "", "default": "[]"}]}, "Aplyca/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/Aplyca/efs/aws", "provider": "aws", "downloads": 10, "description": "A Terraform Module for how to create EFS on AWS", "source": "Aplyca/efs/aws", "args": [{"name": "name", "description": "Name prefix for all EFS resources.", "default": "\"App\""}, {"name": "access_sg_ids", "description": "A list of security groups Ids to grant access.", "default": "[]"}, {"name": "subnets", "description": "A list of subnets to associate with.", "default": "[]"}, {"name": "vpc_id", "description": "VPC Id where the EFS resources will be deployed.", "default": ""}, {"name": "tags", "description": "A mapping of tags to assign to the resource.", "default": "{}"}]}, "rahulkhengare/webapp/azurerm": {"name": "webapp", "url": "https://registry.terraform.io/modules/rahulkhengare/webapp/azurerm", "provider": "azurerm", "downloads": 10, "description": "Terraform Azure RM WebApp Module", "source": "rahulkhengare/webapp/azurerm", "args": [{"name": "resource_group_name", "description": "The name of the resource group in which the resources will be created.", "default": ""}, {"name": "location", "description": "Region where the resources are created.", "default": "\"eastus\""}, {"name": "plan_settings", "description": "Definition of the dedicated plan to use", "default": "{\n  \"capacity\": 1,\n  \"kind\": \"Linux\",\n  \"size\": \"S1\",\n  \"tier\": \"Standard\"\n}"}, {"name": "service_plan_name", "description": "The name of the App Service Plan, default = $web_app_name", "default": "\"\""}, {"name": "app_settings", "description": "A key-value pair of App Settings", "default": "{}"}, {"name": "site_config", "description": "A key-value pair for Site Config", "default": "[]"}, {"name": "name", "description": "The name of the web app", "default": ""}]}, "amancevice/cloud-project/google": {"name": "cloud-project", "url": "https://registry.terraform.io/modules/amancevice/cloud-project/google", "provider": "google", "downloads": 10, "description": "Terraform configuration for generic Google Cloud Project", "source": "amancevice/cloud-project/google", "args": [{"name": "services", "description": "Google Cloud API Services.", "default": "[\n  \"bigquery-json.googleapis.com\",\n  \"cloudapis.googleapis.com\",\n  \"clouddebugger.googleapis.com\",\n  \"cloudfunctions.googleapis.com\",\n  \"cloudresourcemanager.googleapis.com\",\n  \"cloudtrace.googleapis.com\",\n  \"compute.googleapis.com\",\n  \"datastore.googleapis.com\",\n  \"drive.googleapis.com\",\n  \"logging.googleapis.com\",\n  \"monitoring.googleapis.com\",\n  \"oslogin.googleapis.com\",\n  \"pubsub.googleapis.com\",\n  \"servicemanagement.googleapis.com\",\n  \"serviceusage.googleapis.com\",\n  \"sql-component.googleapis.com\",\n  \"storage-api.googleapis.com\",\n  \"storage-component.googleapis.com\"\n]"}, {"name": "bucket_name", "description": "Cloud Storage bucket name for Terraform state files.", "default": "\"\""}, {"name": "bucket_storage_class", "description": "Cloud Storage bucket storage class", "default": "\"MULTI_REGIONAL\""}, {"name": "project_id", "description": "Google Cloud Project ID.", "default": ""}, {"name": "project_name", "description": "Google Cloud Project Name.", "default": "\"\""}]}, "julienlevasseur/provider/openstack": {"name": "provider", "url": "https://registry.terraform.io/modules/julienlevasseur/provider/openstack", "provider": "openstack", "downloads": 9, "description": "Terraform Openstack Provider Module", "source": "julienlevasseur/provider/openstack", "args": [{"name": "username", "description": "", "default": ""}, {"name": "tenant_name", "description": "", "default": ""}, {"name": "password", "description": "", "default": ""}, {"name": "auth_url", "description": "", "default": ""}, {"name": "region", "description": "", "default": ""}]}, "KoeSystems/route53/aws": {"name": "route53", "url": "https://registry.terraform.io/modules/KoeSystems/route53/aws", "provider": "aws", "downloads": 9, "description": "Terraform AWS Route53 module to create public hosted zones.", "source": "KoeSystems/route53/aws", "args": [{"name": "domain_name", "description": "Route53 Domain Name", "default": ""}]}, "pyToshka/virtualbox/provider": {"name": "virtualbox", "url": "https://registry.terraform.io/modules/pyToshka/virtualbox/provider", "provider": "provider", "downloads": 9, "description": "VirtualBox provider for Terraform in progress ", "source": "pyToshka/virtualbox/provider", "args": []}, "AlexanderRMcNeill/secured-static-website/aws": {"name": "secured-static-website", "url": "https://registry.terraform.io/modules/AlexanderRMcNeill/secured-static-website/aws", "provider": "aws", "downloads": 9, "description": "Terraform module that creates everything you need to run secured static site", "source": "AlexanderRMcNeill/secured-static-website/aws", "args": [{"name": "bucket_name", "description": "The name of the bucket that will host your website assets.", "default": ""}, {"name": "default_root_object", "description": "The path to the object you wish to be served when the root of the website is hit.", "default": "\"index.html\""}, {"name": "custom_error_response_objects", "description": "Custom responses for different error status codes. The variable takes a list of objects containing error_code and response_page_path.", "default": "[]"}, {"name": "hosted_zone_id", "description": "The ID of the hosted zone that you wish to create the website records under.", "default": ""}, {"name": "domain_names", "description": "List of domain names for the website to run on. For example ['example.com', 'www.example.com'].", "default": ""}, {"name": "acm_certificate_arn", "description": "The certificate you wish to secure the website with. Note: The ACM certificate must be in US-EAST-1 and be for all of the domain names you have specified in the domain_names variable.", "default": ""}, {"name": "distribution_price_class", "description": "The price class of the Cloudfront distribution. This effects how many edge locations the distribution has. The value has to be PriceClass_All, PriceClass_200, or PriceClass_100.", "default": "\"PriceClass_100\""}]}, "matti/external-registry/kontena": {"name": "external-registry", "url": "https://registry.terraform.io/modules/matti/external-registry/kontena", "provider": "kontena", "downloads": 9, "description": "", "source": "matti/external-registry/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "url", "description": "", "default": ""}, {"name": "username", "description": "", "default": ""}, {"name": "email", "description": "", "default": ""}, {"name": "password", "description": "", "default": ""}]}, "ebekker/cached-ami/aws": {"name": "cached-ami", "url": "https://registry.terraform.io/modules/ebekker/cached-ami/aws", "provider": "aws", "downloads": 9, "description": "A Terraform Module that provides a replacement for the aws_ami data source supporting cached results", "source": "ebekker/cached-ami/aws", "args": [{"name": "most_recent", "description": "See `aws_ami.most_recent`.", "default": "false"}, {"name": "executable_users", "description": "See `aws_ami.executable_users`.", "default": "[]"}, {"name": "owners", "description": "See `aws_ami.owners`.", "default": "[]"}, {"name": "name_regex", "description": "See `aws_ami.name_regex`.", "default": "\"\""}, {"name": "filters", "description": "See `aws_ami.filter`.\nInstead of specifying multiple filter sub-clauses, due to limitations on module input value\ntypes, these have to be specified as an array of objects with `name` and `values` properties.\n", "default": "[]"}, {"name": "cache_key", "description": "A unique key across the named cache root that uniquely identifies this module instance's resolved values.\n", "default": ""}, {"name": "cache_expires", "description": "Time in seconds of how long to cache a value.\nIf unspecifed, defaults to cache expires setting of the supporting tools (currently 12 hours).\n", "default": "-1"}, {"name": "cache_root", "description": "The path of a cache root directory which will store the cached value.\n", "default": "\"_TMP/amis\""}]}, "cloudposse/kms-key/aws": {"name": "kms-key", "url": "https://registry.terraform.io/modules/cloudposse/kms-key/aws", "provider": "aws", "downloads": 9, "description": "Terraform module to provision a KMS key with alias", "source": "cloudposse/kms-key/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Application or solution name (e.g. `app`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "deletion_window_in_days", "description": "Duration in days after which the key is deleted after destruction of the resource", "default": "10"}, {"name": "enable_key_rotation", "description": "Specifies whether key rotation is enabled", "default": "\"true\""}, {"name": "description", "description": "The description of the key as viewed in AWS console", "default": "\"Parameter Store KMS master key\""}, {"name": "alias", "description": "The display name of the alias. The name must start with the word `alias` followed by a forward slash", "default": "\"\""}]}, "Aplyca/cloudfront/aws": {"name": "cloudfront", "url": "https://registry.terraform.io/modules/Aplyca/cloudfront/aws", "provider": "aws", "downloads": 9, "description": "Create AWs CloudFront distribution", "source": "Aplyca/cloudfront/aws", "args": [{"name": "name", "description": "Name prefix for all CloudFront resources.", "default": "\"App\""}, {"name": "origin", "description": "Origin for CloudFront distribution", "default": "\"\""}, {"name": "aliases", "description": "A list of DNS aliases to associate with.", "default": "[]"}, {"name": "tags", "description": "A mapping of tags to assign to the resource.", "default": "{}"}, {"name": "custom_origin_config", "description": "Custom origin config", "default": "[]"}, {"name": "s3_origin_config", "description": "S3 origin config", "default": "[]"}, {"name": "forwarded_headers", "description": "Forwarded headers", "default": "[]"}, {"name": "access_identity", "description": "Enalbe Cloudfront origin access identity creation", "default": "false"}, {"name": "certificate", "description": "ACM certificate arn", "default": "\"\""}]}, "gruntwork-io/couchbase/aws": {"name": "couchbase", "url": "https://registry.terraform.io/modules/gruntwork-io/couchbase/aws", "provider": "aws", "downloads": 8, "description": "Reusable infrastructure modules for running Couchbase on AWS", "source": "gruntwork-io/couchbase/aws", "args": [{"name": "ami_id", "description": "The ID of the AMI to run in the cluster. This should be an AMI built from the Packer template under examples/couchbase-ami/couchbase.json. Leave blank to use one of the example AMIs we have published publicly.", "default": "\"\""}, {"name": "ssh_key_name", "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.", "default": "\"\""}, {"name": "data_volume_device_name", "description": "The device name to use for the EBS Volume used for the data directory on Couchbase nodes.", "default": "\"/dev/xvdh\""}, {"name": "index_volume_mount_point", "description": "The mount point (folder path) to use for the EBS Volume used for the index directory on Couchbase nodes.", "default": "\"/couchbase-index\""}, {"name": "sync_gateway_load_balancer_port", "description": "The port the load balancer should listen on for Sync Gateway requests.", "default": "4984"}, {"name": "cluster_name", "description": "What to name the Couchbase cluster and all of its associated resources", "default": "\"couchbase-server\""}, {"name": "data_volume_mount_point", "description": "The mount point (folder path) to use for the EBS Volume used for the data directory on Couchbase nodes.", "default": "\"/couchbase-data\""}, {"name": "index_volume_device_name", "description": "The device name to use for the EBS Volume used for the index directory on Couchbase nodes.", "default": "\"/dev/xvdi\""}, {"name": "volume_owner", "description": "The OS user who should be made the owner of the data and index volume mount points.", "default": "\"couchbase\""}, {"name": "couchbase_load_balancer_port", "description": "The port the load balancer should listen on for Couchbase Web Console requests.", "default": "8091"}]}, "poseidon/kubernetes/digitalocean": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/poseidon/kubernetes/digitalocean", "provider": "digitalocean", "downloads": 8, "description": "Typhoon Digital Ocean - minimal and free Kubernetes (mirror)", "source": "poseidon/kubernetes/digitalocean", "args": [{"name": "worker_count", "description": "Number of workers", "default": "\"1\""}, {"name": "ssh_fingerprints", "description": "SSH public key fingerprints. (e.g. see `ssh-add -l -E md5`)", "default": ""}, {"name": "pod_cidr", "description": "CIDR IPv4 range to assign Kubernetes pods", "default": "\"10.2.0.0/16\""}, {"name": "cluster_domain_suffix", "description": "Queries for domains with the suffix will be answered by coredns. Default is cluster.local (e.g. foo.default.svc.cluster.local) ", "default": "\"cluster.local\""}, {"name": "controller_count", "description": "Number of controllers (i.e. masters)", "default": "\"1\""}, {"name": "worker_type", "description": "Droplet type for workers (e.g. s-1vcpu-1gb, s-1vcpu-2gb, s-2vcpu-2gb)", "default": "\"s-1vcpu-1gb\""}, {"name": "image", "description": "Container Linux image for instances (e.g. coreos-stable)", "default": "\"coreos-stable\""}, {"name": "service_cidr", "description": "CIDR IPv4 range to assign Kubernetes services.\nThe 1st IP will be reserved for kube_apiserver, the 10th IP will be reserved for coredns.\n", "default": "\"10.3.0.0/16\""}, {"name": "region", "description": "Digital Ocean region (e.g. nyc1, sfo2, fra1, tor1)", "default": ""}, {"name": "controller_type", "description": "Droplet type for controllers (e.g. s-2vcpu-2gb, s-2vcpu-4gb, s-4vcpu-8gb).", "default": "\"s-2vcpu-2gb\""}, {"name": "controller_clc_snippets", "description": "Controller Container Linux Config snippets", "default": "[]"}, {"name": "worker_clc_snippets", "description": "Worker Container Linux Config snippets", "default": "[]"}, {"name": "cluster_name", "description": "Unique cluster name (prepended to dns_zone)", "default": ""}, {"name": "dns_zone", "description": "Digital Ocean domain (i.e. DNS zone) (e.g. do.example.com)", "default": ""}, {"name": "asset_dir", "description": "Path to a directory where generated assets should be placed (contains secrets)", "default": ""}]}, "julienlevasseur/instance/openstack": {"name": "instance", "url": "https://registry.terraform.io/modules/julienlevasseur/instance/openstack", "provider": "openstack", "downloads": 8, "description": "Terraform OpenStack Instance Module", "source": "julienlevasseur/instance/openstack", "args": [{"name": "name", "description": "A unique name for the resource", "default": ""}, {"name": "image_name", "description": "The name of the desired image for the server", "default": ""}, {"name": "flavor_name", "description": "The name of the desired flavor for the server", "default": ""}, {"name": "key_pair", "description": "The key pair must already be created and associated with the tenant's account", "default": ""}, {"name": "security_groups", "description": "An array of one or more security group names to associate with the server", "default": ""}, {"name": "network", "description": "An array of one or more networks to attach to the instance", "default": ""}]}, "anugnes/private-vpc/aws": {"name": "private-vpc", "url": "https://registry.terraform.io/modules/anugnes/private-vpc/aws", "provider": "aws", "downloads": 8, "description": "Terraform module to create a custom VPC in AWS", "source": "anugnes/private-vpc/aws", "args": [{"name": "name", "description": "VPC name visible from the AWS console", "default": ""}, {"name": "vpc_cidr", "description": "CIDR block to use for the VPC", "default": ""}, {"name": "public_subnets", "description": "Comma separated list of CIDR blocks for the public subnets (1 subnet per availability zone)", "default": ""}, {"name": "private_subnets", "description": "Comma separated list of CIDR blocks for the private subnets (1 subnet per availability zone)", "default": ""}, {"name": "azs", "description": "Comma separated list of availability zones to include in the VPC", "default": ""}]}, "matti/cli-outputs/kontena": {"name": "cli-outputs", "url": "https://registry.terraform.io/modules/matti/cli-outputs/kontena", "provider": "kontena", "downloads": 8, "description": "", "source": "matti/cli-outputs/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}]}, "matti/cloud-nodes/kontena": {"name": "cloud-nodes", "url": "https://registry.terraform.io/modules/matti/cloud-nodes/kontena", "provider": "kontena", "downloads": 8, "description": "", "source": "matti/cloud-nodes/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "count", "description": "", "default": ""}, {"name": "type", "description": "", "default": ""}]}, "viceIII/elasticsearch/aws": {"name": "elasticsearch", "url": "https://registry.terraform.io/modules/viceIII/elasticsearch/aws", "provider": "aws", "downloads": 8, "description": "", "source": "viceIII/elasticsearch/aws", "args": [{"name": "ebs_volume_size", "description": "", "default": "\"10\""}, {"name": "name", "description": "", "default": ""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "subnet_ids", "description": "", "default": ""}, {"name": "elasticsearch_version", "description": "", "default": "\"5.5\""}, {"name": "itype", "description": "", "default": "\"t2.medium.elasticsearch\""}, {"name": "icount", "description": "", "default": "1"}, {"name": "dedicated_master", "description": "", "default": "false"}, {"name": "mtype", "description": "", "default": "\"\""}, {"name": "mcount", "description": "", "default": "0"}, {"name": "zone_awareness", "description": "", "default": "false"}, {"name": "ingress_allow_security_groups", "description": "", "default": "[]"}, {"name": "ingress_allow_cidr_blocks", "description": "", "default": "[]"}, {"name": "rest_action_multi_allow_explicit_index", "description": "", "default": "\"true\""}, {"name": "indices_fielddata_cache_size", "description": "", "default": "\"\""}, {"name": "indices_query_bool_max_clause_count", "description": "", "default": "1024"}, {"name": "snapshot_start", "description": "", "default": "0"}, {"name": "aws_region", "description": "", "default": ""}, {"name": "aws_account_id", "description": "", "default": ""}]}, "nicholasjackson/k8s/digitalocean": {"name": "k8s", "url": "https://registry.terraform.io/modules/nicholasjackson/k8s/digitalocean", "provider": "digitalocean", "downloads": 8, "description": "Terraform / Packer example for Kubernetes on DigitalOcean", "source": "nicholasjackson/k8s/digitalocean", "args": [{"name": "namespace", "description": "Namespace for the application", "default": "\"k8s_cluster\""}, {"name": "region", "description": "Digital Ocean region in which to create the cluster", "default": "\"lon1\""}, {"name": "size", "description": "Digital Ocean droplet size, default is 2core with 2gb of ram, $15 per month per droplet", "default": "\"s-2vcpu-2gb\""}, {"name": "ssh_public_key", "description": "SSH public key to add to droplets", "default": ""}, {"name": "ssh_private_key", "description": "SSH public key to add to droplets", "default": ""}, {"name": "image_name", "description": "Digital Ocean image name", "default": ""}, {"name": "k8s_token", "description": "K8s token to use for joining clusters, this should be generated uniquely for each cluster, if this is not provided, Terraform will generate a token automatically", "default": "\"\""}, {"name": "k8s_version", "description": "Kubernetes version", "default": "\"v1.9.4\""}, {"name": "k8s_workers", "description": "Number of Kubernetes worker nodes", "default": "2"}, {"name": "digitalocean_api_token", "description": "API token for digital ocean, required by the K8s cloud controller", "default": ""}]}, "nicholasjackson/hashicorp-suite/gcp": {"name": "hashicorp-suite", "url": "https://registry.terraform.io/modules/nicholasjackson/hashicorp-suite/gcp", "provider": "gcp", "downloads": 8, "description": "Terraform module to run Nomad on Google Cloud", "source": "nicholasjackson/hashicorp-suite/gcp", "args": [{"name": "instance_type", "description": "", "default": "\"n1-standard-1\""}, {"name": "zone", "description": "Zone to launch instances into", "default": ""}, {"name": "namespace", "description": "Namespace for application, all resources will be prefixed with namespace", "default": ""}, {"name": "min_servers", "description": "The minimum number of servers to add to the autoscale group", "default": ""}, {"name": "max_servers", "description": "The maximum number of servers allowed in the autoscale group", "default": ""}, {"name": "min_agents", "description": "The minimum number of agents to add to the autoscale group", "default": ""}, {"name": "max_agents", "description": "The maximum number of agents allowed in the autoscale group", "default": ""}, {"name": "vpc_id", "description": "Name of the network to attach instances to", "default": ""}, {"name": "key_name", "description": "SSH key to add to instances", "default": ""}, {"name": "consul_version", "description": "Consul version to install", "default": ""}, {"name": "consul_join_tag_key", "description": "AWS Tag to use for consul auto-join", "default": ""}, {"name": "consul_join_tag_value", "description": "Value to search for in auto-join tag to use for consul auto-join", "default": ""}, {"name": "consul_enabled", "description": "Is consul enabled on this instance", "default": ""}, {"name": "nomad_datacentre", "description": "Default datacenter for Nomad", "default": "\"dc1\""}, {"name": "nomad_region", "description": "Default datacenter for Nomad", "default": "\"gcp\""}, {"name": "nomad_enabled", "description": "Is nomad enabled on this instance", "default": ""}, {"name": "nomad_version", "description": "Nomad version to install", "default": ""}]}, "kjanshair/virtual-machine/azurerm": {"name": "virtual-machine", "url": "https://registry.terraform.io/modules/kjanshair/virtual-machine/azurerm", "provider": "azurerm", "downloads": 8, "description": "A Terraform module used to create one or more Linux Virtual Machine.", "source": "kjanshair/virtual-machine/azurerm", "args": [{"name": "location", "description": "Specify region of Azure Virtual Machines.", "default": "\"West US\""}, {"name": "resource_group", "description": "Specify resource group of Azure Virtual Machines.", "default": "\"Default\""}, {"name": "private_ip_addresses", "description": "Specify list if private_ips assigned to each VMs respectively", "default": ""}, {"name": "nsg_id", "description": "Specify Network Security Group ID attached to the subnet.", "default": ""}, {"name": "availability_set_name", "description": "Name of the Availability Set.", "default": "\"default\""}, {"name": "subnet_id", "description": "Specify ID of the subnet.", "default": ""}, {"name": "nb_instances", "description": "Specify number of vms to be created.", "default": "\"1\""}, {"name": "ssh_key", "description": "Pass public SSH key for each VM", "default": ""}, {"name": "os_image_publisher", "description": "VM image publisher", "default": "\"credativ\""}, {"name": "os_image_offer", "description": "Specify list if private_ips assigned to each VMs respectively", "default": "\"Debian\""}, {"name": "os_image_sku", "description": "Specify OS image SKU.", "default": "9"}, {"name": "os_image_version", "description": "Specify OS image Version.", "default": "\"latest\""}, {"name": "vm_sizes", "description": "Specify Virtual Machine sizes.", "default": "\"Standard_DS1_v2\""}, {"name": "vm_managed_disk_type", "description": "Specify VM OS Disk Type.", "default": "\"Premium_LRS\""}, {"name": "fault_domain_count", "description": "Specify Availability Set Fault Domain.", "default": "2"}, {"name": "update_domain_count", "description": "Specify Availability Set Update Domain.", "default": "2"}, {"name": "host_names", "description": "Specify Host Name for each virtual machine starting with 0 respectively.", "default": ""}, {"name": "backend_address_pools_ids", "description": "Backend Address Pool IDs used to attached each VM behind Azure Load Balancer.", "default": ""}]}, "nicholasjackson/gcp-vpn/aws": {"name": "gcp-vpn", "url": "https://registry.terraform.io/modules/nicholasjackson/gcp-vpn/aws", "provider": "aws", "downloads": 8, "description": "Terraform module to create a VPN between AWS and GCP", "source": "nicholasjackson/gcp-vpn/aws", "args": [{"name": "aws_cidr", "description": "CIDR group for AWS network", "default": ""}, {"name": "gcp_cidr", "description": "CIDR group for GCP network", "default": ""}, {"name": "gcp_network", "description": "Network name for GCP", "default": ""}, {"name": "gcp_region", "description": "Region for GCP", "default": ""}, {"name": "aws_region", "description": "Region for AWS", "default": ""}, {"name": "aws_vpc", "description": "VPC ID for AWS", "default": ""}, {"name": "aws_sg", "description": "Security group for AWS Network", "default": ""}, {"name": "aws_route_table_id", "description": "Routing table ID for AWS", "default": ""}]}, "google-terraform-modules/cloudfunctions-http/google": {"name": "cloudfunctions-http", "url": "https://registry.terraform.io/modules/google-terraform-modules/cloudfunctions-http/google", "provider": "google", "downloads": 8, "description": "Create Google CloudFunctions HTTP ", "source": "google-terraform-modules/cloudfunctions-http/google", "args": [{"name": "function_name", "description": "A user-defined name of the function. Function names must be unique globally", "default": ""}, {"name": "function_description", "description": "Description of the function", "default": "\"\""}, {"name": "function_memory", "description": "Memory (in MB), available to the function. Allowed values are: 128MB, 256MB, 512MB, 1024MB, and 2048MB", "default": "\"128\""}, {"name": "function_timeout", "description": "Timeout (in seconds) for the function. Default value is 60 seconds. Cannot be more than 540 seconds", "default": "\"30\""}, {"name": "function_entry_point", "description": "Name of a JavaScript function that will be executed when the Google Cloud Function is triggered", "default": ""}, {"name": "bucket_name", "description": "The name of the containing bucket", "default": ""}, {"name": "bucket_archive_name", "description": "The name of the object", "default": "\"index.zip\""}, {"name": "local_path", "description": "A path to the data you want to upload", "default": ""}]}, "ovh/publiccloud-k8s/ovh": {"name": "publiccloud-k8s", "url": "https://registry.terraform.io/modules/ovh/publiccloud-k8s/ovh", "provider": "ovh", "downloads": 8, "description": "", "source": "ovh/publiccloud-k8s/ovh", "args": [{"name": "region", "description": "The target openstack region", "default": ""}, {"name": "name", "description": "Cluster name", "default": ""}, {"name": "ssh_authorized_keys", "description": "SSH public keys", "default": "[]"}, {"name": "key_pair", "description": "Predefined keypair name to use with instances", "default": "\"\""}, {"name": "domain", "description": "The domain of the cluster.", "default": "\"local\""}, {"name": "datacenter", "description": "The datacenter of the cluster.", "default": "\"dc1\""}, {"name": "image_id", "description": "The ID of the glance image to run in the cluster. If `post_install_module` is set to `false`, this should be an image built from the Packer template under examples/k8s-glance-image/k8s.json. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"\""}, {"name": "image_name", "description": "The name of the glance image to run in the cluster. If `post_install_module` is set to `false`, this should be an image built from the Packer template under examples/k8s-glance-image/k8s.json. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"CoreOS Stable - OVH Kubernetes\""}, {"name": "image_version", "description": "The version of the prebuilt glance image to run in the cluster.", "default": "\"latest\""}, {"name": "flavor_name", "description": "The flavor name that will be used for k8s nodes.\nkube-dns may fail if only one VCPU is present (see kubernetes/kubernetes#38806).\nIt is not recommanded to use sandbox instances `s1-2` and `s1-4`.\n", "default": "\"s1-8\""}, {"name": "count", "description": "Number of nodes", "default": "\"1\""}, {"name": "antiaffinity", "description": "Determines if nodes have to be spawned within anti affinity groups of 3 nodes", "default": "false"}, {"name": "create_secgroups", "description": "Determines if the module is responsible for security groups creation. If set leaved to `false`, sec group ids shall be given in input variable `security_group_ids`", "default": "false"}, {"name": "metadata", "description": "A map of metadata to add to all resources supporting it.", "default": "{}"}, {"name": "subnet_ids", "description": "The list of subnets ids to deploy k8s nodes in.\nIf `count` is specified, will spawn `count` k8s node\naccross the list of subnets. Conflicts with `subnets`.\n", "default": "[]"}, {"name": "subnets", "description": "The list of subnets CIDR blocks to deploy k8s nodes in.\nIf `count` is specified, will spawn `count` k8s node\naccross the list of subnets. Conflicts with `subnet_ids`.\n", "default": "[\n  \"\"\n]"}, {"name": "security_group_ids", "description": "The list of security groups ids to attach to nodes. You should make use of the module k8s-secgroups. This is required if associate_public_ipv4 is set to `true`", "default": "[]"}, {"name": "cacert", "description": "Optional ca certificate to add to the nodes. If `cfssl` is set to `true`, cfssl will use `cacert` along with `cakey` to generate certificates. Otherwise will generate a new self signed ca.", "default": "\"\""}, {"name": "cacert_key", "description": "Optional ca certificate key. If `cfssl` is set to `true`, cfssl will use `cacert` along with `cakey` to generate certificates. Otherwise will generate a new self signed ca.", "default": "\"\""}, {"name": "host_cidr", "description": "CIDR IPv4 range to assign to openstack instances", "default": "\"\""}, {"name": "pod_cidr", "description": "CIDR IPv4 range to assign Kubernetes pods", "default": "\"10.2.0.0/16\""}, {"name": "service_cidr", "description": "CIDR IPv4 range to assign Kubernetes services.\nThe 1st IP will be reserved for kube_apiserver, the 10th IP will be reserved for kube-dns.\n", "default": "\"10.3.0.0/16\""}, {"name": "post_install_modules", "description": "Setting this variable to true will assume the necessary software to boot the cluster hasn't packaged in the image and thus will be post provisionned. Defaults to `true`", "default": "false"}, {"name": "ssh_user", "description": "The ssh username of the image used to boot the k8s cluster.", "default": "\"core\""}, {"name": "ssh_bastion_host", "description": "The address of the bastion host used to post provision the k8s cluster. This may be required if `post_install_module` is set to `true`", "default": "\"\""}, {"name": "ssh_bastion_user", "description": "The ssh username of the bastion host used to post provision the k8s cluster. This may be required if `post_install_module` is set to `true`", "default": "\"\""}, {"name": "associate_public_ipv4", "description": "Associate a public ipv4 with the k8s nodes", "default": "false"}, {"name": "associate_private_ipv4", "description": "Associate a private ipv4 with the k8s nodes", "default": "true"}, {"name": "master_mode", "description": "Determines if the node is a master", "default": "false"}, {"name": "ip_dns_domains", "description": "Every public ipv4 addr at OVH is registered as a A record in DNS zones according to the format ip 1.2.3.4 > ip4.ip-q1-2-3.eu for EU regions or  ip4.ip-1-2-3.net for other ones. This variables maps the domain name to use according to the region.", "default": "{\n  \"BHS3\": \"net\",\n  \"DE1\": \"eu\",\n  \"GRA1\": \"eu\",\n  \"GRA3\": \"eu\",\n  \"SBG3\": \"eu\",\n  \"UK1\": \"eu\",\n  \"WAW1\": \"eu\"\n}"}, {"name": "default_ip_dns_domains", "description": "Default value for `ip_dns_domains`", "default": "\"net\""}, {"name": "cfssl", "description": "Defines if cfssl shall be used as a pki. If set to `true`\nand no cacert with associated private key is given as argument, cfssl will\ngenerate its own self signed ca cert.\n\nIf `cfssl_endpoint` is left blank, a cfssl server is started on the first cluster node.\nA systemd unit will then get tls keypairs for the etcd service.\n\nAt every etcd agent restart, if tls keypair is older than 1h,\na new keypair will be fetched.\n", "default": "false"}, {"name": "cfssl_endpoint", "description": "If `cfssl` is set to `true`, this argument can be used to specify a target cfssl endpoint. Otherwise the first ipv4 given as argument in `private_ipv4_addrs` will be used as the cfssl endpoint in instances userdata.", "default": "\"\""}, {"name": "cfssl_ca_validity_period", "description": "validity period for generated CA", "default": "\"43800h\""}, {"name": "cfssl_cert_validity_period", "description": "default validity period for generated certs", "default": "\"8760h\""}, {"name": "cfssl_key_algo", "description": "generated certs key algo", "default": "\"rsa\""}, {"name": "cfssl_key_size", "description": "generated certs key size", "default": "\"2048\""}, {"name": "cfssl_bind", "description": "cfssl service bind addr", "default": "\"0.0.0.0\""}, {"name": "cfssl_port", "description": "cfssl service bind port", "default": "\"8888\""}, {"name": "private_ipv4_addrs", "description": "list of nodes ipv4 addrs. Required if `master_mode` is true.", "default": "[]"}, {"name": "etcd", "description": "Defines if node shall be started as an etcd cluster member. If set to `true`\nand no `etcd_initial_cluster` is given as argument, etcd will\nbootstrap a new cluster.\n", "default": "false"}, {"name": "etcd_initial_cluster", "description": "etcd initial cluster. Useful to join an existing cluster. Useful if `master_mode` is true.", "default": "\"\""}, {"name": "etcd_endpoints", "description": "etcd endpoints to call to query the etcd cluster", "default": "\"\""}, {"name": "worker_mode", "description": "Determines if the node is a worker", "default": "false"}, {"name": "api_endpoint", "description": "Kubernetes API endpoint (single IP or hostname) with port", "default": "\"127.0.0.1:6443\""}]}, "telia-oss/lambda/aws": {"name": "lambda", "url": "https://registry.terraform.io/modules/telia-oss/lambda/aws", "provider": "aws", "downloads": 8, "description": "Lambda module for Terraform.", "source": "telia-oss/lambda/aws", "args": [{"name": "name_prefix", "description": "A prefix used for naming resources.", "default": ""}, {"name": "runtime", "description": "Lambda runtime. Defaults to Go 1.x.", "default": "\"go1.x\""}, {"name": "memory_size", "description": "Amount of memory in MB your Lambda Function can use at runtime.", "default": "128"}, {"name": "timeout", "description": "The amount of time your Lambda Function has to run in seconds.", "default": "300"}, {"name": "subnet_ids", "description": "A list of subnet IDs associated with the Lambda function.", "default": "[]"}, {"name": "filename", "description": "The path to the function's deployment package within the local filesystem.", "default": ""}, {"name": "policy", "description": "A policy document for the lambda execution role.", "default": ""}, {"name": "handler", "description": "The function entrypoint in your code.", "default": "\"main\""}, {"name": "variables", "description": "Map of environment variables.", "default": "{\n  \"NA\": \"NA\"\n}"}, {"name": "security_group_ids", "description": "A list of security group IDs associated with the Lambda function.", "default": "[]"}, {"name": "tags", "description": "A map of tags (key-value pairs) passed to resources.", "default": "{}"}]}, "cloudposse/ec2-ami-backup/aws": {"name": "ec2-ami-backup", "url": "https://registry.terraform.io/modules/cloudposse/ec2-ami-backup/aws", "provider": "aws", "downloads": 7, "description": "Terraform module for automatic & scheduled AMI creation", "source": "cloudposse/ec2-ami-backup/aws", "args": [{"name": "backup_schedule", "description": "", "default": "\"cron(00 19 * * ? *)\""}, {"name": "ami_owner", "description": "", "default": "\"\""}, {"name": "reboot", "description": "", "default": "\"false\""}, {"name": "block_device_mappings", "description": "List of block device mappings to be included/excluded from created AMIs. With default value of [], AMIs will include all attached EBS volumes ", "default": "[]"}, {"name": "name", "description": "", "default": "\"\""}, {"name": "namespace", "description": "", "default": "\"\""}, {"name": "stage", "description": "", "default": "\"\""}, {"name": "cleanup_schedule", "description": "", "default": "\"cron(05 19 * * ? *)\""}, {"name": "region", "description": "", "default": "\"\""}, {"name": "retention_days", "description": "", "default": ""}, {"name": "instance_id", "description": "", "default": ""}]}, "graymeta/platform/aws": {"name": "platform", "url": "https://registry.terraform.io/modules/graymeta/platform/aws", "provider": "aws", "downloads": 7, "description": "Terraform module for the deployment of the GrayMeta Platform into AWS. Contact GrayMeta for an enterprise license to gain access to the required AMIs.", "source": "graymeta/platform/aws", "args": [{"name": "box_client_id", "description": "Box Client ID key. See box.com", "default": "\"\""}, {"name": "harvest_complete_stow_fields", "description": "Optional. A comma-delimited list of strings that correspond to the names of Stow metadata keys or Stow tag keys to include in harvest complete notification messages. Case insensitive.", "default": "\"\""}, {"name": "sqs_s3notifications_arn", "description": "Optional. The ARN of the queue that will be subscribed to s3 ObjectCreated notifications.", "default": "\"\""}, {"name": "sqs_s3notifications", "description": "Optional. The queue url of the s3 notifications queue . Optional.", "default": "\"\""}, {"name": "client_secret_fe", "description": "32 character string used to generate tokens", "default": "\"\""}, {"name": "harvest_polling_time", "description": "Live Harvest Polling time.  Default: 6h", "default": "\"6h\""}, {"name": "s3subscriber_priority", "description": "Optional. The priority to assign jobs registered by s3 notifications. Valid values 1-10 (1=highest priority). Set to 0 for default priority.", "default": "\"0\""}, {"name": "services_subnet_id_1", "description": "The first subnet ID to use to deploy the services cluster into. Needs to be in a different AZ than services_subnet_id_2", "default": ""}, {"name": "db_instance_size", "description": "The size of the instance to use for the RDS database instance", "default": "\"db.t2.small\""}, {"name": "elasticsearch_instance_count", "description": "Number of data instances in the cluster. Because zone awareness is enabled, this should always be an even number", "default": "\"2\""}, {"name": "ecs_amis", "description": "map of region to ami for ecs nodes", "default": "{\n  \"ap-southeast-2\": \"ami-9ca17bfe\",\n  \"eu-west-1\": \"ami-a2687e48\",\n  \"us-east-1\": \"ami-18f5da67\",\n  \"us-east-2\": \"ami-e49da581\",\n  \"us-west-2\": \"ami-4b3e6833\"\n}"}, {"name": "region", "description": "The region to deploy into", "default": ""}, {"name": "services_instance_type", "description": "The Instance Type to use for Services nodes", "default": "\"m4.large\""}, {"name": "services_min_cluster_size", "description": "The minimum number of nodes in the Services cluster", "default": "\"2\""}, {"name": "public_subnet_id_2", "description": "The second public subnet ID to use. Needs to be in a different AZ than public_subnet_id_1", "default": ""}, {"name": "elasticsearch_subnet_id_1", "description": "The first elasticsearch subnet ID to use. Needs to be in a different AZ than elasticsearch_subnet_id_2", "default": ""}, {"name": "elasticsearch_dedicated_master_type", "description": "Instance type of the dedicated master nodes in the cluster", "default": "\"m4.large.elasticsearch\""}, {"name": "encrypted_config_blob", "description": "base64 encoded string of encrypted data from the gmcrypt utility. Contact GrayMeta for more information", "default": "\"\""}, {"name": "public_subnet_id_1", "description": "The first public subnet ID to use. Needs to be in a different AZ than public_subnet_id_2", "default": ""}, {"name": "db_password", "description": "password for postgresql database", "default": "\"\""}, {"name": "db_snapshot", "description": "(Optional) Specify a snapshot to use on db create.  For initial install this should be empty string.  After the initial create it is recommended to set this to final.", "default": "\"\""}, {"name": "client_secret_internal", "description": "32 character string used to generate tokens used internally by the system.", "default": "\"\""}, {"name": "box_client_secret", "description": "Box client secret. See box.com", "default": "\"\""}, {"name": "rds_subnet_id_2", "description": "The second subnet ID to use to deploy the RDS database into. Needs to be in a different AZ than rds_subnet_id_1", "default": ""}, {"name": "db_allocated_storage", "description": "The size of the storage to allocate for the RDS database, in GB", "default": "\"100\""}, {"name": "encryption_key", "description": "32 Character string used to encrypt data prior to storage in the database", "default": "\"\""}, {"name": "notifications_from_addr", "description": "The email address to use as the From address on email notifications. This must be an SES verified email address", "default": ""}, {"name": "ecs_instance_type", "description": "The Instance Type to use for ECS nodes", "default": "\"c4.large\""}, {"name": "key_name", "description": "The name of the EC2 keypair to deploy to instances", "default": ""}, {"name": "rds_subnet_id_1", "description": "The first subnet ID to use to deploy the RDS database into. Needs to be in a different AZ than rds_subnet_id_2", "default": ""}, {"name": "db_storage_encrypted", "description": "(Optional) The data is already encrypted by Platform before inserting into database.  This option specifies whether the DB instance is encrypted at rest.  The default is false if not specified", "default": "false"}, {"name": "jwt_key", "description": "A 32 character string used to encrypt JWT web tokens", "default": "\"\""}, {"name": "elasticache_instance_type_facebox", "description": "Instance type for Facebox Redis cache", "default": "\"cache.m4.large\""}, {"name": "elasticsearch_volume_size", "description": "The size of the disk, in GB", "default": "\"10\""}, {"name": "rollbar_token", "description": "A token used for accessing the Rollbar API for the purposes of reporting errors. Optional", "default": "\"\""}, {"name": "services_amis", "description": "map of region to ami for services nodes", "default": "{\n  \"ap-southeast-2\": \"ami-1bd30979\",\n  \"eu-west-1\": \"ami-48697fa2\",\n  \"us-east-1\": \"ami-f1f2dd8e\",\n  \"us-east-2\": \"ami-8b9aa2ee\",\n  \"us-west-2\": \"ami-be1147c6\"\n}"}, {"name": "ecs_subnet_id", "description": "The subnet ID to use to deploy the ECS cluster into", "default": ""}, {"name": "usage_s3_bucket_arn", "description": "The ARN of the s3 bucket to store usage reports", "default": ""}, {"name": "ecs_nat_ip", "description": "The public IP all traffic from the ECS cluster is NAT'ed through to allow access to the APIs", "default": ""}, {"name": "services_nat_ip", "description": "The public IP all traffic from the Services cluster is NAT'ed through to allow access to the APIs", "default": ""}, {"name": "ssl_certificate_arn", "description": "The ARN of the SSL certificate to use to secure the endpoints. Must be a valid CA issued certificate (no self-signed certs)", "default": ""}, {"name": "ecs_volume_size", "description": "The size of the EBS volumes to mount to ECS nodes. This is workload dependent. Contact GrayMeta for a recommendation", "default": ""}, {"name": "services_max_cluster_size", "description": "The maxiumum number of nodes in the Services cluster", "default": ""}, {"name": "db_username", "description": "username for postgresql database", "default": ""}, {"name": "google_maps_key", "description": "A Google maps key", "default": ""}, {"name": "elasticache_instance_type_services", "description": "Instance type for Services cluster Redis cache", "default": "\"cache.m4.large\""}, {"name": "elasticsearch_dedicated_master_count", "description": "Number of dedicated master nodes in the cluster", "default": "\"3\""}, {"name": "services_iam_role_name", "description": "The name of the IAM role that will be applied to services roles. Must be created by the servicesiam module", "default": ""}, {"name": "ecs_min_cluster_size", "description": "The minimum number of nodes in the ECS cluster", "default": "\"1\""}, {"name": "platform_access_cidrs", "description": "A comma delimited list of CIDRs from which to allow access to the site.", "default": ""}, {"name": "facebox_key", "description": "A facebox PRO license key. See http://machinebox.io", "default": ""}, {"name": "ssh_cidr_blocks", "description": "Comma delimited list of cidr blocks from which to allow access via SSH", "default": ""}, {"name": "customer", "description": "A human-readable string that identifies your company. Should be alphanumeric + underscores only. eg. If your company is 'XYZ Widgets', you might set it to 'xyzwidgets' or 'xyz_widgets'", "default": ""}, {"name": "db_kms_key_id", "description": "(Optional) The ARN for the KMS encryption key.  If not specified and db_storage_encrypted is true, it will generate a kms key", "default": "\"\""}, {"name": "elasticsearch_subnet_id_2", "description": "The second elasticsearch subnet ID to use. Needs to be in a different AZ than elasticsearch_subnet_id_1", "default": ""}, {"name": "ecs_max_cluster_size", "description": "The maxiumum number of nodes in the ECS cluster", "default": ""}, {"name": "file_storage_s3_bucket_arn", "description": "The ARN of the s3 bucket to store thumbnails, video previews, and metadata files", "default": ""}, {"name": "dns_name", "description": "The DNS hostname that will be used to access the plaform (ex. graymeta.example.com)", "default": ""}, {"name": "elasticsearch_instance_type", "description": "Instance type of data nodes in the cluster", "default": "\"m4.large.elasticsearch\""}, {"name": "platform_instance_id", "description": "A human-readable string for this instance of the GrayMeta Platform", "default": ""}, {"name": "services_subnet_id_2", "description": "The second subnet ID to use to deploy the services cluster into. Needs to be in a different AZ than services_subnet_id_1", "default": ""}]}, "7Factor/concourse/aws": {"name": "concourse", "url": "https://registry.terraform.io/modules/7Factor/concourse/aws", "provider": "aws", "downloads": 7, "description": "Terraform Module for a distributed concourse cluster on AWS", "source": "7Factor/concourse/aws", "args": [{"name": "cluster_name", "description": "Name your cluster! This will show up in tags.", "default": ""}, {"name": "vpc_id", "description": "The ID of the VPC you'll be installing concourse into. We make no assumptions about your networking stack, so you should provide this.", "default": ""}, {"name": "subnet_id", "description": "The subnet ID you'll be installing concourse into. Again, we make no assumptions. This should be large enough to support your cluster.", "default": ""}, {"name": "conc_ssh_key_name", "description": "The PEM key name for accessing and provisioning stuff.", "default": ""}, {"name": "conc_image", "description": "The image name for concourse. Defaults to latest, but you should lock this down.", "default": "\"concourse/concourse\""}, {"name": "conc_web_ingress_cidr", "description": "The CIDR block from whence web traffic may come. Defaults to anywhere, but override it as necessary. This is applied to the ELB.", "default": "\"0.0.0.0/0\""}, {"name": "conc_ssh_ingress_cidr", "description": "The CIDR block from whence SSH traffic may come. Set this to your bastion host or your VPN IP range.", "default": ""}, {"name": "conc_db_instance_type", "description": "The instance type for our teensy DB server. We don't use RDS because it's expensive and heavy.", "default": ""}, {"name": "conc_db_pw", "description": "The password for the postgres user. Make sure this is secret and safe.", "default": ""}, {"name": "conc_web_instance_type", "description": "The web instance type. Usually around an m3.large gets it done, but do what you want.", "default": ""}, {"name": "conc_web_count", "description": "The number of web boxes to run. Defaults to a pair.", "default": "2"}, {"name": "conc_web_cert_arn", "description": "The ARN to the SSL cert we'll apply to the ELB.", "default": ""}, {"name": "conc_fqdn", "description": "The FQDN where your cluster will live. Point this via your DNS to the ELB DNS provided in the output of this module otherwise you'll get some wonkiness.", "default": ""}, {"name": "conc_web_keys_dir", "description": "The path to the keys you should generate for the web boxes in order to allow the workers and web boxes to talk. See documentation.", "default": ""}, {"name": "authentication_config", "description": "Toss your authentication scheme here. See documentation. Defaults to no auth.", "default": "\"--no-really-i-dont-want-any-auth\""}, {"name": "conc_worker_keys_dir", "description": "The path to the keys you should generate for workers so they can talk to the web boxes. See documentation.", "default": ""}, {"name": "conc_worker_count", "description": "The number of worker boxes to spin up. Defaults to 2.", "default": "2"}, {"name": "conc_worker_instance_type", "description": "The worker instance types. Pick something kinda big but not huge.", "default": ""}, {"name": "conc_worker_vol_size", "description": "We'll assign instanve volumes of this size to your workers. Suggested retail size of 40GB.", "default": "40"}]}, "matti/master-outputs/kontena": {"name": "master-outputs", "url": "https://registry.terraform.io/modules/matti/master-outputs/kontena", "provider": "kontena", "downloads": 7, "description": "", "source": "matti/master-outputs/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "name", "description": "", "default": "\"\""}, {"name": "organization", "description": "", "default": "\"\""}]}, "matti/certificate-registration/kontena": {"name": "certificate-registration", "url": "https://registry.terraform.io/modules/matti/certificate-registration/kontena", "provider": "kontena", "downloads": 7, "description": "", "source": "matti/certificate-registration/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "email", "description": "", "default": ""}]}, "sacloud/kubernetes-single-master/sakuracloud": {"name": "kubernetes-single-master", "url": "https://registry.terraform.io/modules/sacloud/kubernetes-single-master/sakuracloud", "provider": "sakuracloud", "downloads": 7, "description": "Install single-master Kubernetes cluster", "source": "sacloud/kubernetes-single-master/sakuracloud", "args": [{"name": "password", "description": "Password for server root user", "default": ""}, {"name": "master_disk_size", "description": "Size of master node disk(Unit:GB)", "default": "20"}, {"name": "master_server_core", "description": "Number of master node CPU core", "default": "2"}, {"name": "master_server_memory", "description": "Size of master node memory(Unit:GB)", "default": "4"}, {"name": "master_server_description", "description": "", "default": "\"\""}, {"name": "master_server_tags", "description": "", "default": "[\n  \"kubernetes-master\"\n]"}, {"name": "worker_disk_size", "description": "Size of worker node disk(Unit:GB)", "default": "20"}, {"name": "worker_server_core", "description": "Number of worker node CPU core", "default": "2"}, {"name": "worker_server_memory", "description": "Size of worker node memory(Unit:GB)", "default": "4"}, {"name": "worker_server_description", "description": "", "default": "\"\""}, {"name": "worker_server_tags", "description": "", "default": "[\n  \"kubernetes-worker\"\n]"}, {"name": "node_name_prefix", "description": "", "default": "\"kubernetes\""}, {"name": "ssh_key_name", "description": "", "default": "\"kubernetes-ssh-key\""}, {"name": "kubeadm_token", "description": "Token used by kubeadm init/join(generated if empty)", "default": "\"\""}, {"name": "worker_count", "description": "Number of worker node(allow zero)", "default": "3"}, {"name": "enable_master_isolation", "description": "Flag not to schedule pod at master", "default": "true"}, {"name": "service_node_port_range", "description": "A port range to reserve for services with NodePort visibility", "default": "\"30000-32767\""}]}, "ndejong/salt-masterless/digitalocean": {"name": "salt-masterless", "url": "https://registry.terraform.io/modules/ndejong/salt-masterless/digitalocean", "provider": "digitalocean", "downloads": 7, "description": "Terraform module to create a Digital Ocean Droplet backed with Salt in a masterless arrangement.", "source": "ndejong/salt-masterless/digitalocean", "args": [{"name": "hostname", "description": "The hostname applied to this digitalocean-droplet.", "default": ""}, {"name": "digitalocean_region", "description": "The digitalocean region-slug to start this digitalocean-droplet within.", "default": ""}, {"name": "salt_local_state_tree", "description": "Salt local_state_tree path", "default": ""}, {"name": "salt_local_pillar_roots", "description": "Salt local_pillar_roots path", "default": ""}, {"name": "permit_root_login", "description": "Permit root login after droplet has completed deployment - NB: the root bootstrap-sshkey remains in CLEARTEXT in the Terraform statefile, setting this parameter to '0' removes the bootstrap ssh-publickey and additionally sets PermitRootLogin to 'no' after the bootstrap process is complete.", "default": "0"}, {"name": "salt_local_minion_config_file", "description": "Local salt minion config to be pushed to the remote system", "default": "\"/dev/null\""}, {"name": "salt_remote_state_tree", "description": "Remote system remote_state_tree path", "default": "\"/srv/salt\""}, {"name": "salt_remote_pillar_roots", "description": "Remote system remote_pillar_roots path", "default": "\"/srv/pillar\""}, {"name": "salt_custom_state", "description": "Salt custom_state definition", "default": "\"\""}, {"name": "salt_log_level", "description": "Salt logging level", "default": "\"warning\""}, {"name": "digitalocean_image", "description": "The digitalocean image to use as the base for this digitalocean-droplet.", "default": "\"ubuntu-17-10-x64\""}, {"name": "digitalocean_size", "description": "The size to use for this digitalocean-droplet.", "default": "\"1gb\""}, {"name": "digitalocean_backups", "description": "Enable/disable backup functionality on this digitalocean-droplet.", "default": "false"}, {"name": "digitalocean_monitoring", "description": "Enable/disable monitoring functionality on this digitalocean-droplet.", "default": "true"}, {"name": "digitalocean_ipv6", "description": "Enable/disable getting a public IPv6 on this digitalocean-droplet.", "default": "false"}, {"name": "digitalocean_private_networking", "description": "Enable/disable private-networking functionality on this digitalocean-droplet.", "default": "false"}, {"name": "digitalocean_volume0", "description": "Volume0 to attach to this digitalocean-droplet in the format <mount-point>:<mount-device>:<volume-id>:<mount-fstype>", "default": "\"\""}]}, "sorenrix/centos-jenkins/aws": {"name": "centos-jenkins", "url": "https://registry.terraform.io/modules/sorenrix/centos-jenkins/aws", "provider": "aws", "downloads": 7, "description": "Installs Jenkins and Nginx on EC2 CentOS", "source": "sorenrix/centos-jenkins/aws", "args": [{"name": "aws_access_key", "description": "", "default": ""}, {"name": "aws_secret_key", "description": "", "default": ""}, {"name": "aws_region", "description": "", "default": ""}, {"name": "aws_instance_ami", "description": "", "default": "\"ami-337be65c\""}, {"name": "aws_instance_type", "description": "", "default": ""}, {"name": "aws_instance_name", "description": "", "default": ""}, {"name": "aws_security_group_name", "description": "", "default": ""}, {"name": "aws_key_pair_name", "description": "", "default": ""}, {"name": "aws_key_pair_public_key_path", "description": "", "default": ""}, {"name": "aws_key_pair_private_key_path", "description": "", "default": ""}, {"name": "show_jenkins_password", "description": "", "default": "0"}, {"name": "attach_test_uids", "description": "", "default": "0"}]}, "10thmagnitude/vault/azurerm": {"name": "vault", "url": "https://registry.terraform.io/modules/10thmagnitude/vault/azurerm", "provider": "azurerm", "downloads": 7, "description": "A Terraform Module for how to run Vault on AzureRM using Terraform and Packer", "source": "10thmagnitude/vault/azurerm", "args": [{"name": "location", "description": "The location that the resources will run in (e.g. East US)", "default": ""}, {"name": "resource_group_name", "description": "The name of the resource group that the resources for consul will run in", "default": ""}, {"name": "subnet_id", "description": "The id of the subnet to deploy the cluster into", "default": ""}, {"name": "cluster_name", "description": "The name of the Consul cluster (e.g. consul-stage). This variable is used to namespace all resources created by this module.", "default": ""}, {"name": "image_id", "description": "The URL of the Image to run in this cluster. Should be an image that had Consul installed and configured by the install-consul module.", "default": ""}, {"name": "instance_size", "description": "The size of Azure Instances to run for each node in the cluster (e.g. Standard_A0).", "default": ""}, {"name": "key_data", "description": "The SSH public key that will be added to SSH authorized_users on the consul instances", "default": ""}, {"name": "gossip_encryption_key", "description": "The encryption key for consul to encrypt gossip traffic", "default": ""}, {"name": "consul_cluster_addresses", "description": "Addresses* of consul servers in cluster to join.", "default": ""}, {"name": "vault_tls_cert_file_path", "description": "Specifies the path to the certificate for TLS. Required. To use a CA certificate, concatenate the primary certificate and the CA certificate together.", "default": ""}, {"name": "vault_tls_key_file_path", "description": "Specifies the path to the private key for the certificate.", "default": ""}, {"name": "consul_tls_cert_file_path", "description": "Specifies the path to the certificate for TLS.", "default": ""}, {"name": "consul_tls_key_file_path", "description": "Specifies the path to the certificate for TLS.", "default": ""}, {"name": "consul_tls_ca_file_path", "description": "Specifies the path to the certificate for TLS.", "default": ""}, {"name": "consul_install_path", "description": "Path where consul is installed", "default": ""}, {"name": "instance_tier", "description": "Specifies the tier of virtual machines in a scale set. Possible values, standard or basic.", "default": "\"standard\""}, {"name": "consul_computer_name_prefix", "description": "The string that the name of each instance in the cluster will be prefixed with", "default": "\"consul\""}, {"name": "vault_computer_name_prefix", "description": "The string that the name of each instance in the cluster will be prefixed with", "default": "\"vault\""}, {"name": "admin_user_name", "description": "The name of the administrator user for each instance in the cluster", "default": "\"vaultadmin\""}, {"name": "instance_root_volume_size", "description": "Specifies the size of the instance root volume in GB. Default 40GB", "default": "40"}, {"name": "cluster_size", "description": "The number of nodes to have in the Consul cluster. We strongly recommended that you use either 3 or 5.", "default": "3"}, {"name": "cluster_tag_key", "description": "Add a tag with this key and the value var.cluster_tag_value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster.", "default": "\"consul-servers\""}, {"name": "cluster_tag_value", "description": "Add a tag with key var.clsuter_tag_key and this value to each Instance in the ASG. This can be used to automatically find other Consul nodes and form a cluster.", "default": "\"auto-join\""}, {"name": "subnet_ids", "description": "The subnet IDs into which the Azure Instances should be deployed. We recommend one subnet ID per node in the cluster_size variable. At least one of var.subnet_ids or var.availability_zones must be non-empty.", "default": "[]"}, {"name": "allowed_ssh_cidr_blocks", "description": "A list of CIDR-formatted IP address ranges from which the Azure Instances will allow SSH connections", "default": "[]"}, {"name": "root_volume_type", "description": "The type of volume. Must be one of: standard, gp2, or io1.", "default": "\"standard\""}, {"name": "root_volume_size", "description": "The size, in GB, of the root EBS volume.", "default": "50"}, {"name": "root_volume_delete_on_termination", "description": "Whether the volume should be destroyed on instance termination.", "default": "true"}, {"name": "api_port", "description": "The port to use for Vault API calls. Vault default is 8200", "default": "8200"}, {"name": "cluster_port", "description": "The port to use for Vault cluster server-to-server requests. Vault default is 8201", "default": "8201"}, {"name": "consul_http_api_port", "description": "The port used by consul http api.  Consul default is 8500.", "default": "8500"}, {"name": "tags", "description": "A map of the tags to use on the resources that are deployed with this module.", "default": "{}"}]}, "sidick/eks-cluster/aws": {"name": "eks-cluster", "url": "https://registry.terraform.io/modules/sidick/eks-cluster/aws", "provider": "aws", "downloads": 7, "description": "Terraform EKS Cluster Module", "source": "sidick/eks-cluster/aws", "args": [{"name": "cluster_name", "description": "Cluster name", "default": ""}, {"name": "vpc_id", "description": "VPC ID", "default": ""}, {"name": "subnet_list", "description": "List of subnets", "default": ""}, {"name": "security_group_list", "description": "List of security group IDs", "default": "[]"}, {"name": "kubernetes_version", "description": "Desired Kubernetes master version. If you do not specify a value, the latest available version is used.", "default": "\"\""}]}, "terraformdns/dns-recordsets/google": {"name": "dns-recordsets", "url": "https://registry.terraform.io/modules/terraformdns/dns-recordsets/google", "provider": "google", "downloads": 7, "description": "Terraform module for creating DNS recordsets in a Google Cloud DNS zone", "source": "terraformdns/dns-recordsets/google", "args": [{"name": "managed_zone_name", "description": "The name of the Google Cloud DNS managed zone to add records to.", "default": ""}, {"name": "project_id", "description": "The id of the Google API project that the given managed zone belongs to. If not set, the project id selected in the provider configuration is used instead.", "default": "\"\""}, {"name": "recordsets", "description": "List of DNS record objects to manage, in the standard terraformdns structure.", "default": ""}]}, "zoitech/saml/aws": {"name": "saml", "url": "https://registry.terraform.io/modules/zoitech/saml/aws", "provider": "aws", "downloads": 6, "description": "Terraform module which creates AWS access via SAML.", "source": "zoitech/saml/aws", "args": [{"name": "aws_region", "description": "The reqion where the ressrouces should be create. Unimportant as IAM.", "default": "\"eu-central-1\""}, {"name": "role_name", "description": "The name of the Role", "default": "\"Delegate-Saml-Admin\""}, {"name": "role_policies", "description": "The policies attached to the role", "default": "[\n  \"arn:aws:iam::aws:policy/AdministratorAccess\"\n]"}, {"name": "provider_name", "description": "The name of the provider.", "default": "\"default-saml-provider\""}, {"name": "provider_metadata_file", "description": "The path to of the metadatafile", "default": "\"\""}]}, "cloudposse/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/cloudposse/vpc/aws", "provider": "aws", "downloads": 6, "description": "Terraform Module that defines a VPC with public/private subnets across multiple AZs with Internet Gateways", "source": "cloudposse/vpc/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "cidr_block", "description": "CIDR for the VPC", "default": "\"10.0.0.0/16\""}, {"name": "instance_tenancy", "description": "A tenancy option for instances launched into the VPC", "default": "\"default\""}, {"name": "enable_dns_hostnames", "description": "A boolean flag to enable/disable DNS hostnames in the VPC", "default": "\"true\""}, {"name": "enable_dns_support", "description": "A boolean flag to enable/disable DNS support in the VPC", "default": "\"true\""}, {"name": "enable_classiclink", "description": "A boolean flag to enable/disable ClassicLink for the VPC", "default": "\"false\""}, {"name": "enable_classiclink_dns_support", "description": "A boolean flag to enable/disable ClassicLink DNS Support for the VPC", "default": "\"false\""}]}, "zoitech/vpn/aws": {"name": "vpn", "url": "https://registry.terraform.io/modules/zoitech/vpn/aws", "provider": "aws", "downloads": 6, "description": "Terraform module which setup a static routed vpn connection.", "source": "zoitech/vpn/aws", "args": [{"name": "aws_region", "description": "The AWS Region to run in.", "default": "\"eu-central-1\""}, {"name": "name", "description": "The name which is used for the resource names. Other names will be created using this variable.", "default": "\"vpn-module\""}, {"name": "bgp_asn", "description": "The ASN for the VPN.", "default": "\"65000\""}, {"name": "type", "description": "The VPN Type.", "default": "\"ipsec.1\""}, {"name": "cgw_ip", "description": "The Customer gateway IP.", "default": ""}, {"name": "static_routes_only", "description": "Defines whether only static routes should be created.", "default": "\"true\""}, {"name": "destination_cidr_block", "description": "Subnetworks to route.", "default": ""}, {"name": "vpc_id", "description": "The VPC ID used to attach to all resources.", "default": ""}, {"name": "routetable_id", "description": "The route table to use for routing.", "default": ""}]}, "julienlevasseur/provider/consul": {"name": "provider", "url": "https://registry.terraform.io/modules/julienlevasseur/provider/consul", "provider": "consul", "downloads": 6, "description": "Terraform Consul Provider Module", "source": "julienlevasseur/provider/consul", "args": []}, "btower-labz/btlabz-nat-base/aws": {"name": "btlabz-nat-base", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-nat-base/aws", "provider": "aws", "downloads": 6, "description": "BTLabz AWS VPC parts: NAT", "source": "btower-labz/btlabz-nat-base/aws", "args": [{"name": "name", "description": "NAT name. Will be used as the 'Name' tag value.", "default": "\"main-vpc\""}, {"name": "subnet_id", "description": "Public subnet identifier to place NAT into.", "default": ""}, {"name": "tags", "description": "Additional tags.", "default": "{}"}]}, "sjones-sot/virtual-network/azurerm": {"name": "virtual-network", "url": "https://registry.terraform.io/modules/sjones-sot/virtual-network/azurerm", "provider": "azurerm", "downloads": 6, "description": "Basic module for creating an AzureRM Vnet", "source": "sjones-sot/virtual-network/azurerm", "args": [{"name": "address_space", "description": "The network prefix / CIDR range in use by this VNet", "default": "\"10.0.0.0/8\""}, {"name": "location", "description": "Azure location string - see 'az account list-locations' output for valid strings", "default": "\"westeurope\""}, {"name": "service_name", "description": "Name of the service or function to which this resource belongs - defaults to `sampleservice`", "default": "\"sampleservice\""}, {"name": "environment", "description": "The environment in which this resource is located - defaults to `development`", "default": "\"development\""}, {"name": "fault_domain_count", "description": "Number of fault domains in the availability set.  Default is 3 as this the value applicable to westeurope region", "default": "3"}, {"name": "resource_group_name", "description": "(Required) Specifies the name of the resource group the Virtual Network is located in.  This will be created dynamically if not explicitly set", "default": "\"\""}, {"name": "tags", "description": "Map of additional tags to apply to the resources", "default": "{}"}]}, "mazgi/static-website/aws": {"name": "static-website", "url": "https://registry.terraform.io/modules/mazgi/static-website/aws", "provider": "aws", "downloads": 6, "description": "", "source": "mazgi/static-website/aws", "args": [{"name": "website_name", "description": "", "default": ""}, {"name": "website_domain", "description": "", "default": ""}]}, "matti/grid/kontena": {"name": "grid", "url": "https://registry.terraform.io/modules/matti/grid/kontena", "provider": "kontena", "downloads": 6, "description": "", "source": "matti/grid/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "name", "description": "", "default": ""}, {"name": "initial_size", "description": "", "default": "1"}, {"name": "token", "description": "", "default": "\"\""}, {"name": "subnet", "description": "", "default": "\"\""}, {"name": "supernet", "description": "", "default": "\"\""}, {"name": "default_affinities", "description": "", "default": "[]"}, {"name": "statsd_server", "description": "", "default": "\"\""}, {"name": "log_forwarder", "description": "", "default": "\"\""}, {"name": "log_opts", "description": "", "default": "[]"}]}, "matti/config/kupo": {"name": "config", "url": "https://registry.terraform.io/modules/matti/config/kupo", "provider": "kupo", "downloads": 6, "description": "", "source": "matti/config/kupo", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "master_addresses", "description": "", "default": ""}, {"name": "master_private_addresses", "description": "", "default": ""}, {"name": "master_fields", "description": "", "default": ""}, {"name": "worker_addresses", "description": "", "default": ""}, {"name": "worker_private_addresses", "description": "", "default": ""}, {"name": "worker_fields", "description": "", "default": ""}, {"name": "addons", "description": "", "default": "{}"}, {"name": "network", "description": "", "default": "{}"}]}, "slalompdx/codecommit-cicd/aws": {"name": "codecommit-cicd", "url": "https://registry.terraform.io/modules/slalompdx/codecommit-cicd/aws", "provider": "aws", "downloads": 6, "description": "Terraform module that stands up a new AWS CodeCommit repository integrated with AWS CodePipeline and CodeBuild for a end to end CI/CD pipeline in AWS.", "source": "slalompdx/codecommit-cicd/aws", "args": [{"name": "char_delimiter", "description": "The delimiter to use for unique names (default: -)", "default": "\"-\""}, {"name": "repo_name", "description": "The name of the CodeCommit repository (e.g. new-repo).", "default": "\"\""}, {"name": "test_buildspec", "description": "The buildspec to be used for the Test stage (default: buildspec_test.yml)", "default": "\"buildspec_test.yml\""}, {"name": "package_buildspec", "description": "The buildspec to be used for the Package stage (default: buildspec.yml)", "default": "\"buildspec.yml\""}, {"name": "organization_name", "description": "The organization name provisioning the template (e.g. acme)", "default": "\"acme\""}, {"name": "repo_default_branch", "description": "The name of the default repository branch (default: master)", "default": "\"master\""}, {"name": "force_artifact_destroy", "description": "Force the removal of the artifact S3 bucket on destroy (default: false).", "default": "\"false\""}, {"name": "environment", "description": "The environment being deployed (default: dev)", "default": "\"dev\""}, {"name": "build_timeout", "description": "The time to wait for a CodeBuild to complete before timing out in minutes (default: 5)", "default": "\"5\""}, {"name": "build_compute_type", "description": "The build instance type for CodeBuild (default: BUILD_GENERAL1_SMALL)", "default": "\"BUILD_GENERAL1_SMALL\""}, {"name": "build_image", "description": "The build image for CodeBuild to use (default: aws/codebuild/nodejs:6.3.1)", "default": "\"aws/codebuild/nodejs:6.3.1\""}, {"name": "aws_region", "description": "The AWS region to deploy into (default: us-west-2).", "default": "\"us-west-2\""}]}, "unruly/airflow/aws": {"name": "airflow", "url": "https://registry.terraform.io/modules/unruly/airflow/aws", "provider": "aws", "downloads": 6, "description": "Terraform module for a PostgreSQL-backed Apache Airflow instance", "source": "unruly/airflow/aws", "args": [{"name": "ami", "description": "AMI code for the Airflow server", "default": "\"ami-a042f4d8\""}, {"name": "instance_type", "description": "Instance type for the Airflow server", "default": "\"c3.xlarge\""}, {"name": "key", "description": "AWS SSH Key Pair name", "default": ""}, {"name": "subnet_ids", "description": "List of AWS subnet ids for Airflow server and database", "default": ""}, {"name": "vpc_id", "description": "AWS VPC in which to create the Airflow server", "default": ""}, {"name": "security_group_id", "description": "AWS Security group in which to create the Airflow server", "default": ""}, {"name": "db_password", "description": "Password for the PostgreSQL instance", "default": ""}, {"name": "fernet_key", "description": "Key for encrypting data in the database - see Airflow docs", "default": ""}]}, "azavea/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/azavea/vpc/aws", "provider": "aws", "downloads": 5, "description": "A Terraform module to create an Amazon Web Services (AWS) Virtual Private Cloud (VPC).", "source": "azavea/vpc/aws", "args": [{"name": "name", "description": "", "default": "\"Default\""}, {"name": "project", "description": "", "default": "\"Unknown\""}, {"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "region", "description": "", "default": "\"us-east-1\""}, {"name": "key_name", "description": "", "default": ""}, {"name": "cidr_block", "description": "", "default": "\"10.0.0.0/16\""}, {"name": "external_access_cidr_block", "description": "", "default": "\"0.0.0.0/0\""}, {"name": "public_subnet_cidr_blocks", "description": "", "default": "[\n  \"10.0.0.0/24\",\n  \"10.0.2.0/24\"\n]"}, {"name": "private_subnet_cidr_blocks", "description": "", "default": "[\n  \"10.0.1.0/24\",\n  \"10.0.3.0/24\"\n]"}, {"name": "availability_zones", "description": "", "default": "[\n  \"us-east-1a\",\n  \"us-east-1b\"\n]"}, {"name": "bastion_ami", "description": "", "default": ""}, {"name": "bastion_instance_type", "description": "", "default": "\"t2.micro\""}]}, "turnerlabs/user/s3": {"name": "user", "url": "https://registry.terraform.io/modules/turnerlabs/user/s3", "provider": "s3", "downloads": 5, "description": "A Terraform module that creates a tagged S3 bucket and an IAM user/key with access to the bucket", "source": "turnerlabs/user/s3", "args": [{"name": "bucket_name", "description": "", "default": ""}, {"name": "versioning", "description": "", "default": "false"}, {"name": "tag_environment", "description": "", "default": ""}, {"name": "tag_team", "description": "", "default": ""}, {"name": "tag_application", "description": "", "default": ""}, {"name": "tag_contact-email", "description": "", "default": ""}, {"name": "tag_customer", "description": "", "default": ""}, {"name": "multipart_delete", "description": "", "default": "true"}, {"name": "multipart_days", "description": "", "default": "3"}]}, "factorysh/ungpg/basic": {"name": "ungpg", "url": "https://registry.terraform.io/modules/factorysh/ungpg/basic", "provider": "basic", "downloads": 5, "description": "Decrypt settings for Terraform", "source": "factorysh/ungpg/basic", "args": [{"name": "path", "description": "Path of the secret file", "default": ""}]}, "ovh/publiccloud-spark/ovh": {"name": "publiccloud-spark", "url": "https://registry.terraform.io/modules/ovh/publiccloud-spark/ovh", "provider": "ovh", "downloads": 5, "description": "", "source": "ovh/publiccloud-spark/ovh", "args": [{"name": "image_id", "description": "The ID of the glance image to run in the cluster. This should be an image built from the Packer template under examples/spark-glance-image/sparkjson. If the default value is used, Terraform will look up the latest image build automatically.", "default": "\"\""}, {"name": "image_names", "description": "The name per region of the spark glance image. This variable can be overriden by the \"image_id\" variable", "default": "{\n  \"BHS3\": \"CentOS 7 Spark\",\n  \"DE1\": \"CentOS 7 Spark\",\n  \"GRA1\": \"CentOS 7 Spark\",\n  \"GRA3\": \"CentOS 7 Spark\",\n  \"SBG3\": \"CentOS 7 Spark\",\n  \"WAW1\": \"CentOS 7 Spark\"\n}"}, {"name": "master_flavor_name", "description": "the name of the flavor that will be used for the spark master", "default": "\"\""}, {"name": "slave_flavor_name", "description": "the name of the flavor that will be used for spark slaves", "default": "\"\""}, {"name": "master_flavor_id", "description": "the id of the flavor that will be used for the spark master", "default": "\"\""}, {"name": "slave_flavor_id", "description": "the id of the flavor that will be used for spark slaves", "default": "\"\""}, {"name": "spark_master_url", "description": "The url of an existing spark master node. Setting this variable will disable the spawning of a spark master node by this module.", "default": "\"\""}, {"name": "with_cuda_support", "description": "If true, slave nodes will try to load the nvidia module during boot process", "default": "false"}, {"name": "master_flavor_names", "description": "A map of flavor names per openstack region that will be used for the spark master.", "default": "{\n  \"BHS3\": \"s1-4\",\n  \"DE1\": \"s1-4\",\n  \"GRA1\": \"s1-4\",\n  \"GRA3\": \"s1-4\",\n  \"SBG3\": \"s1-4\",\n  \"WAW1\": \"s1-4\"\n}"}, {"name": "slave_flavor_names", "description": "A map of flavor names per openstack region that will be used for spark servers.", "default": "{\n  \"BHS3\": \"b2-15\",\n  \"DE1\": \"b2-15\",\n  \"GRA1\": \"b2-15\",\n  \"GRA3\": \"b2-15\",\n  \"SBG3\": \"b2-15\",\n  \"WAW1\": \"b2-15\"\n}"}, {"name": "region", "description": "The OVH region to deploy into (e.g. GRA3, BHS3, ...).", "default": "\"GRA3\""}, {"name": "name", "description": "What to name the Spark cluster and all of its associated resources.", "default": "\"mysparkcluster\""}, {"name": "slaves_count", "description": "The number of Spark slaves to deploy.", "default": "3"}, {"name": "cidr", "description": "The CIDR block of the Network. (e.g. 10.0.0.0/16)", "default": ""}, {"name": "network_id", "description": "The id of the network in which the servers will be spawned.", "default": ""}, {"name": "subnet_id", "description": "The id of the subnet in which the servers will be spawned.", "default": ""}, {"name": "ssh_key_pair", "description": "The name of an  key pair that can be used to SSH to the instances in this cluster. Set to an empty string to not associate a Key Pair.", "default": "\"\""}, {"name": "metadata", "description": "A map of metadata to add to all resources supporting it.", "default": "{}"}]}, "Azure/search-service/azurerm": {"name": "search-service", "url": "https://registry.terraform.io/modules/Azure/search-service/azurerm", "provider": "azurerm", "downloads": 5, "description": "Terraform module to create Azure Search service resource", "source": "Azure/search-service/azurerm", "args": [{"name": "resource_group", "description": "The name of the resource group in which to create search service", "default": ""}, {"name": "location", "description": "The location/region where the search service is created. Changing this forces a new resource to be created.", "default": "\"West US 2\""}, {"name": "search_name", "description": "Service name must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 60 characters in length.", "default": ""}, {"name": "sku", "description": "Valid values are 'free', 'standard', 'standard2', and 'standard3' (2 & 3 must be enabled on the backend by Microsoft support). 'free' provisions the service in shared clusters. 'standard' provisions the service in dedicated clusters.", "default": "\"standard\""}, {"name": "replica_count", "description": "Replicas distribute search workloads across the service. You need 2 or more to support high availability (applies to Basic and Standard only).", "default": "1"}, {"name": "partition_count", "description": "Partitions allow for scaling of document count as well as faster indexing by sharding your index over multiple Azure Search units. Allowed values: 1, 2, 3, 4, 6, 12", "default": "1"}, {"name": "hosting_mode", "description": "Applicable only for SKU set to standard3. You can set this property to enable a single, high density partition that allows up to 1000 indexes, which is much higher than the maximum indexes allowed for any other SKU. Allowed values: default, highDensity", "default": "\"default\""}, {"name": "tags", "description": "A mapping of tages to assign to the resource. Changing this forces a new resource to be created.", "default": "{}"}]}, "miguelaferreira/ecs-cluster/aws": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/miguelaferreira/ecs-cluster/aws", "provider": "aws", "downloads": 5, "description": "Mirror of https://gitlab.com/open-source-devex/terraform-modules/aws/ecs-cluster", "source": "miguelaferreira/ecs-cluster/aws", "args": [{"name": "instance_drainer_function_description", "description": "", "default": "\"Extension to autoscaling lifecycle to drain ECS cluster instances before terminating them\""}, {"name": "instance_draining_function_handler", "description": "", "default": "\"org.springframework.cloud.function.adapter.aws.SpringBootStreamHandler\""}, {"name": "instance_draining_function_runtime", "description": "", "default": "\"java8\""}, {"name": "instance_draining_function_memory", "description": "", "default": "\"512\""}, {"name": "instance_draining_function_timeout", "description": "", "default": "\"180\""}, {"name": "project", "description": "Name of project this cluster is for. Sets the value of 'MonitoringEnabled' resource tag", "default": "\"\""}, {"name": "environment", "description": "Name of environment this cluster is targeting. Sets the value of 'MonitoringEnabled' resource tag", "default": "\"env\""}, {"name": "ecs_instance_daemon_tasks", "description": "Number of tasks running as daemons on the cluster instances", "default": "0"}, {"name": "monitoring_enabled", "description": "Sets the value of 'MonitoringEnabled' resource tag", "default": "false"}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "allow_ssh_in", "description": "Set to true to configure SSH access to cluster instances (requires `ssh_public_key_file` and `ssh_allowed_cidr`).", "default": "false"}, {"name": "ssh_public_key_file", "description": "A publick key file to provide SSH access to the cluster instances", "default": "\"\""}, {"name": "ssh_allowed_cidrs", "description": "A list of CIDRs from which instances accept SSH connections.", "default": "[]"}, {"name": "allow_http_out", "description": "Set to true to configure HTTP access from cluster instances (requires `http_allowed_cidr`).", "default": "false"}, {"name": "http_allowed_cidrs", "description": "A list of CIDRs to which instances can connect via HTTP.", "default": "[]"}, {"name": "allow_https_out", "description": "Set to true to configure HTTPS access from cluster instances (requires `https_allowed_cidr`).", "default": "false"}, {"name": "https_allowed_cidrs", "description": "A list of CIDRs to which instances can connect via HTTPS.", "default": "[]"}, {"name": "allow_consul_gossip", "description": "Set to true to configure Consul gossip ports to and from cluster instances (requires `https_allowed_cidr`).", "default": "false"}, {"name": "consul_gossip_allowed_cidrs", "description": "A list of CIDRs to allow Consul gossip traffic to and from.", "default": "[]"}, {"name": "allow_consul_client_server_rdp", "description": "Set to true to configure Consul RDP access from cluster instances (requires `https_allowed_cidr`).", "default": "false"}, {"name": "consul_client_server_rdp_allowed_cidrs", "description": "A list of CIDRs to which instances can connect via Consul RDP", "default": "[]"}, {"name": "allow_logzio_eu_out", "description": "Set to true to configure (logback appender to) logz.io (EU) access from cluster instances (requires `logzio_eu_allowed_cidr`).", "default": "false"}, {"name": "enable_daemon_tasks", "description": "Set to true to create the required IAM policies to allow cluster instances to start their own daemon tasks", "default": "\"false\""}, {"name": "termination_policies", "description": "", "default": "[\n  \"OldestLaunchConfiguration\",\n  \"Default\"\n]"}, {"name": "rolling_update_max_batch_size", "description": "", "default": "1"}, {"name": "rolling_update_pause_time", "description": "", "default": "\"PT5M\""}, {"name": "rolling_update_wait_on_signal", "description": "", "default": "false"}, {"name": "ami_id", "description": "", "default": "\"ami-6944c513\""}, {"name": "ami_owners", "description": "", "default": "[\n  \"self\",\n  \"amazon\",\n  \"aws-marketplace\"\n]"}, {"name": "lookup_latest_ami", "description": "", "default": "false"}, {"name": "root_block_device_type", "description": "", "default": "\"gp2\""}, {"name": "root_block_device_size", "description": "", "default": "\"8\""}, {"name": "instance_type", "description": "", "default": "\"t2.micro\""}, {"name": "cloud_config_content", "description": "", "default": ""}, {"name": "cloud_config_content_type", "description": "", "default": "\"text/cloud-config\""}, {"name": "health_check_grace_period", "description": "", "default": "\"600\""}, {"name": "desired_capacity", "description": "", "default": "\"1\""}, {"name": "min_size", "description": "", "default": "\"1\""}, {"name": "max_size", "description": "", "default": "\"1\""}, {"name": "enabled_metrics", "description": "", "default": "[\n  \"GroupMinSize\",\n  \"GroupMaxSize\",\n  \"GroupDesiredCapacity\",\n  \"GroupInServiceInstances\",\n  \"GroupPendingInstances\",\n  \"GroupStandbyInstances\",\n  \"GroupTerminatingInstances\",\n  \"GroupTotalInstances\"\n]"}, {"name": "vpc_private_subnet_ids", "description": "", "default": ""}, {"name": "scale_out_cooldown_seconds", "description": "", "default": "\"300\""}, {"name": "scale_in_cooldown_seconds", "description": "", "default": "\"300\""}, {"name": "high_cpu_evaluation_periods", "description": "", "default": "\"2\""}, {"name": "high_cpu_period_seconds", "description": "", "default": "\"300\""}, {"name": "high_cpu_threshold_percent", "description": "", "default": "\"90\""}, {"name": "low_cpu_evaluation_periods", "description": "", "default": "\"2\""}, {"name": "low_cpu_period_seconds", "description": "", "default": "\"300\""}, {"name": "low_cpu_threshold_percent", "description": "", "default": "\"10\""}, {"name": "high_memory_evaluation_periods", "description": "", "default": "\"2\""}, {"name": "high_memory_period_seconds", "description": "", "default": "\"300\""}, {"name": "high_memory_threshold_percent", "description": "", "default": "\"90\""}, {"name": "low_memory_evaluation_periods", "description": "", "default": "\"2\""}, {"name": "low_memory_period_seconds", "description": "", "default": "\"300\""}, {"name": "low_memory_threshold_percent", "description": "", "default": "\"10\""}]}, "justincampbell/test/null": {"name": "test", "url": "https://registry.terraform.io/modules/justincampbell/test/null", "provider": "null", "downloads": 5, "description": "", "source": "justincampbell/test/null", "args": [{"name": "first_name", "description": "", "default": "\"Justin\""}, {"name": "last_name", "description": "", "default": "\"Campbell\""}]}, "sjones-sot/subnet/azurerm": {"name": "subnet", "url": "https://registry.terraform.io/modules/sjones-sot/subnet/azurerm", "provider": "azurerm", "downloads": 5, "description": "Module for creation of subnets in an existing Virtual Network", "source": "sjones-sot/subnet/azurerm", "args": [{"name": "vnet_address_space", "description": "(Required) The network prefix / CIDR range in use by the Virtual Network this subnet belongs to", "default": ""}, {"name": "subnet_bits", "description": "(Required) Number of bits to add to the virtual network address space mask for this subnet.", "default": ""}, {"name": "location", "description": "Azure location string - see 'az account list-locations' output for valid strings", "default": ""}, {"name": "service_name", "description": "(Required) Name of the service to which this resource belongs", "default": ""}, {"name": "environment", "description": "(Required) The environment in which this resource is located", "default": "\"development\""}, {"name": "resource_group_name", "description": "(Required) Name of the resource group this subnet will be a member of - This is the name of the Resource Group to which the Virtual Network belongs", "default": ""}, {"name": "vnet_name", "description": "(Required) The name of the parent Virtual Network this subnet is part of", "default": ""}, {"name": "nsg_id", "description": "(Optional) ID of the Network Security Group that applies to this subnet - default is an empty string, pass a fully qualified NSG ID to apply to the subnet level", "default": "\"\""}, {"name": "subnet_number", "description": "(Required) Subnet number for the new subnet, be mindful of subnet boundaries and subnet_bits values. Be mindful that this is an offset from the first valid subnet of the address space, not an absolute number", "default": ""}, {"name": "subnet_name", "description": "(Required) The purpose of this subnet e.g. webtier.  DNS compliant strings only", "default": ""}]}, "claranet/vpc-modules/aws": {"name": "vpc-modules", "url": "https://registry.terraform.io/modules/claranet/vpc-modules/aws", "provider": "aws", "downloads": 5, "description": "Terraform modules for AWS VPC management", "source": "claranet/vpc-modules/aws", "args": []}, "matti/until/http": {"name": "until", "url": "https://registry.terraform.io/modules/matti/until/http", "provider": "http", "downloads": 5, "description": "", "source": "matti/until/http", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "uri", "description": "", "default": ""}, {"name": "body_must_include", "description": "", "default": "\"\""}, {"name": "code_must_equal", "description": "", "default": "\"200\""}, {"name": "max_tries", "description": "", "default": "\"60\""}, {"name": "interval", "description": "", "default": "\"1\""}]}, "matti/cli-outputs/heroku": {"name": "cli-outputs", "url": "https://registry.terraform.io/modules/matti/cli-outputs/heroku", "provider": "heroku", "downloads": 5, "description": "", "source": "matti/cli-outputs/heroku", "args": [{"name": "depends_id", "description": "", "default": "\"\""}]}, "johntdyer/SnsToCiscoSpark/aws": {"name": "SnsToCiscoSpark", "url": "https://registry.terraform.io/modules/johntdyer/SnsToCiscoSpark/aws", "provider": "aws", "downloads": 5, "description": "Terraform module to send SNS notifications to Cisco spark space", "source": "johntdyer/SnsToCiscoSpark/aws", "args": [{"name": "spark_channel_map", "description": "", "default": ""}, {"name": "lambda_function_name", "description": "", "default": "\"sns-to-spark\""}, {"name": "default_username", "description": "", "default": "\"AWS Lambda\""}, {"name": "default_channel", "description": "", "default": "\"\""}, {"name": "default_emoji", "description": "", "default": "\":information_source:\""}, {"name": "lambda_iam_role_name", "description": "", "default": "\"lambda-sns-to-spark\""}, {"name": "lambda_iam_policy_name", "description": "", "default": "\"lambda-sns-to-spark-policy\""}, {"name": "spark_bearer_token", "description": "", "default": ""}]}, "outerstack/ec2migrate/aws": {"name": "ec2migrate", "url": "https://registry.terraform.io/modules/outerstack/ec2migrate/aws", "provider": "aws", "downloads": 5, "description": "Terraform module for making EC2 migrations easier", "source": "outerstack/ec2migrate/aws", "args": [{"name": "in", "description": "All source configuration options", "default": ""}, {"name": "out", "description": "All target configuration options", "default": ""}, {"name": "snapshot_without_reboot", "description": "Perform snapshot during migration without a reboot", "default": "\"false\""}, {"name": "connection", "description": "Remote execution connection settings", "default": "{}"}, {"name": "pre_remote_cmd", "description": "Run pre-flight scripts remotely executed", "default": "\"\""}, {"name": "post_local_cmd", "description": "Run post landing scripts locally executed", "default": "\"\""}, {"name": "post_remote_cmd", "description": "Run post landing scripts remotely executed", "default": "\"\""}]}, "manicminer/acm-certificate/aws": {"name": "acm-certificate", "url": "https://registry.terraform.io/modules/manicminer/acm-certificate/aws", "provider": "aws", "downloads": 5, "description": "Terraform module to create and validate AWS ACM certificates with DNS validation via Route53", "source": "manicminer/acm-certificate/aws", "args": [{"name": "domain_names", "description": "List of domains to associate with the new certificate. ACM currently supports up to 10 domains, any or all of which can contain wildcards. The first domain should be the primary domain", "default": ""}, {"name": "zone_id", "description": "The Route53 zone ID in which to create validation records", "default": ""}]}, "cloudposse/cloudtrail/aws": {"name": "cloudtrail", "url": "https://registry.terraform.io/modules/cloudposse/cloudtrail/aws", "provider": "aws", "downloads": 4, "description": "Terraform module to provision an AWS CloudTrail and an encrypted S3 bucket with versioning to store CloudTrail logs", "source": "cloudposse/cloudtrail/aws", "args": [{"name": "cloud_watch_logs_group_arn", "description": "Specifies a log group name using an Amazon Resource Name (ARN), that represents the log group to which CloudTrail logs will be delivered", "default": "\"\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "attributes", "description": "Additional attributes (e.g. `logs`)", "default": "[]"}, {"name": "include_global_service_events", "description": "Specifies whether the trail is publishing events from global services such as IAM to the log files", "default": "\"false\""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "s3_bucket_name", "description": "S3 bucket name for CloudTrail logs", "default": ""}, {"name": "event_selector", "description": "Specifies an event selector for enabling data event logging. See: https://www.terraform.io/docs/providers/aws/r/cloudtrail.html for details on this map variable", "default": "{}"}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "enable_log_file_validation", "description": "Specifies whether log file integrity validation is enabled. Creates signed digest for validated contents of logs", "default": "\"true\""}, {"name": "enable_logging", "description": "Enable logging for the trail", "default": "\"true\""}, {"name": "cloud_watch_logs_role_arn", "description": "Specifies the role for the CloudWatch Logs endpoint to assume to write to a user\u2019s log group", "default": "\"\""}, {"name": "kms_key_id", "description": "Specifies the KMS key ARN to use to encrypt the logs delivered by CloudTrail", "default": "\"\""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "is_multi_region_trail", "description": "Specifies whether the trail is created in the current region or in all regions", "default": "\"false\""}]}, "cloudposse/ec2-instance/aws": {"name": "ec2-instance", "url": "https://registry.terraform.io/modules/cloudposse/ec2-instance/aws", "provider": "aws", "downloads": 4, "description": "Terraform Module for providing a general EC2 instance provisioned by Ansible", "source": "cloudposse/ec2-instance/aws", "args": [{"name": "subnet", "description": "VPC Subnet ID the instance is launched in", "default": ""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `bastion` or `db`)", "default": ""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "comparison_operator", "description": "The arithmetic operation to use when comparing the specified Statistic and Threshold. Possible values are: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold.", "default": "\"GreaterThanOrEqualToThreshold\""}, {"name": "metric_name", "description": "The name for the alarm's associated metric. Allowed values can be found in https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ec2-metricscollected.html", "default": "\"StatusCheckFailed_Instance\""}, {"name": "applying_period", "description": "The period in seconds over which the specified statistic is applied", "default": "\"60\""}, {"name": "ssh_key_pair", "description": "SSH key pair to be provisioned on the instance", "default": ""}, {"name": "additional_ips_count", "description": "Count of additional EIPs", "default": "\"0\""}, {"name": "instance_enabled", "description": "Flag to control the instance creation. Set to false if it is necessary to skip instance creation", "default": "\"true\""}, {"name": "ipv6_address_count", "description": "Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet", "default": "\"0\""}, {"name": "ebs_volume_count", "description": "Count of EBS volumes that will be attached to the instance", "default": "\"0\""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`", "default": ""}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "ipv6_addresses", "description": "List of IPv6 addresses from the range of the subnet to associate with the primary network interface", "default": "[]"}, {"name": "root_volume_size", "description": "Size of the root volume in gigabytes", "default": "\"10\""}, {"name": "metric_threshold", "description": "The value against which the specified statistic is compared", "default": "\"1\""}, {"name": "assign_eip_address", "description": "Assign an Elastic IP address to the instance", "default": "\"true\""}, {"name": "ami", "description": "The AMI to use for the instance. By default it is the AMI provided by Amazon with Ubuntu 16.04", "default": "\"\""}, {"name": "ebs_optimized", "description": "Launched EC2 instance will be EBS-optimized", "default": "\"false\""}, {"name": "ebs_volume_type", "description": "The type of EBS volume. Can be standard, gp2 or io1", "default": "\"gp2\""}, {"name": "welcome_message", "description": "", "default": "\"\""}, {"name": "evaluation_periods", "description": "The number of periods over which data is compared to the specified threshold.", "default": "\"5\""}, {"name": "create_default_security_group", "description": "Create default Security Group with only Egress traffic allowed", "default": "\"true\""}, {"name": "allowed_ports", "description": "List of allowed ingress ports", "default": "[]"}, {"name": "availability_zone", "description": "Availability Zone the instance is launched in. If not set, will be launched in the first AZ of the region", "default": "\"\""}, {"name": "ebs_device_name", "description": "Name of the EBS device to mount", "default": "[\n  \"/dev/xvdb\",\n  \"/dev/xvdc\",\n  \"/dev/xvdd\",\n  \"/dev/xvde\",\n  \"/dev/xvdf\",\n  \"/dev/xvdg\",\n  \"/dev/xvdh\",\n  \"/dev/xvdi\",\n  \"/dev/xvdj\",\n  \"/dev/xvdk\",\n  \"/dev/xvdl\",\n  \"/dev/xvdm\",\n  \"/dev/xvdn\",\n  \"/dev/xvdo\",\n  \"/dev/xvdp\",\n  \"/dev/xvdq\",\n  \"/dev/xvdr\",\n  \"/dev/xvds\",\n  \"/dev/xvdt\",\n  \"/dev/xvdu\",\n  \"/dev/xvdv\",\n  \"/dev/xvdw\",\n  \"/dev/xvdx\",\n  \"/dev/xvdy\",\n  \"/dev/xvdz\"\n]"}, {"name": "metric_namespace", "description": "The namespace for the alarm's associated metric. Allowed values can be found in https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-namespaces.html", "default": "\"AWS/EC2\""}, {"name": "statistic_level", "description": "The statistic to apply to the alarm's associated metric. Allowed values are: SampleCount, Average, Sum, Minimum, Maximum", "default": "\"Maximum\""}, {"name": "user_data", "description": "Instance user data. Do not pass gzip-compressed data via this argument", "default": "\"\""}, {"name": "tags", "description": "Additional tags", "default": "{}"}, {"name": "disable_api_termination", "description": "Enable EC2 Instance Termination Protection", "default": "\"false\""}, {"name": "root_iops", "description": "Amount of provisioned IOPS. This must be set if root_volume_type is set to `io1`", "default": "\"0\""}, {"name": "instance_type", "description": "The type of the instance", "default": "\"t2.micro\""}, {"name": "vpc_id", "description": "The ID of the VPC that the instance security group belongs to", "default": ""}, {"name": "region", "description": "AWS Region the instance is launched in", "default": "\"\""}, {"name": "root_volume_type", "description": "Type of root volume. Can be standard, gp2 or io1", "default": "\"gp2\""}, {"name": "delete_on_termination", "description": "Whether the volume should be destroyed on instance termination", "default": "\"true\""}, {"name": "associate_public_ip_address", "description": "Associate a public IP address with the instance", "default": "\"true\""}, {"name": "monitoring", "description": "Launched EC2 instance will have detailed monitoring enabled", "default": "\"true\""}, {"name": "private_ip", "description": "Private IP address to associate with the instance in the VPC", "default": "\"\""}, {"name": "source_dest_check", "description": "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs", "default": "\"true\""}, {"name": "ebs_volume_size", "description": "Size of the EBS volume in gigabytes", "default": "\"10\""}, {"name": "ebs_iops", "description": "Amount of provisioned IOPS. This must be set with a volume_type of io1", "default": "\"0\""}, {"name": "default_alarm_action", "description": "", "default": "\"action/actions/AWS_EC2.InstanceId.Reboot/1.0\""}, {"name": "security_groups", "description": "List of Security Group IDs allowed to connect to the instance", "default": "[]"}]}, "poseidon/kubernetes/google": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/poseidon/kubernetes/google", "provider": "google", "downloads": 4, "description": "Typhoon Google Cloud - minimal and free Kubernetes (mirror)", "source": "poseidon/kubernetes/google", "args": [{"name": "cluster_domain_suffix", "description": "Queries for domains with the suffix will be answered by coredns. Default is cluster.local (e.g. foo.default.svc.cluster.local) ", "default": "\"cluster.local\""}, {"name": "worker_count", "description": "Number of workers", "default": "\"1\""}, {"name": "controller_type", "description": "Machine type for controllers (see `gcloud compute machine-types list`)", "default": "\"n1-standard-1\""}, {"name": "pod_cidr", "description": "CIDR IPv4 range to assign Kubernetes pods", "default": "\"10.2.0.0/16\""}, {"name": "service_cidr", "description": "CIDR IPv4 range to assign Kubernetes services.\nThe 1st IP will be reserved for kube_apiserver, the 10th IP will be reserved for coredns.\n", "default": "\"10.3.0.0/16\""}, {"name": "cluster_name", "description": "Unique cluster name (prepended to dns_zone)", "default": ""}, {"name": "region", "description": "Google Cloud Region (e.g. us-central1, see `gcloud compute regions list`)", "default": ""}, {"name": "worker_type", "description": "Machine type for controllers (see `gcloud compute machine-types list`)", "default": "\"n1-standard-1\""}, {"name": "networking", "description": "Choice of networking provider (flannel or calico)", "default": "\"calico\""}, {"name": "controller_count", "description": "Number of controllers (i.e. masters)", "default": "\"1\""}, {"name": "os_image", "description": "Container Linux image for compute instances (e.g. coreos-stable)", "default": "\"coreos-stable\""}, {"name": "disk_size", "description": "Size of the disk in GB", "default": "\"40\""}, {"name": "controller_clc_snippets", "description": "Controller Container Linux Config snippets", "default": "[]"}, {"name": "worker_clc_snippets", "description": "Worker Container Linux Config snippets", "default": "[]"}, {"name": "ssh_authorized_key", "description": "SSH public key for user 'core'", "default": ""}, {"name": "asset_dir", "description": "Path to a directory where generated assets should be placed (contains secrets)", "default": ""}, {"name": "dns_zone", "description": "Google Cloud DNS Zone (e.g. google-cloud.example.com)", "default": ""}, {"name": "dns_zone_name", "description": "Google Cloud DNS Zone name (e.g. example-zone)", "default": ""}, {"name": "worker_preemptible", "description": "If enabled, Compute Engine will terminate workers randomly within 24 hours", "default": "\"false\""}]}, "mitchellh/fastai/aws": {"name": "fastai", "url": "https://registry.terraform.io/modules/mitchellh/fastai/aws", "provider": "aws", "downloads": 4, "description": "Terraform module to create Fast.ai course instance.", "source": "mitchellh/fastai/aws", "args": [{"name": "instance_type", "description": "Instance type, must be a GPU instance.", "default": "\"p2.xlarge\""}]}, "btower-labz/btlabz-vpc-ha-3x/aws": {"name": "btlabz-vpc-ha-3x", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-vpc-ha-3x/aws", "provider": "aws", "downloads": 4, "description": "BTLabz AWS VPC parts: HA VPC (3x, pri, pub, nat)", "source": "btower-labz/btlabz-vpc-ha-3x/aws", "args": [{"name": "az_a", "description": "Availability zone for 'A' subnets. Both private and public.", "default": "\"\""}, {"name": "az_b", "description": "Availability zone for 'B' subnets. Both private and public.", "default": "\"\""}, {"name": "az_c", "description": "Availability zone for 'C' subnets. Both private and public.", "default": "\"\""}, {"name": "vpc_cidr", "description": "VPC CIDR range.", "default": "\"172.18.0.0/16\""}, {"name": "public_a_cidr", "description": "Public network A CIDR range.", "default": "\"172.18.1.0/24\""}, {"name": "public_b_cidr", "description": "Public network B CIDR range.", "default": "\"172.18.2.0/24\""}, {"name": "public_c_cidr", "description": "Public network C CIDR range.", "default": "\"172.18.3.0/24\""}, {"name": "private_a_cidr", "description": "Private network A CIDR range.", "default": "\"172.18.11.0/24\""}, {"name": "private_b_cidr", "description": "Private network B CIDR range.", "default": "\"172.18.12.0/24\""}, {"name": "private_c_cidr", "description": "Private network C CIDR range.", "default": "\"172.18.13.0/24\""}, {"name": "igw_name", "description": "IGW name. Will be used as the 'Name' tag value.", "default": "\"main-igw\""}, {"name": "nat_a_name", "description": "NAT-A name. Will be used as the 'Name' tag value.", "default": "\"nat-a\""}, {"name": "nat_b_name", "description": "NAT-B name. Will be used as the 'Name' tag value.", "default": "\"nat-b\""}, {"name": "nat_c_name", "description": "NAT-C name. Will be used as the 'Name' tag value.", "default": "\"nat-c\""}, {"name": "rt_public_name", "description": "Main public route table name.", "default": "\"rt-public\""}, {"name": "rt_private_a_name", "description": "Route table name for private subnet A.", "default": "\"rt-private-a\""}, {"name": "rt_private_b_name", "description": "Route table name for private subnet C.", "default": "\"rt-private-b\""}, {"name": "rt_private_c_name", "description": "Route table name for private subnet C.", "default": "\"rt-private-c\""}, {"name": "vpc_name", "description": "VPC name. Will be used as the 'Name' tag value.", "default": "\"main-vpc\""}, {"name": "public_a_name", "description": "Public subnet A name. Will be used as the 'Name' tag value.", "default": "\"public-a\""}, {"name": "public_b_name", "description": "Public subnet B name. Will be used as the 'Name' tag value.", "default": "\"public-b\""}, {"name": "public_c_name", "description": "Public subnet C name. Will be used as the 'Name' tag value.", "default": "\"public-c\""}, {"name": "private_a_name", "description": "Private subnet A name. Will be used as the 'Name' tag value.", "default": "\"private-a\""}, {"name": "private_b_name", "description": "Private subnet B name. Will be used as the 'Name' tag value.", "default": "\"private-b\""}, {"name": "private_c_name", "description": "Private subnet C name. Will be used as the 'Name' tag value.", "default": "\"private-c\""}, {"name": "tags", "description": "Additional tags.", "default": "{}"}]}, "javilac/iam/aws": {"name": "iam", "url": "https://registry.terraform.io/modules/javilac/iam/aws", "provider": "aws", "downloads": 4, "description": "Module to create aws iam resources", "source": "javilac/iam/aws", "args": [{"name": "user_name", "description": "The user's name.", "default": ""}, {"name": "path", "description": "Path in which to create the user.", "default": "\"/\""}, {"name": "force_destroy", "description": "When destroying this user, destroy even if it has non-Terraform-managed IAM access keys, login profile or MFA devices.", "default": "false"}, {"name": "pgp_key", "description": "Either a base-64 encoded PGP public key, or a keybase username in the form keybase:some_person_that_exists.", "default": "\"\""}, {"name": "policy", "description": "The (json) policy document", "default": ""}, {"name": "policy_name", "description": "The name of the policy. If omitted, Terraform will assign a random, unique name.", "default": "\"\""}]}, "apparentlymart/serverless-webapp/aws": {"name": "serverless-webapp", "url": "https://registry.terraform.io/modules/apparentlymart/serverless-webapp/aws", "provider": "aws", "downloads": 4, "description": "Terraform module for deploying \"serverless\" applications to AWS Lambda and Amazon API Gateway", "source": "apparentlymart/serverless-webapp/aws", "args": [{"name": "description", "description": "Description used for both the AWS Lambda function and the API Gateway \"REST API\".", "default": "\"\""}, {"name": "lambda_function_name", "description": "The name to use for the created AWS Lambda function.", "default": ""}, {"name": "lambda_execution_role", "description": "The ARN of an IAM role to use as the execution role for the created AWS Lambda function.", "default": ""}, {"name": "lambda_runtime", "description": "Keyword representing the AWS Lambda runtime environment to use.", "default": ""}, {"name": "lambda_handler", "description": "Address of the handler function within the Lambda function's code package. The interpretation of this string depends on the selected runtime.", "default": ""}, {"name": "lambda_memory_size", "description": "Amount of RAM available to the Lambda function in megabytes.", "default": "128"}, {"name": "lambda_timeout", "description": "Maximum number of seconds the function is allowed to run for on each invocation.", "default": "3"}, {"name": "environment_variables", "description": "Map of environment variables to set when executing the Lambda function code.", "default": "{\n  \"TF_LAMBDA_SERVERLESS__\": \"true\"\n}"}, {"name": "api_gateway_name", "description": "The name to use for the created Amazon API Gateway \"REST API\" object.", "default": ""}, {"name": "artifact_s3_bucket", "description": "The name of the S3 bucket that contains AWS Lambda function packages.", "default": ""}, {"name": "artifact_s3_object_key", "description": "The path of the object within artifact_s3_bucket that will be used as the Lambda function code package.", "default": ""}, {"name": "domain_name", "description": "A custom domain name to publish the application at.", "default": "\"\""}, {"name": "acm_certificate_arn", "description": "ARN of an ACM certificate to use for the custom domain name, if set. This variable is required if domain_name is set.", "default": "\"\""}, {"name": "tags", "description": "Map of tags to apply to all objects that support tags.", "default": "{}"}]}, "viceIII/redis-cluster/aws": {"name": "redis-cluster", "url": "https://registry.terraform.io/modules/viceIII/redis-cluster/aws", "provider": "aws", "downloads": 4, "description": "", "source": "viceIII/redis-cluster/aws", "args": [{"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "subnet_ids", "description": "", "default": ""}, {"name": "security_group_ids", "description": "", "default": ""}, {"name": "redis_identifier", "description": "", "default": ""}, {"name": "parameter_group", "description": "", "default": "\"redis3.2\""}, {"name": "maintenance_window", "description": "", "default": ""}, {"name": "desired_clusters", "description": "", "default": "\"1\""}, {"name": "instance_type", "description": "", "default": "\"cache.m4.large\""}, {"name": "engine_version", "description": "", "default": "\"3.2.4\""}, {"name": "automatic_failover_enabled", "description": "", "default": "false"}]}, "ming-wu/minikube/aws": {"name": "minikube", "url": "https://registry.terraform.io/modules/ming-wu/minikube/aws", "provider": "aws", "downloads": 4, "description": "Terraform module for single node Kubernetes instance bootstrapped using kubeadm", "source": "ming-wu/minikube/aws", "args": [{"name": "aws_region", "description": "Region where Cloud Formation is created", "default": "\"eu-central-1\""}, {"name": "cluster_name", "description": "Name of the AWS Minikube cluster - will be used to name all created resources", "default": ""}, {"name": "tags", "description": "Tags used for the AWS resources created by this template", "default": ""}, {"name": "addons", "description": "list of YAML files with Kubernetes addons which should be installed", "default": ""}, {"name": "aws_instance_type", "description": "Type of instance", "default": "\"t2.medium\""}, {"name": "aws_subnet_id", "description": "The subnet-id to be used for the instance", "default": ""}, {"name": "ssh_public_key", "description": "Path to the pulic part of SSH key which should be used for the instance", "default": "\"~/.ssh/id_rsa.pub\""}, {"name": "hosted_zone", "description": "Hosted zone to be used for the alias", "default": ""}, {"name": "hosted_zone_private", "description": "Is the hosted zone public or private", "default": "false"}]}, "matti/up/kupo": {"name": "up", "url": "https://registry.terraform.io/modules/matti/up/kupo", "provider": "kupo", "downloads": 4, "description": "", "source": "matti/up/kupo", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "yaml", "description": "", "default": ""}]}, "matti/gce-stateful-zonal-instance-groups/google": {"name": "gce-stateful-zonal-instance-groups", "url": "https://registry.terraform.io/modules/matti/gce-stateful-zonal-instance-groups/google", "provider": "google", "downloads": 4, "description": "", "source": "matti/gce-stateful-zonal-instance-groups/google", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "region", "description": "", "default": "\"\""}, {"name": "can_ip_forward", "description": "", "default": "\"0\""}, {"name": "base_name", "description": "", "default": ""}, {"name": "amount", "description": "", "default": "\"1\""}, {"name": "offset", "description": "", "default": "\"0\""}, {"name": "address_offset", "description": "", "default": "\"0\""}, {"name": "address_fixed", "description": "", "default": "\"0\""}, {"name": "boot_disk_type", "description": "", "default": "\"pd-ssd\""}, {"name": "boot_disk_source_image", "description": "", "default": ""}, {"name": "boot_disk_size", "description": "", "default": ""}, {"name": "machine_type", "description": "", "default": ""}, {"name": "tags", "description": "", "default": "[]"}, {"name": "network", "description": "", "default": "\"default\""}, {"name": "preemptible", "description": "", "default": "\"0\""}, {"name": "metadata", "description": "", "default": "{}"}]}, "merten2000/test/aws": {"name": "test", "url": "https://registry.terraform.io/modules/merten2000/test/aws", "provider": "aws", "downloads": 4, "description": "", "source": "merten2000/test/aws", "args": []}, "cloudposse/cloudwatch-logs/aws": {"name": "cloudwatch-logs", "url": "https://registry.terraform.io/modules/cloudposse/cloudwatch-logs/aws", "provider": "aws", "downloads": 4, "description": "Terraform Module to Provide a CloudWatch Logs Endpoint", "source": "cloudposse/cloudwatch-logs/aws", "args": [{"name": "name", "description": "Name  (e.g. `bastion` or `db`)", "default": "\"\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "retention_in_days", "description": "Number of days you want to retain log events in the log group", "default": "\"30\""}, {"name": "stream_names", "description": "Names of streams", "default": "[]"}, {"name": "trusted_roles", "description": "Roles allow to assume role", "default": "[]"}, {"name": "additional_permissions", "description": "Additional permissions granted to assumed role", "default": "[\n  \"logs:CreateLogStream\",\n  \"logs:DeleteLogStream\"\n]"}]}, "sbogacz/multiregion-static-site/aws": {"name": "multiregion-static-site", "url": "https://registry.terraform.io/modules/sbogacz/multiregion-static-site/aws", "provider": "aws", "downloads": 4, "description": "A repo to hold a Terraform module that simplifies website deploys.", "source": "sbogacz/multiregion-static-site/aws", "args": [{"name": "aws_region", "description": "the AWS region to deploy the S3 resources to", "default": "\"us-east-1\""}, {"name": "tags", "description": "optional tags to attach to the created s3 resources", "default": "{}"}, {"name": "index_page", "description": "path to the desired index page", "default": "\"index.html\""}, {"name": "error_page", "description": "path to the desired error page", "default": "\"404.html\""}, {"name": "logs_prefix", "description": "the prefix to use in the logging bucket", "default": "\"logs/\""}, {"name": "enable_replication", "description": "a flag to enable cross-region replication. If set to true, then replication_aws_region should also be set, or it will default to us-west-2", "default": "false"}, {"name": "replication_aws_region", "description": "the AWS region to deploy the replicated S3 resources to. If not empty, cross-region S3 replication will be enabled", "default": "\"us-west-2\""}, {"name": "force_destroy", "description": "a passthrough variable to the created s3 buckets to allow the terraform destroy to succeed in the event that objects are present. Be warned, these objects will NOT be recoverable", "default": "false"}, {"name": "http_method_configuration", "description": "determine which HTTP methods will be allowed on the CloudFront distribution. Options are all (GET,PUT,POST,DELETE,ETC.), read (GET, HEAD), and read-and-options(GET,HEAD,OPTIONS). Defaults to all, but most static website cases will want to use read or read-and-options.", "default": "\"all\""}, {"name": "cached_http_method_configuration", "description": "determine which HTTP methods will be cached on the CloudFront distribution. Options are all (GET,PUT,POST,DELETE,ETC.), read (GET, HEAD), and read-and-options(GET,HEAD,OPTIONS). Defaults to read-and-options", "default": "\"read-and-options\""}, {"name": "failover", "description": "a boolean indicating whether you want to change the CloudFront origin to point to the replication bucket. If set to true, replication_aws_region MUST BE SET", "default": "false"}, {"name": "domain", "description": "name of the website's domain you're creating CloudFront assets for", "default": ""}, {"name": "aliases", "description": "if your cert is for a different (non-CloudFront domain) specify the domain names and their aliases (e.g. mywebsite.com, www.mywebsite.com)", "default": "[]"}, {"name": "min_ttl", "description": "the minimum TTL to set on the CloudFront cache", "default": "0"}, {"name": "default_ttl", "description": "the default TTL to set on the CloudFront cache", "default": "1800"}, {"name": "max_ttl", "description": "the maximum TTL to set on the CloudFront cache", "default": "86400"}, {"name": "acm_certificate_arn", "description": "if you obtained an SSL cert from AWS Route 53 for your website, then set this field to the ARN of that cert", "default": "\"\""}]}, "GMafra/firewall-rules/gcp": {"name": "firewall-rules", "url": "https://registry.terraform.io/modules/GMafra/firewall-rules/gcp", "provider": "gcp", "downloads": 4, "description": " Terraform module for creating Firewall rules on Google Cloud", "source": "GMafra/firewall-rules/gcp", "args": [{"name": "name", "description": "Name of the Firewall rule", "default": ""}, {"name": "network", "description": "The name or self_link of the network to attach this firewall to", "default": ""}, {"name": "source_ranges", "description": "A list of source CIDR ranges that this firewall applies to. Can't be used for EGRESS", "default": ""}, {"name": "target_tags", "description": "A list of target tags for this firewall", "default": ""}, {"name": "protocol", "description": "The name of the protocol to allow. This value can either be one of the following well known protocol strings (tcp, udp, icmp, esp, ah, sctp), or the IP protocol number, or all", "default": ""}, {"name": "ports", "description": "List of ports and/or port ranges to allow. This can only be specified if the protocol is TCP or UDP", "default": ""}]}, "portworx/portworx-instance/portworx": {"name": "portworx-instance", "url": "https://registry.terraform.io/modules/portworx/portworx-instance/portworx", "provider": "portworx", "downloads": 4, "description": "Terraform module for deploying Portworx persistent data fabric for containers", "source": "portworx/portworx-instance/portworx", "args": [{"name": "clusterID", "description": "Portworx Unique Cluster ID (-c).  https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "kvdb", "description": "Key-value data store :'etcd' or 'consul' (-k). https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "device_args", "description": "List of device arguments (-s -a -A).  https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "data_if", "description": "Network interface for data traffic (-d).  https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "mgmt_if", "description": "Network interface for management traffic (-m). https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "journal_dev", "description": "Special device to use for I/O journal (-j). https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "scheduler", "description": "Scheduler (-x).  https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "token", "description": "Token to use, if provisioned through Lighthouse (-t). https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "force_use", "description": "Force use of block devices with existing FS data (-f). https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "zero_storage", "description": "Allows node with no storage to run in 'zero-storage' mode (-z). https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "env_list", "description": "Additional environment variables (-e). https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "secret_type", "description": "Secret type for CloudSnap and Encryption: [aws|vault|kvdb] (-secret_type). https://docs.portworx.com/runc/options.html", "default": "\"\""}, {"name": "cluster_secret_key", "description": "Cluster-wide secret key when using AWS KMS or Vault for volume encryption. https://docs.portworx.com/runc/options.html", "default": "\"\""}]}, "cloudposse/ec2-instance-group/aws": {"name": "ec2-instance-group", "url": "https://registry.terraform.io/modules/cloudposse/ec2-instance-group/aws", "provider": "aws", "downloads": 4, "description": "Terraform Module for provisioning multiple general purpose EC2 hosts for stateful applications.", "source": "cloudposse/ec2-instance-group/aws", "args": [{"name": "evaluation_periods", "description": "The number of periods over which data is compared to the specified threshold.", "default": "\"5\""}, {"name": "ssh_key_pair", "description": "SSH key pair to be provisioned on the instance", "default": "\"\""}, {"name": "ssh_key_pair_path", "description": "Path to where the generated key pairs will be created. Defaults to ${path.cwd}", "default": "\"\""}, {"name": "root_volume_size", "description": "Size of the root volume in gigabytes", "default": "\"10\""}, {"name": "ebs_volume_size", "description": "Size of the EBS volume in gigabytes", "default": "\"10\""}, {"name": "metric_name", "description": "The name for the alarm's associated metric. Allowed values can be found in https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/ec2-metricscollected.html", "default": "\"StatusCheckFailed_Instance\""}, {"name": "default_alarm_action", "description": "", "default": "\"action/actions/AWS_EC2.InstanceId.Reboot/1.0\""}, {"name": "instance_type", "description": "The type of the instance", "default": "\"t2.micro\""}, {"name": "vpc_id", "description": "The ID of the VPC that the instance security group belongs to", "default": ""}, {"name": "root_iops", "description": "Amount of provisioned IOPS. This must be set if root_volume_type is set to `io1`", "default": "\"0\""}, {"name": "ebs_iops", "description": "Amount of provisioned IOPS. This must be set with a volume_type of io1", "default": "\"0\""}, {"name": "metric_threshold", "description": "The value against which the specified statistic is compared", "default": "\"1\""}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "region", "description": "AWS Region the instance is launched in", "default": ""}, {"name": "availability_zone", "description": "Availability Zone the instance is launched in. If not set, will be launched in the first AZ of the region", "default": "\"\""}, {"name": "source_dest_check", "description": "Controls if traffic is routed to the instance when the destination address does not match the instance. Used for NAT or VPNs", "default": "\"true\""}, {"name": "ebs_volume_count", "description": "Count of EBS volumes that will be attached to the instance", "default": "\"0\""}, {"name": "welcome_message", "description": "", "default": "\"\""}, {"name": "comparison_operator", "description": "The arithmetic operation to use when comparing the specified Statistic and Threshold. Possible values are: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold.", "default": "\"GreaterThanOrEqualToThreshold\""}, {"name": "applying_period", "description": "The period in seconds over which the specified statistic is applied", "default": "\"60\""}, {"name": "associate_public_ip_address", "description": "Associate a public IP address with the instance", "default": "\"true\""}, {"name": "security_groups", "description": "List of Security Group IDs allowed to connect to the instance", "default": "[]"}, {"name": "ebs_optimized", "description": "Launched EC2 instance will be EBS-optimized", "default": "\"false\""}, {"name": "ebs_volume_type", "description": "The type of EBS volume. Can be standard, gp2 or io1", "default": "\"gp2\""}, {"name": "delete_on_termination", "description": "Whether the volume should be destroyed on instance termination", "default": "\"true\""}, {"name": "statistic_level", "description": "The statistic to apply to the alarm's associated metric. Allowed values are: SampleCount, Average, Sum, Minimum, Maximum", "default": "\"Maximum\""}, {"name": "create_default_security_group", "description": "Create default Security Group with only Egress traffic allowed", "default": "\"true\""}, {"name": "generate_ssh_key_pair", "description": "If true, create a new key pair and save the pem for it to the current working directory", "default": "\"false\""}, {"name": "allowed_ports", "description": "List of allowed ingress ports", "default": "[]"}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging` - required for `terraform-terraform-label` module", "default": ""}, {"name": "ipv6_addresses", "description": "List of IPv6 addresses from the range of the subnet to associate with the primary network interface", "default": "[]"}, {"name": "root_volume_type", "description": "Type of root volume. Can be standard, gp2 or io1", "default": "\"gp2\""}, {"name": "monitoring", "description": "Launched EC2 instance will have detailed monitoring enabled", "default": "\"true\""}, {"name": "instance_enabled", "description": "Flag to control the instance creation. Set to false if it is necessary to skip instance creation", "default": "\"true\""}, {"name": "user_data", "description": "Instance user data. Do not pass gzip-compressed data via this argument", "default": "\"\""}, {"name": "subnet", "description": "VPC Subnet ID the instance is launched in", "default": ""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags", "default": "{}"}, {"name": "disable_api_termination", "description": "Enable EC2 Instance Termination Protection", "default": "\"false\""}, {"name": "metric_namespace", "description": "The namespace for the alarm's associated metric. Allowed values can be found in https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/aws-namespaces.html", "default": "\"AWS/EC2\""}, {"name": "assign_eip_address", "description": "Assign an Elastic IP address to the instance", "default": "\"true\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`) - required for `terraform-terraform-label` module", "default": ""}, {"name": "name", "description": "Name  (e.g. `bastion` or `db`) - required for `terraform-terraform-label` module", "default": ""}, {"name": "ami", "description": "The AMI to use for the instance.", "default": ""}, {"name": "ebs_device_names", "description": "Name of the EBS device to mount", "default": "[\n  \"/dev/xvdb\",\n  \"/dev/xvdc\",\n  \"/dev/xvdd\",\n  \"/dev/xvde\",\n  \"/dev/xvdf\",\n  \"/dev/xvdg\",\n  \"/dev/xvdh\",\n  \"/dev/xvdi\",\n  \"/dev/xvdj\",\n  \"/dev/xvdk\",\n  \"/dev/xvdl\",\n  \"/dev/xvdm\",\n  \"/dev/xvdn\",\n  \"/dev/xvdo\",\n  \"/dev/xvdp\",\n  \"/dev/xvdq\",\n  \"/dev/xvdr\",\n  \"/dev/xvds\",\n  \"/dev/xvdt\",\n  \"/dev/xvdu\",\n  \"/dev/xvdv\",\n  \"/dev/xvdw\",\n  \"/dev/xvdx\",\n  \"/dev/xvdy\",\n  \"/dev/xvdz\"\n]"}, {"name": "private_ips", "description": "Private IP address to associate with the instances in the VPC", "default": "[]"}, {"name": "ipv6_address_count", "description": "Number of IPv6 addresses to associate with the primary network interface. Amazon EC2 chooses the IPv6 addresses from the range of your subnet", "default": "\"0\""}, {"name": "additional_ips_count", "description": "Count of additional EIPs", "default": "\"0\""}, {"name": "instance_count", "description": "Count of ec2 instances to create", "default": "\"1\""}]}, "terraformdns/dns-recordsets/azurerm": {"name": "dns-recordsets", "url": "https://registry.terraform.io/modules/terraformdns/dns-recordsets/azurerm", "provider": "azurerm", "downloads": 4, "description": "Terraform module for creating DNS recordsets in an Azure DNS zone", "source": "terraformdns/dns-recordsets/azurerm", "args": [{"name": "resource_group_name", "description": "The name of the resource group that contains the DNS zone where the records will be added.", "default": ""}, {"name": "dns_zone_name", "description": "The name of the DNS zone within the given resource group where the records will be added.", "default": ""}, {"name": "recordsets", "description": "List of DNS record objects to manage, in the standard terraformdns structure.", "default": ""}]}, "nephosolutions/gcs-bucket/google": {"name": "gcs-bucket", "url": "https://registry.terraform.io/modules/nephosolutions/gcs-bucket/google", "provider": "google", "downloads": 4, "description": "", "source": "nephosolutions/gcs-bucket/google", "args": [{"name": "project_id", "description": "The ID of the google project to which the resource belongs. If it is not provided, the provider project is used.", "default": "\"\""}, {"name": "region", "description": "The GCS region. If it is not provided, the provider region is used.", "default": "\"\""}, {"name": "role_entities", "description": "", "default": "[]"}, {"name": "storage_class", "description": "The Storage Class of the new bucket. Supported values include: MULTI_REGIONAL, REGIONAL, NEARLINE, COLDLINE.", "default": "\"REGIONAL\""}, {"name": "versioning", "description": "Version bucket objects?", "default": "false"}, {"name": "website_config", "description": "", "default": "[]"}, {"name": "force_destroy", "description": "When deleting a bucket, this boolean option will delete all contained objects.", "default": "\"false\""}, {"name": "lifecycle_rules", "description": "", "default": "[]"}, {"name": "name", "description": "The name of the bucket", "default": ""}]}, "kickin6/firewall-rule/google": {"name": "firewall-rule", "url": "https://registry.terraform.io/modules/kickin6/firewall-rule/google", "provider": "google", "downloads": 4, "description": "Modular Network Firewall Rule on Google Compute Engine for Terraform. Includes sub-modules for every allowed variable combination in both INGRESS and EGRESS directions.", "source": "kickin6/firewall-rule/google", "args": [{"name": "priority", "description": "Rule priority. Lower numbers are given more precedence.", "default": "\"1000\""}, {"name": "source_ranges", "description": "Ingress CIDR ranges. List of strings.", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "source_tags", "description": "Source network tags. List of strings.", "default": "[]"}, {"name": "target_tags", "description": "Destination network tags. List of strings.", "default": "[]"}, {"name": "name", "description": "Firewall rule name.", "default": "\"\""}]}, "nephosolutions/iam-service-account/google": {"name": "iam-service-account", "url": "https://registry.terraform.io/modules/nephosolutions/iam-service-account/google", "provider": "google", "downloads": 4, "description": "", "source": "nephosolutions/iam-service-account/google", "args": [{"name": "account_id", "description": "The service account ID. Changing this forces a new service account to be created.", "default": ""}, {"name": "create_service_account_key_pair", "description": "Whether to create a key_pair for this service account.", "default": "\"false\""}, {"name": "display_name", "description": "The display name for the service account. Can be updated without creating a new resource.", "default": ""}, {"name": "pgp_key", "description": "A PGP key to encrypt the resulting private key material. Only used when creating or importing a new key pair. May either be a base64-encoded public key or a keybase:keybaseusername string for looking up in Vault.", "default": ""}, {"name": "project_id", "description": "The ID of the GCP project that the service account will be created in.", "default": ""}]}, "schoology/consul-yaml/provider": {"name": "consul-yaml", "url": "https://registry.terraform.io/modules/schoology/consul-yaml/provider", "provider": "provider", "downloads": 4, "description": "Terraform Consul provider with YAML support", "source": "schoology/consul-yaml/provider", "args": []}, "cloudposse/elasticache-memcached/aws": {"name": "elasticache-memcached", "url": "https://registry.terraform.io/modules/cloudposse/elasticache-memcached/aws", "provider": "aws", "downloads": 3, "description": "Terraform Module for ElastiCache Memcached Cluster", "source": "cloudposse/elasticache-memcached/aws", "args": [{"name": "namespace", "description": "", "default": "\"global\""}, {"name": "stage", "description": "", "default": "\"default\""}, {"name": "name", "description": "", "default": "\"memcache\""}, {"name": "security_groups", "description": "", "default": ""}, {"name": "vpc_id", "description": "", "default": "\"\""}, {"name": "max_item_size", "description": "", "default": "\"10485760\""}, {"name": "subnets", "description": "", "default": "[]"}, {"name": "maintenance_window", "description": "", "default": "\"wed:03:00-wed:04:00\""}, {"name": "cluster_size", "description": "", "default": "\"1\""}, {"name": "instance_type", "description": "", "default": "\"cache.t2.micro\""}, {"name": "engine_version", "description": "", "default": "\"1.4.33\""}, {"name": "notification_topic_arn", "description": "", "default": "\"\""}, {"name": "alarm_cpu_threshold_percent", "description": "", "default": "\"75\""}, {"name": "alarm_memory_threshold_bytes", "description": "", "default": "\"10000000\""}, {"name": "alarm_actions", "description": "", "default": "[]"}, {"name": "apply_immediately", "description": "", "default": "\"true\""}, {"name": "availability_zones", "description": "", "default": ""}, {"name": "zone_id", "description": "", "default": ""}]}, "r4dx/jmeter/aws": {"name": "jmeter", "url": "https://registry.terraform.io/modules/r4dx/jmeter/aws", "provider": "aws", "downloads": 3, "description": "Easy way to create jMeter cluster with terraform on your AWS infrastructure.", "source": "r4dx/jmeter/aws", "args": [{"name": "aws_region", "description": "", "default": ""}, {"name": "aws_amis", "description": "", "default": "{\n  \"us-east-1\": \"ami-6869aa05\",\n  \"us-west-2\": \"ami-7172b611\"\n}"}, {"name": "availability_zones", "description": "", "default": "\"us-east-1b,us-east-1a\""}, {"name": "slave_instance_type", "description": "Instance type for slave nodes", "default": "\"t2.micro\""}, {"name": "master_instance_type", "description": "Instance type for master node", "default": "\"t2.micro\""}, {"name": "slave_ssh_public_key_file", "description": "SSH public key filename for slave nodes", "default": "\"ssh/slave.pub\""}, {"name": "master_ssh_public_key_file", "description": "SSH public key filename for master node", "default": "\"ssh/master.pub\""}, {"name": "master_ssh_private_key_file", "description": "SSH private key filename for master node", "default": "\"ssh/master\""}, {"name": "slave_asg_size", "description": "Amount of working nodes in ASG", "default": "\"2\""}, {"name": "jmx_script_file", "description": "JMX Script to run on master", "default": ""}, {"name": "jmeter3_url", "description": "URL with jmeter archive", "default": "\"http://apache-mirror.rbc.ru/pub/apache/jmeter/binaries/apache-jmeter-3.3.tgz\""}]}, "odzhu/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/odzhu/vpc/aws", "provider": "aws", "downloads": 3, "description": "AWS VPC Terraform module", "source": "odzhu/vpc/aws", "args": [{"name": "cidr", "description": "CIDR block for the VPC", "default": "\"10.50.0.0/16\""}, {"name": "project", "description": "", "default": "\"default\""}, {"name": "environment", "description": "Environment tag, e.g prod", "default": "\"default\""}, {"name": "internal_subnets", "description": "a list of CIDRs for internal subnets in your VPC", "default": "[\n  \"10.50.0.0/23\",\n  \"10.50.2.0/23\"\n]"}, {"name": "external_subnets", "description": "a list of CIDRs for external subnets in your VPC", "default": "[\n  \"10.50.4.0/23\",\n  \"10.50.6.0/23\"\n]"}, {"name": "availability_zones", "description": "a comma-separated list of availability zones", "default": "[\n  \"eu-west-1a\",\n  \"eu-west-1b\"\n]"}]}, "T-Wong/ethereum/aws": {"name": "ethereum", "url": "https://registry.terraform.io/modules/T-Wong/ethereum/aws", "provider": "aws", "downloads": 3, "description": "A Terraform Module for running an Ethereum mining farm on AWS using Terraform.", "source": "T-Wong/ethereum/aws", "args": [{"name": "name", "description": "The name to use for the resources in this module.", "default": ""}, {"name": "wallet_address", "description": "Your Ethereum wallet address.", "default": ""}, {"name": "fleet_size", "description": "The targwet number of GPUs you want to use for mining. If this value is less than the # of GPUs the instance has, those instances will not be able to start up.", "default": "\"8\""}, {"name": "spot_price", "description": "The maximum amount, in USD, you're willing to spend per GPU, per hour.", "default": "\"0.2\""}, {"name": "valid_until_date", "description": " The end date and time of the request, in UTC ISO8601 format (for example, YYYY-MM-DDTHH:MM:SSZ). At this point, no new Spot instance requests are placed or enabled to fulfill the request.", "default": ""}, {"name": "email", "description": "Email to send alarm notifications to.", "default": ""}, {"name": "aws_region", "description": "AWS region to create resources in", "default": "\"us-west-2\""}, {"name": "ssh_key_name", "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster.", "default": ""}, {"name": "pool_host", "description": "The ethereum pool and port to mine on. In the format <url>:<port>.", "default": "\"eth-us-west1.nanopool.org:9999\""}]}, "cloudposse/teleport-storage/aws": {"name": "teleport-storage", "url": "https://registry.terraform.io/modules/cloudposse/teleport-storage/aws", "provider": "aws", "downloads": 3, "description": "Gravitational Teleport backing services (S3, DynamoDB)", "source": "cloudposse/teleport-storage/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `bastion` or `db`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "region", "description": "AWS Region", "default": ""}, {"name": "prefix", "description": "S3 bucket prefix", "default": "\"\""}, {"name": "standard_transition_days", "description": "Number of days to persist in the standard storage tier before moving to the glacier tier", "default": "\"30\""}, {"name": "glacier_transition_days", "description": "Number of days after which to move the data to the glacier storage tier", "default": "\"60\""}, {"name": "expiration_days", "description": "Number of days after which to expunge the objects", "default": "\"90\""}, {"name": "hash_key", "description": "", "default": "\"HashKey\""}, {"name": "range_key", "description": "", "default": "\"FullPath\""}, {"name": "ttl_attribute", "description": "", "default": "\"Expires\""}, {"name": "autoscale_write_target", "description": "", "default": "50"}, {"name": "autoscale_read_target", "description": "", "default": "50"}, {"name": "autoscale_min_read_capacity", "description": "", "default": "10"}, {"name": "autoscale_max_read_capacity", "description": "", "default": "100"}, {"name": "autoscale_min_write_capacity", "description": "", "default": "10"}, {"name": "autoscale_max_write_capacity", "description": "", "default": "100"}]}, "viceIII/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/viceIII/rds/aws", "provider": "aws", "downloads": 3, "description": "", "source": "viceIII/rds/aws", "args": [{"name": "rds_instance_identifier", "description": "Custom name of the instance", "default": ""}, {"name": "snapshot_identifier", "description": "", "default": "\"\""}, {"name": "security_groups", "description": "", "default": "[]"}, {"name": "rds_is_multi_az", "description": "Set to true on production", "default": "false"}, {"name": "rds_storage_type", "description": "One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD).", "default": "\"standard\""}, {"name": "rds_allocated_storage", "description": "The allocated storage in GBs", "default": ""}, {"name": "rds_engine_type", "description": "Database engine type", "default": ""}, {"name": "rds_engine_version", "description": "Database engine version, depends on engine type", "default": ""}, {"name": "rds_instance_class", "description": "Class of RDS instance", "default": ""}, {"name": "auto_minor_version_upgrade", "description": "Allow automated minor version upgrade", "default": "true"}, {"name": "allow_major_version_upgrade", "description": "Allow major version upgrade", "default": "false"}, {"name": "database_name", "description": "The name of the database to create", "default": ""}, {"name": "database_user", "description": "", "default": ""}, {"name": "database_password", "description": "", "default": ""}, {"name": "database_port", "description": "", "default": ""}, {"name": "db_parameter_group", "description": "Parameter group, depends on DB engine used", "default": ""}, {"name": "publicly_accessible", "description": "Determines if database can be publicly available (NOT recommended)", "default": "false"}, {"name": "subnets", "description": "List of subnets DB should be available at. It might be one subnet.", "default": ""}, {"name": "private_cidr", "description": "VPC private addressing, used for a security group", "default": ""}, {"name": "rds_vpc_id", "description": "VPC to connect to, used for a security group", "default": ""}, {"name": "skip_final_snapshot", "description": "If true (default), no snapshot will be made before deleting DB", "default": "false"}, {"name": "copy_tags_to_snapshot", "description": "Copy tags from DB to a snapshot", "default": "true"}, {"name": "backup_window", "description": "When AWS can run snapshot, can't overlap with maintenance window", "default": "\"22:00-03:00\""}, {"name": "backup_retention_period", "description": "How long will we retain backups", "default": "\"0\""}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}]}, "maartenvanderhoef/timeboard/datadog": {"name": "timeboard", "url": "https://registry.terraform.io/modules/maartenvanderhoef/timeboard/datadog", "provider": "datadog", "downloads": 3, "description": "", "source": "maartenvanderhoef/timeboard/datadog", "args": [{"name": "create", "description": "", "default": "true"}, {"name": "title", "description": "", "default": ""}, {"name": "description", "description": "", "default": ""}, {"name": "read_only", "description": "", "default": "false"}, {"name": "graph", "description": "", "default": "[]"}, {"name": "template_variable", "description": "", "default": "[]"}]}, "cloudnativelabs/kubernetes/packet": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/cloudnativelabs/kubernetes/packet", "provider": "packet", "downloads": 2, "description": "Automated Kubernetes clusters on packet.net servers.", "source": "cloudnativelabs/kubernetes/packet", "args": [{"name": "auth_token", "description": "Secret key/password for your provider.", "default": ""}, {"name": "project_id", "description": "Project ID", "default": ""}, {"name": "spot_instance", "description": "Set to true to create a spot instance. See: https://help.packet.net/technical/deployment-options/spot-market", "default": "\"false\""}, {"name": "spot_price_max", "description": "The bid price for your spot_instance.", "default": "\"\""}, {"name": "operating_system", "description": "The operating system to provision servers with.", "default": "\"custom_ipxe\""}, {"name": "ipxe_script_url", "description": "URL that points to an iPXE script to boot.", "default": "\"https://raw.githubusercontent.com/cloudnativelabs/pxe/master/packet/coreos-alpha-packet.ipxe\""}, {"name": "always_pxe", "description": "If true then the servers will boot via iPXE on reboots.", "default": "\"true\""}, {"name": "server_type", "description": "", "default": "\"baremetal_0\""}, {"name": "facility", "description": "", "default": "\"ewr1\""}, {"name": "controller_count", "description": "How many kubernetes controller servers to create.", "default": ""}, {"name": "worker_count", "description": "How many kubernetes worker servers to create.", "default": ""}, {"name": "server_domain", "description": "Domain to append to server hostnames.", "default": "\"localdomain\""}, {"name": "cluster_name", "description": "", "default": "\"test\""}, {"name": "kubernetes_version", "description": "", "default": "\"v1.7.6\""}, {"name": "asset_dir", "description": "", "default": "\"assets\""}, {"name": "etcd_servers", "description": "", "default": "[]"}, {"name": "experimental_self_hosted_etcd", "description": "", "default": "true"}, {"name": "use_kube_router", "description": "", "default": "true"}, {"name": "kube_router", "description": "", "default": "{\n  \"network_policy\": true,\n  \"pod_networking\": true,\n  \"service_proxy\": true\n}"}, {"name": "use_prometheus", "description": "", "default": "true"}]}, "tdooner/twilio/provider": {"name": "twilio", "url": "https://registry.terraform.io/modules/tdooner/twilio/provider", "provider": "provider", "downloads": 2, "description": "Terraform provider to allocate and configure local phone numbers on twilio", "source": "tdooner/twilio/provider", "args": []}, "cloudposse/efs-backup/aws": {"name": "efs-backup", "url": "https://registry.terraform.io/modules/cloudposse/efs-backup/aws", "provider": "aws", "downloads": 2, "description": "Terraform module designed to easily backup EFS filesystems to S3 using DataPipeline", "source": "cloudposse/efs-backup/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "namespace", "description": "", "default": ""}, {"name": "stage", "description": "", "default": ""}, {"name": "region", "description": "(Optional) AWS Region. If not specified, will be derived from 'aws_region' data source", "default": "\"\""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "use_ip_address", "description": "", "default": "\"false\""}, {"name": "datapipeline_config", "description": "", "default": "{\n  \"email\": \"\",\n  \"instance_type\": \"t2.micro\",\n  \"period\": \"24 hours\",\n  \"timeout\": \"60 Minutes\"\n}"}, {"name": "efs_mount_target_id", "description": "EFS Mount Target ID (e.g. `fsmt-279bfc62`)", "default": ""}, {"name": "modify_security_group", "description": "", "default": "\"false\""}, {"name": "ssh_key_pair", "description": "", "default": ""}, {"name": "noncurrent_version_expiration_days", "description": "", "default": "\"35\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `efs-backup`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. `map('BusinessUnit`,`XYZ`)", "default": "{}"}]}, "cloudposse/dynamic-subnets/aws": {"name": "dynamic-subnets", "url": "https://registry.terraform.io/modules/cloudposse/dynamic-subnets/aws", "provider": "aws", "downloads": 2, "description": "Terraform module for public and private subnets provisioning in existing VPC", "source": "cloudposse/dynamic-subnets/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name (e.g. `app`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`Cluster`,`XYZ`)", "default": "{}"}, {"name": "region", "description": "AWS Region (e.g. `us-east-1`)", "default": ""}, {"name": "max_subnet_count", "description": "Sets the maximum amount of subnets to deploy.  0 will deploy a subnet for every availablility zone within the region", "default": "0"}, {"name": "vpc_id", "description": "VPC ID where subnets will be created (e.g. `vpc-aceb2723`)", "default": ""}, {"name": "igw_id", "description": "Internet Gateway ID the public route table will point to (e.g. `igw-9c26a123`)", "default": ""}, {"name": "cidr_block", "description": "Base CIDR block which will be divided into subnet CIDR blocks (e.g. `10.0.0.0/16`)", "default": ""}, {"name": "availability_zones", "description": "List of Availability Zones where subnets will be created", "default": ""}, {"name": "vpc_default_route_table_id", "description": "Default route table for public subnets. If not set, will be created. (e.g. `rtb-f4f0ce12`)", "default": "\"\""}, {"name": "public_network_acl_id", "description": "Network ACL ID that will be added to public subnets. If empty, a new ACL will be created", "default": "\"\""}, {"name": "private_network_acl_id", "description": "Network ACL ID that will be added to private subnets. If empty, a new ACL will be created", "default": "\"\""}, {"name": "nat_gateway_enabled", "description": "Flag to enable/disable NAT gateways for private subnets", "default": "\"true\""}]}, "cloudposse/iam-system-user/aws": {"name": "iam-system-user", "url": "https://registry.terraform.io/modules/cloudposse/iam-system-user/aws", "provider": "aws", "downloads": 2, "description": "Terraform Module to Provision a Basic IAM System User Suitable for CI/CD Systems (E.g. TravisCI, CircleCI)", "source": "cloudposse/iam-system-user/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "namespace", "description": "", "default": "\"\""}, {"name": "stage", "description": "", "default": "\"\""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "tags", "description": "", "default": "{}"}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "force_destroy", "description": "Destroy even if it has non-Terraform-managed IAM access keys, login profile or MFA devices.", "default": "\"false\""}, {"name": "path", "description": "Path in which to create the user", "default": "\"/\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}]}, "cloudposse/jenkins/aws": {"name": "jenkins", "url": "https://registry.terraform.io/modules/cloudposse/jenkins/aws", "provider": "aws", "downloads": 2, "description": "Terraform module to build Docker image with Jenkins, save it to an ECR repo, and deploy to Elastic Beanstalk running Docker stack", "source": "cloudposse/jenkins/aws", "args": [{"name": "master_instance_type", "description": "EC2 instance type for Jenkins master, e.g. 't2.medium'", "default": "\"t2.medium\""}, {"name": "loadbalancer_type", "description": "Load Balancer type, e.g. 'application' or 'classic'", "default": "\"application\""}, {"name": "public_subnets", "description": "List of public subnets to place Elastic Load Balancer", "default": ""}, {"name": "private_subnets", "description": "List of private subnets to place EC2 instances and EFS", "default": ""}, {"name": "aws_account_id", "description": "AWS Account ID. Used as CodeBuild ENV variable $AWS_ACCOUNT_ID when building Docker images. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html", "default": ""}, {"name": "image_tag", "description": "Docker image tag in the ECR repository, e.g. 'latest'. Used as CodeBuild ENV variable $IMAGE_TAG when building Docker images. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html", "default": "\"latest\""}, {"name": "noncurrent_version_expiration_days", "description": "Backup S3 bucket noncurrent version expiration days", "default": "\"35\""}, {"name": "stage", "description": "Stage, e.g. 'prod', 'staging', 'dev', or 'test'", "default": ""}, {"name": "description", "description": "Will be used as Elastic Beanstalk application description", "default": "\"Jenkins server as Docker container running on Elastic Benastalk\""}, {"name": "solution_stack_name", "description": "Elastic Beanstalk stack, e.g. Docker, Go, Node, Java, IIS. For more info: http://docs.aws.amazon.com/elasticbeanstalk/latest/dg/concepts.platforms.html", "default": "\"64bit Amazon Linux 2017.09 v2.8.4 running Docker 17.09.1-ce\""}, {"name": "loadbalancer_certificate_arn", "description": "Load Balancer SSL certificate ARN. The certificate must be present in AWS Certificate Manager", "default": ""}, {"name": "zone_id", "description": "Route53 parent zone ID. The module will create sub-domain DNS records in the parent zone for the EB environment and EFS", "default": ""}, {"name": "security_groups", "description": "List of security groups to be allowed to connect to the EC2 instances", "default": "[]"}, {"name": "datapipeline_config", "description": "DataPipeline configuration options", "default": "{\n  \"email\": \"\",\n  \"instance_type\": \"t2.small\",\n  \"period\": \"24 hours\",\n  \"timeout\": \"60 Minutes\"\n}"}, {"name": "namespace", "description": "Namespace, which could be your organization name, e.g. 'cp' or 'cloudposse'", "default": ""}, {"name": "env_default_key", "description": "Default ENV variable key for Elastic Beanstalk `aws:elasticbeanstalk:application:environment` setting", "default": "\"DEFAULT_ENV_%d\""}, {"name": "github_repo_name", "description": "GitHub repository name, e.g. 'jenkins'. By default, this module will deploy 'https://github.com/cloudposse/jenkins' repository", "default": "\"jenkins\""}, {"name": "ssh_key_pair", "description": "Name of SSH key that will be deployed on Elastic Beanstalk and DataPipeline instance. The key should be present in AWS", "default": "\"\""}, {"name": "env_vars", "description": "Map of custom ENV variables to be provided to the Jenkins application running on Elastic Beanstalk, e.g. env_vars = { JENKINS_USER = 'admin' JENKINS_PASS = 'xxxxxx' }", "default": "{}"}, {"name": "vpc_id", "description": "ID of the VPC in which to provision the AWS resources", "default": ""}, {"name": "healthcheck_url", "description": "Application Health Check URL. Elastic Beanstalk will call this URL to check the health of the application running on EC2 instances", "default": "\"/login\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "use_efs_ip_address", "description": "", "default": "\"false\""}, {"name": "name", "description": "Solution name, e.g. 'app' or 'jenkins'", "default": "\"jenkins\""}, {"name": "github_branch", "description": "GitHub repository branch, e.g. 'master'. By default, this module will deploy 'https://github.com/cloudposse/jenkins' master branch", "default": "\"master\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "tags", "description": "Additional tags (e.g. `map('BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "github_oauth_token", "description": "GitHub Oauth Token for accessing private repositories. Leave it empty when deploying a public 'Jenkins' repository, e.g. https://github.com/cloudposse/jenkins", "default": "\"\""}, {"name": "availability_zones", "description": "List of Availability Zones for EFS", "default": ""}, {"name": "github_organization", "description": "GitHub organization, e.g. 'cloudposse'. By default, this module will deploy 'https://github.com/cloudposse/jenkins' repository", "default": "\"cloudposse\""}, {"name": "build_image", "description": "CodeBuild build image, e.g. 'aws/codebuild/docker:1.12.1'. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref.html#build-env-ref-available", "default": "\"aws/codebuild/docker:1.12.1\""}, {"name": "build_compute_type", "description": "CodeBuild compute type, e.g. 'BUILD_GENERAL1_SMALL'. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref.html#build-env-ref-compute-types", "default": "\"BUILD_GENERAL1_SMALL\""}, {"name": "env_default_value", "description": "Default ENV variable value for Elastic Beanstalk `aws:elasticbeanstalk:application:environment` setting", "default": "\"UNSET\""}, {"name": "aws_region", "description": "AWS region in which to provision the AWS resources", "default": "\"us-west-2\""}]}, "SweetOps/service-account/google": {"name": "service-account", "url": "https://registry.terraform.io/modules/SweetOps/service-account/google", "provider": "google", "downloads": 2, "description": "Terraform module : GCP : for creation service account.", "source": "SweetOps/service-account/google", "args": [{"name": "account_id", "description": "The service account ID.", "default": ""}, {"name": "display_name", "description": "The display name for the service account.", "default": "\"Managed by Terraform\""}, {"name": "project", "description": "GCE project name", "default": "\"\""}, {"name": "role", "description": "The role/permission that will be granted to the members.", "default": ""}]}, "cloudposse/named-subnets/aws": {"name": "named-subnets", "url": "https://registry.terraform.io/modules/cloudposse/named-subnets/aws", "provider": "aws", "downloads": 2, "description": "", "source": "cloudposse/named-subnets/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Application or solution name", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "subnet_names", "description": "List of subnet names (e.g. `['apples', 'oranges', 'grapes']`)", "default": ""}, {"name": "max_subnets", "description": "Maximum number of subnets which can be created. This variable is being used for CIDR blocks calculation. Default to length of `names` argument", "default": "\"16\""}, {"name": "type", "description": "Type of subnets (`private` or `public`)", "default": "\"private\""}, {"name": "availability_zone", "description": "Availability Zone", "default": ""}, {"name": "vpc_id", "description": "VPC ID", "default": ""}, {"name": "cidr_block", "description": "Base CIDR block which will be divided into subnet CIDR blocks (e.g. `10.0.0.0/16`)", "default": ""}, {"name": "igw_id", "description": "Internet Gateway ID which will be used as a default route in public route tables (e.g. `igw-9c26a123`). Conflicts with `ngw_id`", "default": "\"\""}, {"name": "ngw_id", "description": "NAT Gateway ID which will be used as a default route in private route tables (e.g. `igw-9c26a123`). Conflicts with `igw_id`", "default": "\"\""}, {"name": "public_network_acl_id", "description": "Network ACL ID that will be added to the subnets. If empty, a new ACL will be created ", "default": "\"\""}, {"name": "private_network_acl_id", "description": "Network ACL ID that will be added to the subnets. If empty, a new ACL will be created ", "default": "\"\""}, {"name": "public_network_acl_egress", "description": "Egress network ACL rules", "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  }\n]"}, {"name": "public_network_acl_ingress", "description": "Egress network ACL rules", "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  }\n]"}, {"name": "private_network_acl_egress", "description": "Egress network ACL rules", "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  }\n]"}, {"name": "private_network_acl_ingress", "description": "Egress network ACL rules", "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  }\n]"}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}, {"name": "nat_enabled", "description": "Flag of creation NAT Gateway", "default": "\"true\""}, {"name": "eni_id", "description": "", "default": "\"\""}]}, "cloudposse/multi-az-subnets/aws": {"name": "multi-az-subnets", "url": "https://registry.terraform.io/modules/cloudposse/multi-az-subnets/aws", "provider": "aws", "downloads": 2, "description": "Terraform module for multi-AZ public and private subnets provisioning", "source": "cloudposse/multi-az-subnets/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Application or solution name", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "availability_zones", "description": "List of Availability Zones (e.g. `['us-east-1a', 'us-east-1b', 'us-east-1c']`)", "default": "[]"}, {"name": "max_subnets", "description": "Maximum number of subnets that can be created. The variable is used for CIDR blocks calculation", "default": "\"6\""}, {"name": "type", "description": "Type of subnets to create (`private` or `public`)", "default": "\"private\""}, {"name": "vpc_id", "description": "VPC ID", "default": ""}, {"name": "cidr_block", "description": "Base CIDR block which is divided into subnet CIDR blocks (e.g. `10.0.0.0/16`)", "default": ""}, {"name": "igw_id", "description": "Internet Gateway ID that is used as a default route when creating public subnets (e.g. `igw-9c26a123`)", "default": "\"\""}, {"name": "az_ngw_ids", "description": "Only for private subnets. Map of AZ names to NAT Gateway IDs that are used as default routes when creating private subnets", "default": "{}"}, {"name": "public_network_acl_id", "description": "Network ACL ID that is added to the public subnets. If empty, a new ACL will be created", "default": "\"\""}, {"name": "private_network_acl_id", "description": "Network ACL ID that is added to the private subnets. If empty, a new ACL will be created", "default": "\"\""}, {"name": "public_network_acl_egress", "description": "Egress network ACL rules", "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  }\n]"}, {"name": "public_network_acl_ingress", "description": "Egress network ACL rules", "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  }\n]"}, {"name": "private_network_acl_egress", "description": "Egress network ACL rules", "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  }\n]"}, {"name": "private_network_acl_ingress", "description": "Egress network ACL rules", "default": "[\n  {\n    \"action\": \"allow\",\n    \"cidr_block\": \"0.0.0.0/0\",\n    \"from_port\": 0,\n    \"protocol\": \"-1\",\n    \"rule_no\": 100,\n    \"to_port\": 0\n  }\n]"}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}, {"name": "nat_gateway_enabled", "description": "Flag to enable/disable NAT Gateways creation in public subnets", "default": "\"true\""}, {"name": "az_ngw_count", "description": "Count of items in the `az_ngw_ids` map. Needs to be explicitly provided since Terraform currently can't use dynamic count on computed resources from different modules. https://github.com/hashicorp/terraform/issues/10857", "default": "0"}]}, "gandhiniraj/test/azure": {"name": "test", "url": "https://registry.terraform.io/modules/gandhiniraj/test/azure", "provider": "azure", "downloads": 2, "description": "Sample Module, created solely to learn terraform registry", "source": "gandhiniraj/test/azure", "args": [{"name": "memory", "description": "", "default": ""}]}, "anugnes/subnet/azure": {"name": "subnet", "url": "https://registry.terraform.io/modules/anugnes/subnet/azure", "provider": "azure", "downloads": 2, "description": "Azure Subnet Module for Terraform", "source": "anugnes/subnet/azure", "args": [{"name": "subnet1_address", "description": "Subnet1 Address", "default": ""}, {"name": "subnet1_name", "description": "Subnet1 Name", "default": ""}, {"name": "subnet2_address", "description": "Subnet2 Address", "default": ""}, {"name": "subnet2_name", "description": "Subnet2 Name", "default": ""}, {"name": "res_group_name", "description": "Resource Group Name", "default": ""}, {"name": "vn_name", "description": "Virtual Network Name", "default": ""}]}, "ndejong/cjdns-node/digitalocean": {"name": "cjdns-node", "url": "https://registry.terraform.io/modules/ndejong/cjdns-node/digitalocean", "provider": "digitalocean", "downloads": 2, "description": "Terraform module to create a Cjdns node in Digital Ocean and push your locally managed cjdroute.conf files", "source": "ndejong/cjdns-node/digitalocean", "args": [{"name": "hostname", "description": "The hostname applied to this cjdns-node droplet.", "default": ""}, {"name": "region", "description": "The digitalocean region to start this cjdns-node within.", "default": ""}, {"name": "user", "description": "The user initial login user to create with passwordless sudo access for this cjdns-node, if empty no account will be created. The root account is always disabled.", "default": ""}, {"name": "user_sshkey", "description": "The sshkey to apply to the initial user account - password based auth is always disabled.", "default": ""}, {"name": "cjdroute_config", "description": "The local cjdroute.conf file to push to this cjdns-node droplet.", "default": ""}, {"name": "cjdns_commit", "description": "The git-commit sha1 to download from github.com/cjdelisle/cjdns then build and install on this cjdns-node, if you wish to use a more recent crashy commit you can specify it here.", "default": "\"efd7d7f82be405fe47f6806b6cc9c0043885bc2e\""}, {"name": "image", "description": "The digitalocean image to use as the base for this cjdns-node.", "default": "\"ubuntu-16-04-x64\""}, {"name": "size", "description": "The digitalocean droplet size to use for this cjdns-node.", "default": "\"512mb\""}, {"name": "backups", "description": "Enable/disable droplet backup functionality on this cjdns-node.", "default": "false"}, {"name": "monitoring", "description": "Enable/disable droplet monitoring functionality on this cjdns-node.", "default": "true"}, {"name": "ipv6", "description": "Enable/disable getting a public IPv6 on this digitalocean-droplet.", "default": "true"}, {"name": "private_networking", "description": "Enable/disable digitalocean private-networking functionality on this cjdns-node.", "default": "false"}, {"name": "ipfs_version", "description": "If set will additionally install IPFS on this cjdns-node, without any config!  This is provided as a convenience only since IPFS is generally a useful use-case for cjdns-nodes to participate in.", "default": "\"\""}]}, "andresvia/test/autodesk": {"name": "test", "url": "https://registry.terraform.io/modules/andresvia/test/autodesk", "provider": "autodesk", "downloads": 2, "description": "test", "source": "andresvia/test/autodesk", "args": []}, "ndejong/strelaysrv-node/digitalocean": {"name": "strelaysrv-node", "url": "https://registry.terraform.io/modules/ndejong/strelaysrv-node/digitalocean", "provider": "digitalocean", "downloads": 2, "description": "Terraform module to create a Syncthing Relay Server on Digital Ocean", "source": "ndejong/strelaysrv-node/digitalocean", "args": [{"name": "hostname", "description": "The hostname applied to this strelaysrv-node droplet.", "default": ""}, {"name": "region", "description": "The digitalocean region to start this strelaysrv-node within.", "default": ""}, {"name": "user", "description": "The user initial login user to create with passwordless sudo access for this strelaysrv-node, if empty no account will be created. The root account is always disabled.", "default": ""}, {"name": "user_sshkey", "description": "The sshkey to apply to the initial user account - password based auth is always disabled.", "default": ""}, {"name": "image", "description": "The digitalocean image to use as the base for this strelaysrv-node.", "default": "\"ubuntu-17-10-x64\""}, {"name": "size", "description": "The digitalocean droplet size to use for this strelaysrv-node.", "default": "\"512mb\""}, {"name": "backups", "description": "Enable/disable digitalocean-droplet backup functionality on this strelaysrv-node.", "default": "false"}, {"name": "monitoring", "description": "Enable/disable digitalocean-droplet monitoring functionality on this strelaysrv-node.", "default": "true"}, {"name": "ipv6", "description": "Enable/disable getting a public IPv6 on this digitalocean-droplet.", "default": "true"}, {"name": "private_networking", "description": "Enable/disable digitalocean-droplet private-networking functionality on this strelaysrv-node.", "default": "false"}, {"name": "strelaysrv_extaddress", "description": "An optional address to advertising as being available on. Allows listening on an unprivileged port with port forwarding from e.g. 443, and be connected to on port 443.", "default": "\":443\""}, {"name": "strelaysrv_globalrate", "description": "Global rate limit, in bytes/s.", "default": "\"0\""}, {"name": "strelaysrv_messagetimeout", "description": "Maximum amount of time we wait for relevant messages to arrive (default 1m0s).", "default": "\"60s\""}, {"name": "strelaysrv_networktimeout", "description": "Timeout for network operations between the client and the relay. If no data is received between the client and the relay in this period of time, the connection is terminated. Furthermore, if no data is sent between either clients being relayed within this period of time, the session is also terminated. (default 2m0s)", "default": "\"120s\""}, {"name": "strelaysrv_persessionrate", "description": "Per session rate limit, in bytes/s.", "default": "\"0\""}, {"name": "strelaysrv_pinginterval", "description": "How often pings are sent (default 1m0s).", "default": "\"60s\""}, {"name": "strelaysrv_pools", "description": "Comma separated list of relay pool addresses to join (default http://relays.syncthing.net/endpoint). Blank to disable announcement to a pool, thereby remaining a private relay.", "default": "\"https://relays.syncthing.net/endpoint\""}, {"name": "strelaysrv_protocol", "description": "Protocol used for listening. tcp for IPv4 and IPv6, tcp4 for IPv4, tcp6 for IPv6.", "default": "\"tcp\""}, {"name": "strelaysrv_providedby", "description": "An description about who provides the relay.", "default": "\"\""}, {"name": "strelaysrv_statussrv", "description": "Listen address for status service (default :22070). Status service is used by the relay pool server UI for displaying stats.", "default": "\":22070\""}]}, "matti/heroku-master/kontena": {"name": "heroku-master", "url": "https://registry.terraform.io/modules/matti/heroku-master/kontena", "provider": "kontena", "downloads": 2, "description": "", "source": "matti/heroku-master/kontena", "args": [{"name": "heroku_email", "description": "", "default": "\"\""}, {"name": "heroku_api_key", "description": "", "default": "\"\""}, {"name": "heroku_organization", "description": "", "default": "\"\""}, {"name": "region", "description": "", "default": "\"us\""}, {"name": "app_name", "description": "", "default": ""}, {"name": "kontena_master_version", "description": "", "default": "\"latest\""}, {"name": "kontena_master_name", "description": "", "default": "\"heroku-master\""}, {"name": "initial_admin_code", "description": "", "default": "\"\""}, {"name": "container_logs_capped_size", "description": "", "default": "10"}, {"name": "container_stats_capped_size", "description": "", "default": "10"}, {"name": "events_logs_capped_size", "description": "", "default": "1"}, {"name": "max_threads", "description": "", "default": "4"}, {"name": "web_concurrency", "description": "", "default": "1"}, {"name": "mongo_addon_plan", "description": "", "default": "\"mongolab:sandbox\""}]}, "matti/node-outputs/kontena": {"name": "node-outputs", "url": "https://registry.terraform.io/modules/matti/node-outputs/kontena", "provider": "kontena", "downloads": 2, "description": "", "source": "matti/node-outputs/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "name", "description": "", "default": ""}]}, "matti/nodes-outputs/kontena": {"name": "nodes-outputs", "url": "https://registry.terraform.io/modules/matti/nodes-outputs/kontena", "provider": "kontena", "downloads": 2, "description": "", "source": "matti/nodes-outputs/kontena", "args": [{"name": "depends_id", "description": "", "default": "\"\""}]}, "bevry/hashistack/scaleway": {"name": "hashistack", "url": "https://registry.terraform.io/modules/bevry/hashistack/scaleway", "provider": "scaleway", "downloads": 2, "description": "Terraform module to deploy Consul, Nomad, Vault onto Scaleway", "source": "bevry/hashistack/scaleway", "args": [{"name": "tls_mode", "description": "", "default": "\"none\""}, {"name": "data_path", "description": "", "default": ""}, {"name": "private_key_path", "description": "", "default": ""}, {"name": "type", "description": "", "default": ""}, {"name": "state", "description": "", "default": "\"running\""}, {"name": "hostname", "description": "", "default": ""}, {"name": "count", "description": "", "default": "\"1\""}, {"name": "join", "description": "", "default": "\"\""}, {"name": "region", "description": "", "default": ""}, {"name": "image", "description": "", "default": ""}, {"name": "bootscript", "description": "", "default": "\"\""}]}, "jianyuan/sentry/provider": {"name": "sentry", "url": "https://registry.terraform.io/modules/jianyuan/sentry/provider", "provider": "provider", "downloads": 2, "description": "Terraform provider for Sentry", "source": "jianyuan/sentry/provider", "args": []}, "devops-workflow/teams/pagerduty": {"name": "teams", "url": "https://registry.terraform.io/modules/devops-workflow/teams/pagerduty", "provider": "pagerduty", "downloads": 2, "description": "Terraform module to manage PagerDuty teams", "source": "devops-workflow/teams/pagerduty", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "pagerduty_token", "description": "The API token for PagerDuty. Should be set via an environment variable.", "default": ""}, {"name": "teams", "description": "A list of maps containing information about PagerDuty teams.", "default": "[]"}]}, "traveloka/public-route53-zone/aws": {"name": "public-route53-zone", "url": "https://registry.terraform.io/modules/traveloka/public-route53-zone/aws", "provider": "aws", "downloads": 2, "description": "A terraform module which provisions a Public Route53 Hosted Zone", "source": "traveloka/public-route53-zone/aws", "args": [{"name": "name", "description": "Name of the hosted zone", "default": ""}, {"name": "product_domain", "description": "Abbreviation of the product domain this Route 53 zone belongs to", "default": ""}, {"name": "environment", "description": "Environment this Route 53 zone belongs to", "default": ""}, {"name": "description", "description": "Description of the hosted zone", "default": ""}, {"name": "delegation_set_id", "description": "The delegation set ID whose NS records will be assigned the hosted zone", "default": "\"\""}, {"name": "force_destroy", "description": "Whether to destroy all records inside if the hosted zone is deleted", "default": "\"0\""}]}, "merten2000/server/aws": {"name": "server", "url": "https://registry.terraform.io/modules/merten2000/server/aws", "provider": "aws", "downloads": 2, "description": "", "source": "merten2000/server/aws", "args": [{"name": "servername", "description": "", "default": ""}, {"name": "count", "description": "", "default": ""}, {"name": "subnet", "description": "", "default": ""}]}, "merten2000/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/merten2000/vpc/aws", "provider": "aws", "downloads": 2, "description": "", "source": "merten2000/vpc/aws", "args": []}, "traveloka/alb-single-listener/aws": {"name": "alb-single-listener", "url": "https://registry.terraform.io/modules/traveloka/alb-single-listener/aws", "provider": "aws", "downloads": 2, "description": "A terraform module which provisions a DNS record that points to an Application LB with a single listener", "source": "traveloka/alb-single-listener/aws", "args": [{"name": "lb_name", "description": "The name of the LB, will override the default <service_name>-<lb_type>-<random_string> name", "default": "\"\""}, {"name": "lb_logs_s3_bucket_name", "description": "The S3 bucket that will be used to store LB access logs", "default": ""}, {"name": "lb_internal", "description": "Whether the LB will be public / private", "default": "\"1\""}, {"name": "lb_security_groups", "description": "List of security group IDs for the LB", "default": ""}, {"name": "lb_subnet_ids", "description": "List of subnet IDs of the LB", "default": ""}, {"name": "lb_ip_address_type", "description": "The LB's ip address type", "default": "\"ipv4\""}, {"name": "lb_idle_timeout", "description": "The LB's idle timeout", "default": "\"60\""}, {"name": "lb_tags", "description": "The additional LB tags that will be merged over the default tags", "default": "{}"}, {"name": "tg_health_check", "description": "The default target group's health check configuration, will be merged over the default (see locals.tf)", "default": "{}"}, {"name": "tg_stickiness", "description": "The default target group's stickiness configuration", "default": "{\n  \"cookie_duration\": 1,\n  \"enabled\": true,\n  \"type\": \"lb_cookie\"\n}"}, {"name": "tg_name", "description": "The default target group's name, will override the default <service_name>-default name", "default": "\"\""}, {"name": "tg_port", "description": "The default target group's port", "default": "\"5000\""}, {"name": "tg_protocol", "description": "The default target group's protocol", "default": "\"HTTP\""}, {"name": "tg_deregistration_delay", "description": "The default target group's deregistration delay", "default": "\"300\""}, {"name": "tg_tags", "description": "The additional Target Group tags that will be merged over the default tags", "default": "{}"}, {"name": "listener_certificate_arn", "description": "The LB listener's certificate ARN", "default": ""}, {"name": "listener_ssl_policy", "description": "The LB listener's SSL policy", "default": "\"ELBSecurityPolicy-2016-08\""}, {"name": "listener_conditions", "description": "List of conditions (https://www.terraform.io/docs/providers/aws/r/lb_listener_rule.html#condition) for the listener rules. A rule can have either 1 or 2 conditions. The rule's order will be its priority, i.e. the first is the highest", "default": "[]"}, {"name": "listener_target_group_idx", "description": "Indexes, starting from 0, of the `target_group_arns` variable that the listener rules will use when choosing target groups. '0' means the default target group", "default": "[]"}, {"name": "service_name", "description": "The service name that will be used in tags and resources default name", "default": ""}, {"name": "description", "description": "Will be used in resources' Description tag", "default": ""}, {"name": "environment", "description": "Will be used in resources' Environment tag", "default": ""}, {"name": "product_domain", "description": "Abbreviation of the product domain the created resources belong to", "default": ""}, {"name": "target_group_arns", "description": "A list of target group arns, will be used by listener rules using `listener_target_group_idx` variable", "default": "[]"}, {"name": "vpc_id", "description": "The default target group's VPC", "default": ""}, {"name": "cluster_role", "description": "Primary role/function of the cluster. Example value: 'app', 'fe', 'mongod', etc", "default": ""}]}, "traveloka/private-route53-zone/aws": {"name": "private-route53-zone", "url": "https://registry.terraform.io/modules/traveloka/private-route53-zone/aws", "provider": "aws", "downloads": 2, "description": "", "source": "traveloka/private-route53-zone/aws", "args": [{"name": "name", "description": "Name of the hosted zone", "default": ""}, {"name": "product_domain", "description": "Abbreviation of the product domain this Route 53 zone belongs to", "default": ""}, {"name": "environment", "description": "Environment this Route 53 zone belongs to", "default": ""}, {"name": "main_vpc", "description": "Main VPC ID that will be associated with this hosted zone", "default": ""}, {"name": "secondary_vpcs", "description": "List of VPCs that will also be associated with this zone", "default": "[]"}, {"name": "force_destroy", "description": "Whether to destroy all records inside if the hosted zone is deleted", "default": "\"0\""}]}, "gordonbondon/verify/common": {"name": "verify", "url": "https://registry.terraform.io/modules/gordonbondon/verify/common", "provider": "common", "downloads": 2, "description": "Terraform module to verify variables", "source": "gordonbondon/verify/common", "args": [{"name": "match", "description": "pass in expression that will evaluate to `true` or `false`", "default": ""}, {"name": "error", "description": "error message to display", "default": ""}]}, "bincyber/remote-state/aws": {"name": "remote-state", "url": "https://registry.terraform.io/modules/bincyber/remote-state/aws", "provider": "aws", "downloads": 2, "description": "Terraform module to setup remote state for AWS", "source": "bincyber/remote-state/aws", "args": [{"name": "aws_region", "description": "the AWS region", "default": ""}, {"name": "aws_environment", "description": "the AWS environment", "default": ""}, {"name": "s3_bucket_name", "description": "the name of the S3 bucket which will be used to store state files", "default": ""}, {"name": "dynamodb_table_name", "description": "the name of the DynamoDB table which will be used for state locking", "default": ""}, {"name": "dynamodb_read_capacity_units", "description": "the amount of read capacity units for the DynamoDB table", "default": "5"}, {"name": "dynamodb_write_capacity_units", "description": "the amount of write capacity units for the DynamoDB table", "default": "1"}, {"name": "iam_group_name_rw_access", "description": "the name of the IAM group that will have read-write access", "default": "\"terraform_rw_access\""}, {"name": "iam_group_name_ro_access", "description": "the name of the IAM group that will have read-only access", "default": "\"terraform_ro_access\""}]}, "riboseinc/s3-cloudfront-website/aws": {"name": "s3-cloudfront-website", "url": "https://registry.terraform.io/modules/riboseinc/s3-cloudfront-website/aws", "provider": "aws", "downloads": 2, "description": "Terraform module for creating a static S3 website with CloudFront with an SSL certificate (e.g., from ACM)", "source": "riboseinc/s3-cloudfront-website/aws", "args": [{"name": "fqdn", "description": "The FQDN of the website and also name of the S3 bucket", "default": ""}, {"name": "force_destroy", "description": "The force_destroy argument of the S3 bucket", "default": "\"false\""}, {"name": "ssl_certificate_arn", "description": "ARN of the certificate covering the fqdn and its apex?", "default": ""}, {"name": "allowed_ips", "description": "A list of IPs that can access the S3 bucket directly", "default": "[]"}, {"name": "refer_secret", "description": "A secret string to authenticate CF requests to S3", "default": "\"123-VERY-SECRET-123\""}, {"name": "routing_rules", "description": "Routing rules for the S3 bucket", "default": "\"\""}, {"name": "index_document", "description": "HTML to show at root", "default": "\"index.html\""}, {"name": "error_document", "description": "HTML to show on 404", "default": "\"404.html\""}, {"name": "tags", "description": "Tags", "default": "{}"}]}, "opsgang/pritunl-vpn-server/aws": {"name": "pritunl-vpn-server", "url": "https://registry.terraform.io/modules/opsgang/pritunl-vpn-server/aws", "provider": "aws", "downloads": 2, "description": "Pritunl VPN Server for your public/private like VPC on AWS", "source": "opsgang/pritunl-vpn-server/aws", "args": [{"name": "resource_name_prefix", "description": "All the resources will be prefixed with the value of this variable", "default": "\"pritunl\""}, {"name": "vpc_id", "description": "Which VPC VPN server will be created in", "default": ""}, {"name": "public_subnet_id", "description": "One of the public subnet id for the VPN instance", "default": ""}, {"name": "ami_id", "description": "AMI ID of Amazon Linux", "default": ""}, {"name": "instance_type", "description": "Instance type for VPN Box", "default": "\"t2.micro\""}, {"name": "whitelist", "description": "[List] Office IP CIDRs for SSH and HTTPS", "default": ""}, {"name": "whitelist_http", "description": "[List] Whitelist for HTTP port", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "internal_cidrs", "description": "[List] IP CIDRs to whitelist in the pritunl's security group", "default": "[\n  \"10.0.0.0/8\"\n]"}, {"name": "s3_bucket_name", "description": "[String] Optional S3 bucket name for backups", "default": "\"\""}, {"name": "aws_key_name", "description": "SSH keypair name for the VPN instance", "default": ""}, {"name": "healthchecks_io_key", "description": "Health check key for healthchecks.io", "default": "\"invalid\""}]}, "amancevice/facebook-webhook/google": {"name": "facebook-webhook", "url": "https://registry.terraform.io/modules/amancevice/facebook-webhook/google", "provider": "google", "downloads": 2, "description": "Google Cloud Function for responding to facebook webhooks", "source": "amancevice/facebook-webhook/google", "args": [{"name": "memory", "description": "Memory for Cloud Function.", "default": "256"}, {"name": "client_secret", "description": "Google Cloud client secret JSON.", "default": ""}, {"name": "verification_token", "description": "facebook verification token.", "default": ""}, {"name": "description", "description": "Description of the function.", "default": "\"facebook webhook handler\""}, {"name": "labels", "description": "A set of key/value label pairs to assign to the function.", "default": ""}, {"name": "timeout", "description": "Timeout in seconds for Cloud Function.", "default": "10"}, {"name": "bucket_name", "description": "Cloud Storage bucket for storing Cloud Function code archives.", "default": ""}, {"name": "project", "description": "The ID of the project to apply any resources to.", "default": "\"\""}, {"name": "pubsub_topic", "description": "Pub/Sub Topic Name.", "default": ""}, {"name": "function_name", "description": "Cloud Function name.", "default": "\"facebook-webhook\""}]}, "vancluever/virtual-machine/vsphere": {"name": "virtual-machine", "url": "https://registry.terraform.io/modules/vancluever/virtual-machine/vsphere", "provider": "vsphere", "downloads": 2, "description": "Universal module for deploying vSphere virtual machines with Terraform", "source": "vancluever/virtual-machine/vsphere", "args": [{"name": "datastore", "description": "The datastore to deploy the virtual machines to.", "default": ""}, {"name": "network", "description": "The network to deploy virtual machines to.", "default": ""}, {"name": "datacenter", "description": "The datacenter to deploy the virtual machines to.", "default": ""}, {"name": "vm_count", "description": "The number of virtual machines to create.", "default": "\"1\""}, {"name": "template_os_family", "description": "The OS family of the supplied template. Should be one of linux or windows. Leave blank to create a virtual machine from scratch.", "default": "\"\""}, {"name": "num_cpus", "description": "The number of virtual CPUs to assign each virtual machine.", "default": "\"2\""}, {"name": "memory", "description": "The amount of memory, in MB, to assign each virtual machine.", "default": "\"1024\""}, {"name": "guest_id", "description": "The virtual machine type. This only applies to VMs being created from scratch, otherwise it is unused.", "default": "\"\""}, {"name": "wait_for_guest_net_timeout", "description": "The timeout, in mintues, to wait for the guest network when creating virtual machines. On virtual machines created from scratch, you may wish to adjust this value to -1, which will disable the waiter.", "default": "\"5\""}, {"name": "ipv4_network_address", "description": "The network address to assign during customization of cloned virtual machines, in A.B.C.D/XX format. Leave at the default value for DHCP.", "default": "\"0.0.0.0/0\""}, {"name": "workgroup", "description": "The workgroup name for Windows customization.", "default": "\"\""}, {"name": "admin_password", "description": "The administrator password for Windows machines. This is a sensitive field and will not be output on-screen, but is stored in state and sent to the VM in plain text - keep this in mind when provisioning your infrastructure.", "default": "\"\""}, {"name": "resource_pool", "description": "The resource pool to deploy the virtual machines to. If specifying a the root resource pool of a cluster, enter CLUSTER_NAME/Resources.", "default": ""}, {"name": "disk_size", "description": "The amount of disk space to assign to each VM. Leave blank to use the template's disk size (cloned VMs only).", "default": "\"\""}, {"name": "ipv4_address_start", "description": "The IP address to start assigning virtual machines at, relative to the network address and mask. Example: for two virtual machines in 10.0.0.0/24, a value of 10 here would give the IP addresses 10.0.0.10 and 10.0.0.11. For 10.0.0.128/25, a value of 10 would give 10.0.0.138 and 10.0.0.139.", "default": "\"1\""}, {"name": "vm_name_prefix", "description": "The prefix to use for virtual machines created with this module.", "default": ""}, {"name": "template_name", "description": "The template to clone virtual machines from. Leave this blank when creating a virtual machine from scratch.", "default": "\"\""}, {"name": "alternate_guest_name", "description": "The guest name for the operating system when guest_id is other or other-64. Leave blank if not using these guest IDs.", "default": "\"\""}, {"name": "linked_clone", "description": "Clone the VM from a snapshot. If selected, the VM must have a single snapshot created. Cloned VMs only.", "default": "\"false\""}, {"name": "domain_name", "description": "The domain of the virtual machine. This is added as the domain name on Linux, and to the DNS domain search list on both Linux and Windows.", "default": "\"\""}, {"name": "ipv4_gateway", "description": "The default IPv4 gateway for the virtual machines. Leave blank for DHCP.", "default": "\"\""}, {"name": "dns_servers", "description": "The DNS servers to assign to each virtual machine.", "default": "[]"}, {"name": "time_zone", "description": "The timezone, either in a timezone database format entry or sysprep entry, depending on if Linux or Windows is being deployed. The default is UTC on both family types.", "default": "\"\""}]}, "philips-software/account-setup/aws": {"name": "account-setup", "url": "https://registry.terraform.io/modules/philips-software/account-setup/aws", "provider": "aws", "downloads": 2, "description": "Terraform module configure IAM in a new AWS account setup", "source": "philips-software/account-setup/aws", "args": [{"name": "enable_account_password_policy", "description": "Enable custom (strict) password policy.", "default": "true"}, {"name": "require_lowercase_characters", "description": "Whether to require lowercase characters for user passwords.", "default": "true"}, {"name": "require_numbers", "description": "Whether to require numbers for user passwords.", "default": "true"}, {"name": "allow_users_to_change_password", "description": "Whether to allow users to change their own password", "default": "true"}, {"name": "hard_expiry", "description": "Whether users are prevented from setting a new password after their password has expired (i.e. require administrator reset)", "default": "false"}, {"name": "enable_mfa", "description": "Enable to force MFA usages.", "default": "true"}, {"name": "admin_group_name", "description": "Name of the admin group.", "default": "\"admins\""}, {"name": "password_reuse_prevention", "description": "The number of previous passwords that users are prevented from reusing.", "default": "true"}, {"name": "minimum_password_length", "description": "Minimum length to require for user passwords.", "default": "32"}, {"name": "require_uppercase_characters", "description": "Whether to require uppercase characters for user passwords.", "default": "true"}, {"name": "require_symbols", "description": "Whether to require symbols for user passwords.", "default": "true"}, {"name": "max_password_age", "description": "The number of days that an user password is valid.", "default": "33"}, {"name": "enable_admin_group", "description": "Create an admin group.", "default": "true"}]}, "mediapop/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/mediapop/vpc/aws", "provider": "aws", "downloads": 2, "description": "Create a preconfigured public VPC.", "source": "mediapop/vpc/aws", "args": [{"name": "name", "description": "The name of the VPC", "default": "\"mediapop/vpc/aws\""}, {"name": "cidr_block", "description": "The CIDR block for the VPC", "default": "\"10.0.0.0/16\""}, {"name": "subnets", "description": "The number of subnets.", "default": "1"}]}, "Cox-Automotive/alks/provider": {"name": "alks", "url": "https://registry.terraform.io/modules/Cox-Automotive/alks/provider", "provider": "provider", "downloads": 1, "description": "Terraform Provider for ALKS", "source": "Cox-Automotive/alks/provider", "args": []}, "spaceapegames/wavefront/provider": {"name": "wavefront", "url": "https://registry.terraform.io/modules/spaceapegames/wavefront/provider", "provider": "provider", "downloads": 1, "description": "A Terraform Provider for Wavefront (https://www.wavefront.com/)", "source": "spaceapegames/wavefront/provider", "args": []}, "jeromegamez/fastmail-records/digitalocean": {"name": "fastmail-records", "url": "https://registry.terraform.io/modules/jeromegamez/fastmail-records/digitalocean", "provider": "digitalocean", "downloads": 1, "description": "A terraform module to provision DigitalOcean with DNS records for FastMail.", "source": "jeromegamez/fastmail-records/digitalocean", "args": [{"name": "domain", "description": "", "default": ""}, {"name": "mx_records", "description": "", "default": "[\n  \"in1-smtp.messagingengine.com\",\n  \"in2-smtp.messagingengine.com\"\n]"}, {"name": "disable_email_autodiscovery", "description": "", "default": "\"0\""}, {"name": "disable_carddav_autodiscovery", "description": "", "default": "\"0\""}, {"name": "disable_caldav_autodiscovery", "description": "", "default": "\"0\""}]}, "moltin/stack/none": {"name": "stack", "url": "https://registry.terraform.io/modules/moltin/stack/none", "provider": "none", "downloads": 1, "description": "A group of more formulated Terraform modules", "source": "moltin/stack/none", "args": []}, "cloudposse/codebuild/aws": {"name": "codebuild", "url": "https://registry.terraform.io/modules/cloudposse/codebuild/aws", "provider": "aws", "downloads": 1, "description": "Terraform Module to easily leverage AWS CodeBuild for Continuous Integration", "source": "cloudposse/codebuild/aws", "args": [{"name": "stage", "description": "", "default": "\"default\""}, {"name": "cache_expiration_days", "description": "How many days should the build cache be kept.", "default": "\"7\""}, {"name": "build_image", "description": "Docker image for build environment, e.g. 'aws/codebuild/docker:1.12.1' or 'aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0'. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref.html", "default": "\"aws/codebuild/docker:1.12.1\""}, {"name": "buildspec", "description": "Optional buildspec declaration to use for building the project", "default": "\"\""}, {"name": "tags", "description": "", "default": "{}"}, {"name": "privileged_mode", "description": "(Optional) If set to true, enables running the Docker daemon inside a Docker container on the CodeBuild instance. Used when building Docker images", "default": "\"false\""}, {"name": "aws_region", "description": "(Optional) AWS Region, e.g. us-east-1. Used as CodeBuild ENV variable when building Docker images. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html", "default": "\"\""}, {"name": "cache_enabled", "description": "If cache_enabled is true, create an S3 bucket for storing codebuild cache inside", "default": "\"true\""}, {"name": "cache_bucket_suffix_enabled", "description": "The cache bucket generates a random 13 character string to generate a unique bucket name. If set to false it uses terraform-null-label's id value", "default": "\"true\""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "image_repo_name", "description": "(Optional) ECR repository name to store the Docker image built by this module. Used as CodeBuild ENV variable when building Docker images. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html", "default": "\"UNSET\""}, {"name": "image_tag", "description": "(Optional) Docker image tag in the ECR repository, e.g. 'latest'. Used as CodeBuild ENV variable when building Docker images. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html", "default": "\"latest\""}, {"name": "namespace", "description": "", "default": "\"global\""}, {"name": "name", "description": "", "default": "\"codebuild\""}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "aws_account_id", "description": "(Optional) AWS Account ID. Used as CodeBuild ENV variable when building Docker images. For more info: http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html", "default": "\"\""}, {"name": "environment_variables", "description": "A list of maps, that contain both the key 'name' and the key 'value' to be used as additional environment variables for the build.", "default": "[\n  {\n    \"name\": \"NO_ADDITIONAL_BUILD_VARS\",\n    \"value\": \"TRUE\"\n  }\n]"}, {"name": "enabled", "description": "A boolean to enable/disable resource creation.", "default": "\"true\""}, {"name": "build_compute_type", "description": "", "default": "\"BUILD_GENERAL1_SMALL\""}, {"name": "github_token", "description": "(Optional) GitHub auth token environment variable (`GITHUB_TOKEN`)", "default": "\"\""}]}, "cloudposse/route53-cluster-zone/aws": {"name": "route53-cluster-zone", "url": "https://registry.terraform.io/modules/cloudposse/route53-cluster-zone/aws", "provider": "aws", "downloads": 1, "description": "Terraform Cluster Domain (e.g. `prod.ourcompany.com`)", "source": "cloudposse/route53-cluster-zone/aws", "args": [{"name": "namespace", "description": "", "default": ""}, {"name": "stage", "description": "", "default": ""}, {"name": "name", "description": "", "default": ""}, {"name": "zone_name", "description": "", "default": "\"$${stage}.$${parent_zone_name}\""}, {"name": "parent_zone_id", "description": "", "default": "\"\""}, {"name": "parent_zone_name", "description": "", "default": "\"\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit','XYZ')", "default": "{}"}]}, "webdevwilson/autoscaling-tags/aws": {"name": "autoscaling-tags", "url": "https://registry.terraform.io/modules/webdevwilson/autoscaling-tags/aws", "provider": "aws", "downloads": 1, "description": "Terraform module for copying tags to autoscaling group instances", "source": "webdevwilson/autoscaling-tags/aws", "args": [{"name": "autoscaling_group_arn", "description": "The ARN of the autoscaling group", "default": ""}, {"name": "tags", "description": "The tags that will be applied to the instances", "default": ""}]}, "poseidon/bootkube/render": {"name": "bootkube", "url": "https://registry.terraform.io/modules/poseidon/bootkube/render", "provider": "render", "downloads": 1, "description": "Render kubernetes-incubator/bootkube assets with Terraform", "source": "poseidon/bootkube/render", "args": [{"name": "cluster_name", "description": "Cluster name", "default": ""}, {"name": "api_servers", "description": "List of URLs used to reach kube-apiserver", "default": ""}, {"name": "etcd_servers", "description": "List of URLs used to reach etcd servers.", "default": ""}, {"name": "asset_dir", "description": "Path to a directory where generated assets should be placed (contains secrets)", "default": ""}, {"name": "cloud_provider", "description": "The provider for cloud services (empty string for no provider)", "default": "\"\""}, {"name": "networking", "description": "Choice of networking provider (flannel or calico)", "default": "\"flannel\""}, {"name": "network_mtu", "description": "CNI interface MTU (applies to calico only)", "default": "\"1500\""}, {"name": "pod_cidr", "description": "CIDR IP range to assign Kubernetes pods", "default": "\"10.2.0.0/16\""}, {"name": "service_cidr", "description": "CIDR IP range to assign Kubernetes services.\nThe 1st IP will be reserved for kube_apiserver, the 10th IP will be reserved for kube-dns.\n", "default": "\"10.3.0.0/24\""}, {"name": "cluster_domain_suffix", "description": "Queries for domains with the suffix will be answered by kube-dns", "default": "\"cluster.local\""}, {"name": "container_images", "description": "Container images to use", "default": "{\n  \"calico\": \"quay.io/calico/node:v3.0.4\",\n  \"calico_cni\": \"quay.io/calico/cni:v2.0.1\",\n  \"flannel\": \"quay.io/coreos/flannel:v0.10.0-amd64\",\n  \"flannel_cni\": \"quay.io/coreos/flannel-cni:v0.3.0\",\n  \"hyperkube\": \"k8s.gcr.io/hyperkube:v1.10.0\",\n  \"kubedns\": \"k8s.gcr.io/k8s-dns-kube-dns-amd64:1.14.9\",\n  \"kubedns_dnsmasq\": \"k8s.gcr.io/k8s-dns-dnsmasq-nanny-amd64:1.14.9\",\n  \"kubedns_sidecar\": \"k8s.gcr.io/k8s-dns-sidecar-amd64:1.14.9\",\n  \"pod_checkpointer\": \"quay.io/coreos/pod-checkpointer:9dc83e1ab3bc36ca25c9f7c18ddef1b91d4a0558\"\n}"}, {"name": "trusted_certs_dir", "description": "Path to the directory on cluster nodes where trust TLS certs are kept", "default": "\"/usr/share/ca-certificates\""}, {"name": "ca_certificate", "description": "Existing PEM-encoded CA certificate (generated if blank)", "default": "\"\""}, {"name": "ca_key_alg", "description": "Algorithm used to generate ca_key (required if ca_cert is specified)", "default": "\"RSA\""}, {"name": "ca_private_key", "description": "Existing Certificate Authority private key (required if ca_certificate is set)", "default": "\"\""}]}, "hd-deman/static-website/aws": {"name": "static-website", "url": "https://registry.terraform.io/modules/hd-deman/static-website/aws", "provider": "aws", "downloads": 1, "description": "Module to create a fully functional static site in AWS based on S3 with optional CloudFront and Route53", "source": "hd-deman/static-website/aws", "args": [{"name": "site_domain", "description": "", "default": ""}, {"name": "ci_user", "description": "", "default": "\"\""}, {"name": "enable_cloudfront", "description": "", "default": "false"}, {"name": "acm_certificate_arn", "description": "", "default": ""}, {"name": "not_found_response_path", "description": "", "default": "\"/index.html\""}]}, "admintome/puppet/nomad": {"name": "puppet", "url": "https://registry.terraform.io/modules/admintome/puppet/nomad", "provider": "nomad", "downloads": 1, "description": "Terraform module to deploy a puppet environment to a nomad cluster", "source": "admintome/puppet/nomad", "args": [{"name": "dc", "description": "Nomad Datacenter to deploy to", "default": "\"dc1\""}]}, "isaacbroyles/cassandra/azurerm": {"name": "cassandra", "url": "https://registry.terraform.io/modules/isaacbroyles/cassandra/azurerm", "provider": "azurerm", "downloads": 1, "description": "A Terraform Module for how to run Cassandra on AzureRM using Terraform and Packer", "source": "isaacbroyles/cassandra/azurerm", "args": [{"name": "public_key_data", "description": "", "default": "\"\""}, {"name": "private_key_data", "description": "", "default": "\"\""}, {"name": "resource_group_name", "description": "The name of the Azure resource group cassandra will be deployed into. This RG should already exist", "default": ""}, {"name": "image_uri", "description": "The URI to the Azure image that should be deployed to the cassandra cluster.", "default": ""}, {"name": "key_data", "description": "The SSH public key that will be added to SSH authorized_users on the cassandra instances", "default": ""}, {"name": "seeds", "description": "The list of seeds to bootstrap new cassandra nodes with.", "default": ""}, {"name": "location", "description": "The Azure region the cassandra cluster will be deployed in", "default": "\"South Central US\""}, {"name": "address_space", "description": "The supernet for the resources that will be created", "default": "\"10.0.0.0/16\""}, {"name": "subnet_address", "description": "The subnet that cassandra resources will be deployed into", "default": "\"10.0.10.0/24\""}, {"name": "cassandra_cluster_name", "description": "What to name the Cassandra cluster and all of its associated resources", "default": "\"cassandra-example\""}, {"name": "instance_size", "description": "The instance size for the servers", "default": "\"Standard_A1\""}, {"name": "num_cassandra_servers", "description": "The number of Cassandra server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "listen", "description": "The address for the Cassandra server to listen on", "default": "\"\""}]}, "beezly/public-ip-list/fastly": {"name": "public-ip-list", "url": "https://registry.terraform.io/modules/beezly/public-ip-list/fastly", "provider": "fastly", "downloads": 1, "description": "Terraform Module for Fastly IP addresses", "source": "beezly/public-ip-list/fastly", "args": []}, "mewa/serverless-resource/aws": {"name": "serverless-resource", "url": "https://registry.terraform.io/modules/mewa/serverless-resource/aws", "provider": "aws", "downloads": 1, "description": "", "source": "mewa/serverless-resource/aws", "args": [{"name": "api", "description": "REST API id", "default": ""}, {"name": "root_resource", "description": "Root resource id of supplied REST API", "default": ""}, {"name": "resource", "description": "Resource name", "default": ""}, {"name": "methods", "description": "List of resource methods", "default": ""}, {"name": "origin", "description": "Allowed CORS origin", "default": "\"*\""}]}, "joshdurbin/canary-security-sensor-capture-rest-api/aws": {"name": "canary-security-sensor-capture-rest-api", "url": "https://registry.terraform.io/modules/joshdurbin/canary-security-sensor-capture-rest-api/aws", "provider": "aws", "downloads": 0, "description": "A TF module for periodically checking in with the Canary API to capture and store Canary sensor data in dynamodb tables and produce an API endpoint for accessing the data.", "source": "joshdurbin/canary-security-sensor-capture-rest-api/aws", "args": [{"name": "kms_arn", "description": "The ARN of the AWS KMS Key used for encryption/decryption of your Canary password and the bearer token when they are stored in DynamoDB", "default": ""}, {"name": "rate_expression", "description": "", "default": "\"rate(1 hour)\""}, {"name": "aws_region", "description": "", "default": "\"us-west-2\""}, {"name": "canary_username", "description": "Your Canary username (an email address)", "default": ""}, {"name": "canary_encrytped_password", "description": "Your Canary password encrypted with the AWS KMS Key referenced in the argument 'kms_arn'", "default": ""}, {"name": "number_of_generated_api_keys", "description": "The number of API keys to generate for use against the API", "default": "1"}, {"name": "usage_plan_per_user_quota_offset", "description": "The number of requests subtracted from the given limit in the initial time period.", "default": "\"0\""}, {"name": "usage_plan_per_user_quota", "description": "The maximum number of requests that can be made in a given time period.", "default": "\"25\""}, {"name": "usage_plan_per_user_quota_period", "description": "The time period in which the limit applies. Valid values are DAY, WEEK or MONTH.", "default": "\"DAY\""}, {"name": "usage_plan_rate_limit", "description": "The API request steady-state rate limit.", "default": "\"100\""}, {"name": "usage_plan_burst_limit", "description": "The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.", "default": "\"150\""}]}, "xuwang/lambda/hugo": {"name": "lambda", "url": "https://registry.terraform.io/modules/xuwang/lambda/hugo", "provider": "hugo", "downloads": 0, "description": "Create Hugo static website generator on AWS Lambda with Terraform", "source": "xuwang/lambda/hugo", "args": []}, "azavea/s3-origin/aws": {"name": "s3-origin", "url": "https://registry.terraform.io/modules/azavea/s3-origin/aws", "provider": "aws", "downloads": 0, "description": "A terraform module to create an S3 origin for use with CloudFront.", "source": "azavea/s3-origin/aws", "args": [{"name": "cors_max_age_seconds", "description": "", "default": "\"3000\""}, {"name": "region", "description": "", "default": "\"us-east-1\""}, {"name": "project", "description": "", "default": "\"Unknown\""}, {"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "cors_allowed_headers", "description": "", "default": "[\n  \"Authorization\"\n]"}, {"name": "logs_bucket_name", "description": "", "default": ""}, {"name": "cors_allowed_methods", "description": "", "default": "[\n  \"GET\"\n]"}, {"name": "cors_allowed_origins", "description": "", "default": "[\n  \"*\"\n]"}, {"name": "cors_expose_headers", "description": "", "default": "[]"}, {"name": "bucket_name", "description": "", "default": ""}]}, "moltin/modules/none": {"name": "modules", "url": "https://registry.terraform.io/modules/moltin/modules/none", "provider": "none", "downloads": 0, "description": "A group of base Terraform modules", "source": "moltin/modules/none", "args": []}, "meshhq/ecs-cluster/meshhq": {"name": "ecs-cluster", "url": "https://registry.terraform.io/modules/meshhq/ecs-cluster/meshhq", "provider": "meshhq", "downloads": 0, "description": "", "source": "meshhq/ecs-cluster/meshhq", "args": []}, "sysadmiral/secgrouprule-cloudflare/aws": {"name": "secgrouprule-cloudflare", "url": "https://registry.terraform.io/modules/sysadmiral/secgrouprule-cloudflare/aws", "provider": "aws", "downloads": 0, "description": "Allow traffic from cloudflare to your origin by including this module", "source": "sysadmiral/secgrouprule-cloudflare/aws", "args": [{"name": "security_group_id", "description": "the id of the security group that these rules will be added to", "default": ""}, {"name": "enable_http", "description": "boolean to allow access from cloudflare to HTTP origin", "default": "false"}, {"name": "enable_https", "description": "boolean to allow access from cloudflare to HTTPS origin", "default": "false"}]}, "cloudposse/cicd/aws": {"name": "cicd", "url": "https://registry.terraform.io/modules/cloudposse/cicd/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module for CI/CD with AWS Code Pipeline and Code Build", "source": "cloudposse/cicd/aws", "args": [{"name": "name", "description": "Solution name, e.g. 'app' or 'jenkins'", "default": "\"app\""}, {"name": "env", "description": "Elastic Beanstalk environment name. If not provided or set to empty string, the ``Deploy`` stage of the pipeline will not be created", "default": "\"\""}, {"name": "repo_name", "description": "GitHub repository name of the application to be built (and deployed to Elastic Beanstalk if configured)", "default": ""}, {"name": "namespace", "description": "Namespace, which could be your organization name, e.g. 'cp' or 'cloudposse'", "default": "\"global\""}, {"name": "app", "description": "Elastic Beanstalk application name. If not provided or set to empty string, the ``Deploy`` stage of the pipeline will not be created", "default": "\"\""}, {"name": "build_compute_type", "description": "`CodeBuild` instance size.  Possible values are: ```BUILD_GENERAL1_SMALL``` ```BUILD_GENERAL1_MEDIUM``` ```BUILD_GENERAL1_LARGE```", "default": "\"BUILD_GENERAL1_SMALL\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "tags", "description": "Additional tags (e.g. `map('BusinessUnit', 'XYZ')`", "default": "{}"}, {"name": "repo_owner", "description": "GitHub Organization or Person name", "default": ""}, {"name": "branch", "description": "Branch of the GitHub repository, _e.g._ ``master``", "default": ""}, {"name": "buildspec", "description": " Declaration to use for building the project. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html)", "default": "\"\""}, {"name": "poll_source_changes", "description": "Periodically check the location of your source content and run the pipeline if changes are detected", "default": "\"false\""}, {"name": "privileged_mode", "description": "If set to true, enables running the Docker daemon inside a Docker container on the CodeBuild instance. Used when building Docker images", "default": "\"false\""}, {"name": "aws_account_id", "description": "AWS Account ID. Used as CodeBuild ENV variable when building Docker images. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html)", "default": "\"\""}, {"name": "image_repo_name", "description": "ECR repository name to store the Docker image built by this module. Used as CodeBuild ENV variable when building Docker images. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html)", "default": "\"UNSET\""}, {"name": "image_tag", "description": "Docker image tag in the ECR repository, e.g. 'latest'. Used as CodeBuild ENV variable when building Docker images. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html)", "default": "\"latest\""}, {"name": "stage", "description": "Stage, e.g. 'prod', 'staging', 'dev', or 'test'", "default": "\"default\""}, {"name": "enabled", "description": "Enable ``CodePipeline`` creation", "default": "\"true\""}, {"name": "github_oauth_token", "description": "GitHub Oauth Token with permissions to access private repositories", "default": ""}, {"name": "build_image", "description": "Docker image for build environment, _e.g._ `aws/codebuild/docker:1.12.1` or `aws/codebuild/eb-nodejs-6.10.0-amazonlinux-64:4.0.0`", "default": "\"aws/codebuild/docker:1.12.1\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "aws_region", "description": "AWS Region, e.g. us-east-1. Used as CodeBuild ENV variable when building Docker images. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html)", "default": "\"\""}]}, "cloudposse/ec2-admin-server/aws": {"name": "ec2-admin-server", "url": "https://registry.terraform.io/modules/cloudposse/ec2-admin-server/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module for providing a EC2 instance capable of running admin tasks and provisioned by Ansible", "source": "cloudposse/ec2-admin-server/aws", "args": [{"name": "ssh_key_pair", "description": "", "default": ""}, {"name": "github_api_token", "description": "", "default": ""}, {"name": "github_organization", "description": "", "default": ""}, {"name": "github_team", "description": "", "default": ""}, {"name": "instance_type", "description": "", "default": "\"t2.micro\""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "security_groups", "description": "", "default": "[]"}, {"name": "subnets", "description": "", "default": ""}, {"name": "namespace", "description": "", "default": ""}, {"name": "stage", "description": "", "default": ""}, {"name": "name", "description": "", "default": ""}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "tags", "description": "", "default": "{}"}, {"name": "ec2_ami", "description": "Ubuntu Server 16.04 LTS (HVM)", "default": "\"ami-cd0f5cb6\""}, {"name": "zone_id", "description": "", "default": "\"\""}, {"name": "dns_ttl", "description": "", "default": "\"60\""}, {"name": "allow_cidr_blocks", "description": "", "default": "[\n  \"0.0.0.0/0\"\n]"}]}, "cloudposse/ec2-ami-snapshot/aws": {"name": "ec2-ami-snapshot", "url": "https://registry.terraform.io/modules/cloudposse/ec2-ami-snapshot/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to easily generate AMI snapshots to create replica instances", "source": "cloudposse/ec2-ami-snapshot/aws", "args": [{"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. `map('BusinessUnit','XYZ')`)", "default": "{}"}, {"name": "name", "description": "The Name of the application or solution  (e.g. `bastion` or `portal`)", "default": "\"\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": "\"\""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": "\"\""}, {"name": "source_instance_id", "description": "", "default": ""}, {"name": "snapshot_without_reboot", "description": "", "default": "\"true\""}]}, "diogok/docker-swarm/scaleway": {"name": "docker-swarm", "url": "https://registry.terraform.io/modules/diogok/docker-swarm/scaleway", "provider": "scaleway", "downloads": 0, "description": "Terraform module to create a docker swarm cluster on Scaleway.", "source": "diogok/docker-swarm/scaleway", "args": [{"name": "organization", "description": "You scaleway access token.", "default": ""}, {"name": "additional_volume_size", "description": "Size of an additional volume to attach to the instances.", "default": "\"50\""}, {"name": "key_file", "description": "Key file to use to access and provision instances. NOT IMPLEMENTED", "default": "\"\""}, {"name": "token", "description": "You scaleway generated token.", "default": ""}, {"name": "tags", "description": "Tags to add to your instances.", "default": "[]"}, {"name": "label", "description": "Label to add to each docker node.", "default": "\"\""}, {"name": "existing_swarm_manager", "description": "If setup to join an existing swarm cluster instead of initing a new one, this points to the manager node of the existing swarm cluster.", "default": "\"\""}, {"name": "arch", "description": "The machine type archtecture.", "default": "\"x86_64\""}, {"name": "additional_volume", "description": "If we should attach additional volume to instance", "default": "true"}, {"name": "join_existing_swarm", "description": "Join an existing swarm cluster instead of initing a new one.", "default": "false"}, {"name": "worker_count", "description": "Number of workers to create.", "default": "3"}, {"name": "security_group", "description": "Security group to add instances to.", "default": "\"\""}, {"name": "region", "description": "The region where to create your instances.", "default": "\"par1\""}, {"name": "type", "description": "The machine type to create the instances.", "default": "\"VC1S\""}, {"name": "name", "description": "The name of your docker swarm, used for identification and to separate different swarm. Also will be the name of the fold where to store the TLS keys and certificates.", "default": "\"MyService\""}, {"name": "manager_count", "description": "Number of managers to create.", "default": "1"}]}, "poseidon/kubernetes/onprem": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/poseidon/kubernetes/onprem", "provider": "onprem", "downloads": 0, "description": "Typhoon bare-metal - minimal and free Kubernetes (mirror)", "source": "poseidon/kubernetes/onprem", "args": [{"name": "controller_names", "description": "", "default": ""}, {"name": "ssh_authorized_key", "description": "SSH public key for user 'core'", "default": ""}, {"name": "cached_install", "description": "Whether Container Linux should PXE boot and install from matchbox /assets cache. Note that the admin must have downloaded the os_version into matchbox assets.", "default": "\"false\""}, {"name": "worker_networkds", "description": "Worker Container Linux config networkd section", "default": "[]"}, {"name": "cluster_name", "description": "Unique cluster name", "default": ""}, {"name": "worker_macs", "description": "", "default": ""}, {"name": "cluster_domain_suffix", "description": "Queries for domains with the suffix will be answered by coredns. Default is cluster.local (e.g. foo.default.svc.cluster.local) ", "default": "\"cluster.local\""}, {"name": "controller_networkds", "description": "Controller Container Linux config networkd section", "default": "[]"}, {"name": "matchbox_http_endpoint", "description": "Matchbox HTTP read-only endpoint (e.g. http://matchbox.example.com:8080)", "default": ""}, {"name": "os_channel", "description": "Channel for a Container Linux derivative (coreos-stable, coreos-beta, coreos-alpha, flatcar-stable, flatcar-beta, flatcar-alpha)", "default": ""}, {"name": "controller_domains", "description": "", "default": ""}, {"name": "worker_names", "description": "", "default": ""}, {"name": "worker_domains", "description": "", "default": ""}, {"name": "network_mtu", "description": "CNI interface MTU (applies to calico only)", "default": "\"1480\""}, {"name": "kernel_args", "description": "Additional kernel arguments to provide at PXE boot.", "default": "[]"}, {"name": "os_version", "description": "Version for a Container Linux derivative to PXE and install (coreos-stable, coreos-beta, coreos-alpha, flatcar-stable, flatcar-beta, flatcar-alpha)", "default": ""}, {"name": "controller_macs", "description": "", "default": ""}, {"name": "k8s_domain_name", "description": "Controller DNS name which resolves to a controller instance. Workers and kubeconfig's will communicate with this endpoint (e.g. cluster.example.com)", "default": ""}, {"name": "asset_dir", "description": "Path to a directory where generated assets should be placed (contains secrets)", "default": ""}, {"name": "networking", "description": "Choice of networking provider (flannel or calico)", "default": "\"calico\""}, {"name": "network_ip_autodetection_method", "description": "Method to autodetect the host IPv4 address (applies to calico only)", "default": "\"first-found\""}, {"name": "pod_cidr", "description": "CIDR IPv4 range to assign Kubernetes pods", "default": "\"10.2.0.0/16\""}, {"name": "service_cidr", "description": "CIDR IPv4 range to assign Kubernetes services.\nThe 1st IP will be reserved for kube_apiserver, the 10th IP will be reserved for coredns.\n", "default": "\"10.3.0.0/16\""}, {"name": "install_disk", "description": "Disk device to which the install profiles should install Container Linux (e.g. /dev/sda)", "default": "\"/dev/sda\""}, {"name": "container_linux_oem", "description": "DEPRECATED: Specify an OEM image id to use as base for the installation (e.g. ami, vmware_raw, xen) or leave blank for the default image", "default": "\"\""}]}, "mootpt/aws/provider": {"name": "aws", "url": "https://registry.terraform.io/modules/mootpt/aws/provider", "provider": "provider", "downloads": 0, "description": "Terraform aws provider", "source": "mootpt/aws/provider", "args": []}, "orzarchi/cloudflare-security-group/aws": {"name": "cloudflare-security-group", "url": "https://registry.terraform.io/modules/orzarchi/cloudflare-security-group/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module that populates a security group with cloudflare ip ranges and keeps it updated daily.", "source": "orzarchi/cloudflare-security-group/aws", "args": [{"name": "security_group_id", "description": "An existing security group to populate with cloudflare ips as ingress rules.", "default": ""}, {"name": "enabled", "description": "Whether to do anything at all, useful if cloudflare is not needed on all environments. Accepts the string 'true' or 'false'.", "default": "\"true\""}, {"name": "schedule_expression", "description": "The cloudwatch schedule expression used to run the updater lambda.", "default": "\"cron(0 20 * * ? *)\""}]}, "KoeSystems/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/KoeSystems/vpc/aws", "provider": "aws", "downloads": 0, "description": "Terraform AWS VPC module", "source": "KoeSystems/vpc/aws", "args": [{"name": "ipv6_private_egress", "description": "Enable IPv6 Egress Gateway for private subnets.", "default": "false"}, {"name": "tenancy", "description": "Sets where the EC2 instance will run. Accepted values are 'default', 'dedicated' or 'host'.", "default": "\"default\""}, {"name": "enable_dns_support", "description": "Queries to the Amazon provided DNS server at the 169.254.169.253 IP address, or the reserved IP address at the base of the VPC IPv4 network range plus two will succeed.", "default": "true"}, {"name": "enable_dns_hostnames", "description": "Instances in the VPC get public DNS hostnames, but only if the enable_dns_support attribute is also set to true.", "default": "true"}, {"name": "AZs", "description": "String with the Availability Zones we want to have.", "default": "\"a,b,c\""}, {"name": "name", "description": "AWS VPC name. This would be used as prefix in all the resources to support multiple VPCs.", "default": ""}, {"name": "domain_name", "description": "Domain name used with DHCP options in the VPC.", "default": "\"\""}, {"name": "ipv6_cidr_block", "description": "Enable IPv6.", "default": "false"}, {"name": "allow_all_ACL", "description": "Add generic ACL rules to allow ALL traffic.", "default": "true"}, {"name": "only_public", "description": "Create only one public subnet.", "default": "false"}, {"name": "cidr_block", "description": "CIDR block assigned to the VPC.", "default": "\"10.0.0.0/16\""}, {"name": "enable_vpc_flow_logs", "description": "Enable VPC Flow logs.", "default": "false"}, {"name": "enable_nat_gw", "description": "Create one NAT Gateway for each AZs.", "default": "true"}]}, "opsgang/fastly-s3-staticwebsite/aws": {"name": "fastly-s3-staticwebsite", "url": "https://registry.terraform.io/modules/opsgang/fastly-s3-staticwebsite/aws", "provider": "aws", "downloads": 0, "description": "This module allows you serving S3 bucket website through Fastly", "source": "opsgang/fastly-s3-staticwebsite/aws", "args": [{"name": "force_tls", "description": "redirect all non-HTTPS requests to HTTPS", "default": "\"true\""}, {"name": "index_file", "description": "Index document", "default": "\"index.html\""}, {"name": "error_file", "description": "Error document", "default": "\"error.html\""}, {"name": "versioning", "description": "Is versioning needed true/false", "default": "\"true\""}, {"name": "transition_days", "description": "how many days you need files as hot", "default": "30"}, {"name": "gzip_extensions", "description": "file extensions for gzip", "default": "[\n  \"css\",\n  \"js\",\n  \"html\",\n  \"eot\",\n  \"ico\",\n  \"otf\",\n  \"ttf\",\n  \"json\"\n]"}, {"name": "gzip_content_types", "description": "content headers for gzip", "default": "[\n  \"text/html application/x-javascript\",\n  \"text/css\",\n  \"application/javascript\",\n  \"text/javascript\",\n  \"application/json\",\n  \"application/vnd.ms-fontobject\",\n  \"application/x-font-opentype\",\n  \"application/x-font-truetype\",\n  \"application/x-font-ttf\",\n  \"application/xml\",\n  \"font/eot\",\n  \"font/opentype\",\n  \"font/otf\",\n  \"image/svg+xml\",\n  \"image/vnd.microsoft.icon\",\n  \"text/plain\",\n  \"text/xml\"\n]"}, {"name": "bucket_name", "description": "S3 bucket name for hosted files", "default": ""}, {"name": "fastly_dns_name", "description": "DNS Name of static hosting website", "default": ""}, {"name": "office_cidrs", "description": "List of IP CIDRs to whitelist", "default": ""}, {"name": "custom_vcl", "description": "rendered output of custom vcl template. Set to false if you don't want to use", "default": ""}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}]}, "apparentlymart/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/apparentlymart/vpc/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which creates VPC resources on AWS", "source": "apparentlymart/vpc/aws", "args": [{"name": "name", "description": "Name to be used on all the resources as identifier", "default": "\"\""}, {"name": "cidr", "description": "The CIDR block for the VPC", "default": "\"\""}, {"name": "instance_tenancy", "description": "A tenancy option for instances launched into the VPC", "default": "\"default\""}, {"name": "public_subnets", "description": "A list of public subnets inside the VPC", "default": "[]"}, {"name": "private_subnets", "description": "A list of private subnets inside the VPC", "default": "[]"}, {"name": "database_subnets", "description": "A list of database subnets", "default": "[]"}, {"name": "elasticache_subnets", "description": "A list of elasticache subnets", "default": "[]"}, {"name": "create_database_subnet_group", "description": "Controls if database subnet group should be created", "default": "true"}, {"name": "azs", "description": "A list of availability zones in the region", "default": "[]"}, {"name": "enable_dns_hostnames", "description": "Should be true if you want to use private DNS within the VPC", "default": "false"}, {"name": "enable_dns_support", "description": "Should be true if you want to use private DNS within the VPC", "default": "false"}, {"name": "enable_nat_gateway", "description": "Should be true if you want to provision NAT Gateways for each of your private networks", "default": "false"}, {"name": "single_nat_gateway", "description": "Should be true if you want to provision a single shared NAT Gateway across all of your private networks", "default": "false"}, {"name": "enable_dynamodb_endpoint", "description": "Should be true if you want to provision a DynamoDB endpoint to the VPC", "default": "false"}, {"name": "enable_s3_endpoint", "description": "Should be true if you want to provision an S3 endpoint to the VPC", "default": "false"}, {"name": "map_public_ip_on_launch", "description": "Should be false if you do not want to auto-assign public IP on launch", "default": "true"}, {"name": "private_propagating_vgws", "description": "A list of VGWs the private route table should propagate", "default": "[]"}, {"name": "public_propagating_vgws", "description": "A list of VGWs the public route table should propagate", "default": "[]"}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "public_subnet_tags", "description": "Additional tags for the public subnets", "default": "{}"}, {"name": "private_subnet_tags", "description": "Additional tags for the private subnets", "default": "{}"}, {"name": "public_route_table_tags", "description": "Additional tags for the public route tables", "default": "{}"}, {"name": "private_route_table_tags", "description": "Additional tags for the private route tables", "default": "{}"}, {"name": "database_subnet_tags", "description": "Additional tags for the database subnets", "default": "{}"}, {"name": "elasticache_subnet_tags", "description": "Additional tags for the elasticache subnets", "default": "{}"}]}, "admintome/elasticsearch/nomad": {"name": "elasticsearch", "url": "https://registry.terraform.io/modules/admintome/elasticsearch/nomad", "provider": "nomad", "downloads": 0, "description": "Terraform module to deploy Elasticsearch to a nomad cluster", "source": "admintome/elasticsearch/nomad", "args": []}, "egarbi/alb-per-host/aws": {"name": "alb-per-host", "url": "https://registry.terraform.io/modules/egarbi/alb-per-host/aws", "provider": "aws", "downloads": 0, "description": "This create an internet-facing ALB with support to forward traffic based on host field in the HTTP header.", "source": "egarbi/alb-per-host/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "subnet_ids", "description": "List of subnets where LB live, tipically one per AZ", "default": ""}, {"name": "environment", "description": "Environment tag, e.g prod", "default": ""}, {"name": "security_groups", "description": "List of security group to associate with the LB", "default": ""}, {"name": "backend_proto", "description": "", "default": "\"HTTP\""}, {"name": "healthcheck", "description": "", "default": "{\n  \"healthy_threshold\": 2,\n  \"interval\": 30,\n  \"path\": \"/\",\n  \"timeout\": 5,\n  \"unhealthy_threshold\": 5\n}"}, {"name": "hosts", "description": "List of ALB's Content-Based Routing host to match", "default": "[]"}, {"name": "services", "description": "List of services where traffic of the matching hosts will be forwarded", "default": "[]"}, {"name": "ports", "description": "List of backend_ports associated with each service", "default": "[]"}, {"name": "zone_id", "description": "Route53 zone ID to use for dns_name", "default": ""}, {"name": "log_bucket", "description": "S3 bucket name to write ALB logs into", "default": ""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "ssl_arn", "description": "", "default": ""}, {"name": "ssl_policy", "description": "", "default": ""}]}, "egarbi/public-ecs-service/aws": {"name": "public-ecs-service", "url": "https://registry.terraform.io/modules/egarbi/public-ecs-service/aws", "provider": "aws", "downloads": 0, "description": "", "source": "egarbi/public-ecs-service/aws", "args": [{"name": "name", "description": "", "default": ""}, {"name": "dns_name", "description": "", "default": ""}, {"name": "alb_logs_expiration_enabled", "description": "", "default": "\"true\""}, {"name": "alb_logs_expiration_days", "description": "", "default": "90"}, {"name": "environment", "description": "Environment tag, e.g prod", "default": ""}, {"name": "subnet_ids", "description": "List of subnets where LB live, tipically one per AZ", "default": ""}, {"name": "security_groups", "description": "List of security group to associate with the LB", "default": ""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "zone_id", "description": "", "default": ""}, {"name": "ssl_arn", "description": "", "default": ""}, {"name": "ssl_policy", "description": "", "default": "\"ELBSecurityPolicy-2015-05\""}, {"name": "desired_count", "description": "How many task do you want to have running", "default": "1"}, {"name": "cluster", "description": "", "default": ""}, {"name": "service_iam_role", "description": "", "default": ""}, {"name": "container_definitions", "description": "", "default": ""}, {"name": "container_port", "description": "", "default": ""}, {"name": "healthcheck", "description": "", "default": "{\n  \"healthy_threshold\": 2,\n  \"interval\": 30,\n  \"path\": \"/\",\n  \"timeout\": 5,\n  \"unhealthy_threshold\": 5\n}"}]}, "bytebugs/aws-elasticsearch/moudles": {"name": "aws-elasticsearch", "url": "https://registry.terraform.io/modules/bytebugs/aws-elasticsearch/moudles", "provider": "moudles", "downloads": 0, "description": "", "source": "bytebugs/aws-elasticsearch/moudles", "args": [{"name": "es_domain_name", "description": "Name of the domain.", "default": ""}, {"name": "es_source_ip_list", "description": "Public IPs that can access the Elasticsearch cluster", "default": ""}, {"name": "key_pair_auth_id", "description": "", "default": ""}, {"name": "cidr_blocks", "description": "", "default": ""}, {"name": "subnet_id", "description": "", "default": ""}]}, "azavea/emr-cluster/aws": {"name": "emr-cluster", "url": "https://registry.terraform.io/modules/azavea/emr-cluster/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to create an Amazon Web Services (AWS) Elastic MapReduce (EMR) cluster.", "source": "azavea/emr-cluster/aws", "args": [{"name": "project", "description": "", "default": "\"Unknown\""}, {"name": "environment", "description": "", "default": "\"Unknown\""}, {"name": "name", "description": "", "default": ""}, {"name": "vpc_id", "description": "", "default": ""}, {"name": "release_label", "description": "", "default": "\"emr-5.8.0\""}, {"name": "applications", "description": "", "default": "[\n  \"Spark\"\n]"}, {"name": "configurations", "description": "", "default": ""}, {"name": "key_name", "description": "", "default": ""}, {"name": "subnet_id", "description": "", "default": ""}, {"name": "instance_groups", "description": "", "default": "[\n  {\n    \"instance_count\": 1,\n    \"instance_role\": \"MASTER\",\n    \"instance_type\": \"m3.xlarge\",\n    \"name\": \"MasterInstanceGroup\"\n  },\n  {\n    \"bid_price\": \"0.30\",\n    \"instance_count\": \"1\",\n    \"instance_role\": \"CORE\",\n    \"instance_type\": \"m3.xlarge\",\n    \"name\": \"CoreInstanceGroup\"\n  }\n]"}, {"name": "bootstrap_name", "description": "", "default": ""}, {"name": "bootstrap_uri", "description": "", "default": ""}, {"name": "bootstrap_args", "description": "", "default": "[]"}, {"name": "log_uri", "description": "", "default": ""}]}, "DWSR/users/pagerduty": {"name": "users", "url": "https://registry.terraform.io/modules/DWSR/users/pagerduty", "provider": "pagerduty", "downloads": 0, "description": "A TF module that allows the declaration of all PagerDuty users. Does not support teams", "source": "DWSR/users/pagerduty", "args": [{"name": "pagerduty_token", "description": "The API token for PagerDuty. Should be set via an environment variable.", "default": ""}, {"name": "users", "description": "A list of maps containing information about PagerDuty users. Please see the variable declaration for an example of the structure.", "default": "[\n  {\n    \"color\": \"Blue\",\n    \"email\": \"user@contoso.com\",\n    \"job_title\": \"Chief Needful Officer\",\n    \"name\": \"Full name\",\n    \"role\": \"read_only_user\"\n  }\n]"}]}, "kurron/ec2-spot/aws": {"name": "ec2-spot", "url": "https://registry.terraform.io/modules/kurron/ec2-spot/aws", "provider": "aws", "downloads": 0, "description": "Terraform module that requests an EC2 instance on the Spot market", "source": "kurron/ec2-spot/aws", "args": [{"name": "region", "description": "The AWS region to deploy into (e.g. us-east-1)", "default": ""}, {"name": "name", "description": "What to name the resources being created", "default": ""}, {"name": "project", "description": "Name of the project these resources are being created for", "default": ""}, {"name": "purpose", "description": "The role the resources will play", "default": ""}, {"name": "creator", "description": "Person creating these resources", "default": ""}, {"name": "environment", "description": "Context these resources will be used in, e.g. production", "default": ""}, {"name": "freetext", "description": "Information that does not fit in the other tags", "default": ""}, {"name": "duty", "description": "Special tag value used to locate specific running instances, e.g. Docker or Bastion", "default": ""}, {"name": "ami_regexp", "description": "Regular expression to use when looking up an AMI in the specified region", "default": ""}, {"name": "ebs_optimized", "description": "Boolean indicating if the instance should enable EBS optimization or not", "default": ""}, {"name": "instance_type", "description": "They instance type to build the instances from", "default": ""}, {"name": "ssh_key_name", "description": "Name of the SSH key to install onto the instances", "default": ""}, {"name": "security_group_ids", "description": "List of security groups to apply to the instances", "default": ""}, {"name": "subnet_ids", "description": "List of subnets to create the instances in", "default": ""}, {"name": "instance_profile", "description": "ID of the IAM profile to associate with the instances", "default": ""}, {"name": "scheduled", "description": "If set to Yes, the instances will be parked on a schedule", "default": ""}, {"name": "instance_limit", "description": "A number indicating how many instances to create. A value of 0 creates one instance per subnet.", "default": "\"0\""}, {"name": "spot_price", "description": "The maximum hourly price (bid) you are willing to pay for the instance, e.g. 0.10", "default": ""}, {"name": "launch_group", "description": "Group name to assign the instances to so they can be started/stopped in unison, e.g. purple-plutonium", "default": "\"defaulted\""}, {"name": "instance_interruption_behaviour", "description": "whether a Spot instance stops or terminates when it is interrupted, can be stop or terminate", "default": ""}]}, "pyToshka/puppet/provisioner": {"name": "puppet", "url": "https://registry.terraform.io/modules/pyToshka/puppet/provisioner", "provider": "provisioner", "downloads": 0, "description": "Puppet provisioner for Terraform", "source": "pyToshka/puppet/provisioner", "args": []}, "pyToshka/puppet-masterless/provisioner": {"name": "puppet-masterless", "url": "https://registry.terraform.io/modules/pyToshka/puppet-masterless/provisioner", "provider": "provisioner", "downloads": 0, "description": "terraform puppet masterless provisioner ", "source": "pyToshka/puppet-masterless/provisioner", "args": []}, "pyToshka/kubernetes/cluster": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/pyToshka/kubernetes/cluster", "provider": "cluster", "downloads": 0, "description": "", "source": "pyToshka/kubernetes/cluster", "args": [{"name": "provider", "description": "", "default": "{\n  \"access_key\": \"your_access_key\",\n  \"region\": \"us-east-1\",\n  \"secret_key\": \"your_secret_key\"\n}"}, {"name": "aws_key_name", "description": "", "default": "\"name_of_your_ssh_key\""}, {"name": "images", "description": "", "default": "{\n  \"ap-southeast-2\": \"ami-391ff95b\",\n  \"eu-west-1\": \"ami-17d11e6e\",\n  \"us-east-1\": \"ami-d651b8ac\",\n  \"us-west-1\": \"ami-2d5c6d4d\",\n  \"us-west-2\": \"ami-ecc63a94\"\n}"}, {"name": "vpc_cidr_block", "description": "", "default": "\"172.30.0.0/16\""}, {"name": "container_cidr_block", "description": "", "default": "\"10.216.0.0/16\""}, {"name": "publicly_accessible", "description": "Determines if database can be publicly available (NOT recommended)", "default": "true"}, {"name": "num_masters", "description": "", "default": "\"1\""}, {"name": "num_slaves", "description": "", "default": "\"2\""}, {"name": "master_instance_type", "description": "", "default": "\"t2.micro\""}, {"name": "slave_instance_type", "description": "", "default": "\"t2.micro\""}, {"name": "iam_suffix", "description": "", "default": "\"\""}, {"name": "cluster_name", "description": "", "default": "\"k8-cl\""}, {"name": "num_azs", "description": "", "default": "\"1\""}, {"name": "azs", "description": "", "default": "{\n  \"ap-southeast-2\": \"ap-southeast-2a,ap-southeast-2b,ap-southeast-2c\",\n  \"eu-west-1\": \"eu-west-1a,eu-west-1b,eu-west-1c\",\n  \"us-east-1\": \"us-east-1a,us-east-1b,us-east-1c,us-east-1d\",\n  \"us-west-1\": \"us-west-1b,us-west-1c\",\n  \"us-west-2\": \"us-west-2a,us-west-2b,us-west-2c\"\n}"}, {"name": "enable_extra_slave_security_group", "description": "", "default": "false"}, {"name": "extra_slave_security_group", "description": "Extra security groups that will be allow to talk to the slaves", "default": "\"\""}, {"name": "extra_slave_security_group_port", "description": "Port on which the extra security groups that will be allow to talk to the slaves", "default": "80"}, {"name": "elb_name", "description": "", "default": "\"k8s-master\""}, {"name": "domain_name", "description": "The suffix domain name to use by default when resolving non Fully Qualified Domain Names", "default": "\"k8s.cloud\""}, {"name": "name_servers", "description": "List of name servers to configure in '/etc/resolv.conf'", "default": "[\n  \"AmazonProvidedDNS\"\n]"}, {"name": "netbios_name_servers", "description": "List of NETBIOS name servers", "default": "[]"}, {"name": "netbios_node_type", "description": "The NetBIOS node type (1, 2, 4, or 8). AWS recommends to specify 2 since broadcast and multicast are not supported in their network.", "default": "\"\""}, {"name": "ntp_servers", "description": "List of NTP servers to configure", "default": "[]"}, {"name": "private_key", "description": "", "default": "\"add_your_private_ssh_key\""}]}, "cloudposse/datadog-integration/aws": {"name": "datadog-integration", "url": "https://registry.terraform.io/modules/cloudposse/datadog-integration/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module for integration DataDog to AWS", "source": "cloudposse/datadog-integration/aws", "args": [{"name": "namespace", "description": "", "default": ""}, {"name": "stage", "description": "", "default": ""}, {"name": "name", "description": "", "default": ""}, {"name": "delimiter", "description": "", "default": "\"-\""}, {"name": "attributes", "description": "", "default": "[]"}, {"name": "tags", "description": "", "default": "{}"}, {"name": "datadog_external_id", "description": "", "default": ""}, {"name": "datadog_aws_account_id", "description": "", "default": "\"464622532012\""}, {"name": "integrations", "description": "", "default": ""}]}, "cloudposse/user-data-s3-backend/aws": {"name": "user-data-s3-backend", "url": "https://registry.terraform.io/modules/cloudposse/user-data-s3-backend/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module to Offload User Data to S3", "source": "cloudposse/user-data-s3-backend/aws", "args": [{"name": "namespace", "description": "", "default": "\"global\""}, {"name": "stage", "description": "", "default": "\"default\""}, {"name": "name", "description": "", "default": ""}, {"name": "bucket", "description": "", "default": "\"Bucket name to store user data script\""}, {"name": "path", "description": "Path to store user data script in bucket", "default": "\"/\""}, {"name": "flavor", "description": "Flavor depends of OS and init system", "default": "\"debian-systemd\""}, {"name": "user_data", "description": "User data scripts content", "default": "[]"}]}, "david-wells-1/cloudtrail/aws": {"name": "cloudtrail", "url": "https://registry.terraform.io/modules/david-wells-1/cloudtrail/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create AWS CloudTrail with Alarms and SNS notification", "source": "david-wells-1/cloudtrail/aws", "args": [{"name": "cloudtrail_name", "description": "Specifies the name of the trail", "default": "\"\""}, {"name": "multi_region_trail", "description": "Specifies whether the trail is created in the current region or in all regions", "default": "false"}, {"name": "enable_logging", "description": "Enables logging for the trail", "default": "true"}, {"name": "enable_log_file_validation", "description": "Specifies whether log file integrity validation is enabled", "default": "true"}, {"name": "cloudwatch_log_group", "description": "The name of the log group", "default": "\"\""}, {"name": "sns_topic", "description": "The friendly name for the SNS topic", "default": "\"\""}, {"name": "bucket_name", "description": "The name of the bucket", "default": "\"\""}]}, "klauern/provider/gitea": {"name": "provider", "url": "https://registry.terraform.io/modules/klauern/provider/gitea", "provider": "gitea", "downloads": 0, "description": "terraform provider for Gitea", "source": "klauern/provider/gitea", "args": [{"name": "gitea_token", "description": "", "default": ""}, {"name": "gitea_base_url", "description": "", "default": ""}]}, "klauern/provider/gogs": {"name": "provider", "url": "https://registry.terraform.io/modules/klauern/provider/gogs", "provider": "gogs", "downloads": 0, "description": "terraform provider for Gogs", "source": "klauern/provider/gogs", "args": [{"name": "gogs_token", "description": "", "default": ""}, {"name": "gogs_base_url", "description": "", "default": ""}]}, "joshdurbin/status-monitor-storage-and-api/network": {"name": "status-monitor-storage-and-api", "url": "https://registry.terraform.io/modules/joshdurbin/status-monitor-storage-and-api/network", "provider": "network", "downloads": 0, "description": "", "source": "joshdurbin/status-monitor-storage-and-api/network", "args": [{"name": "number_of_generated_api_keys", "description": "", "default": "1"}, {"name": "usage_plan_per_user_quota_offset", "description": "The number of requests subtracted from the given limit in the initial time period.", "default": "0"}, {"name": "usage_plan_per_user_quota", "description": "The maximum number of requests that can be made in a given time period.", "default": "25"}, {"name": "usage_plan_per_user_quota_period", "description": "The time period in which the limit applies. Valid values are DAY, WEEK or MONTH.", "default": "\"DAY\""}, {"name": "usage_plan_rate_limit", "description": "The API request steady-state rate limit.", "default": "100"}, {"name": "usage_plan_burst_limit", "description": "The API request burst limit, the maximum rate limit over a time ranging from one to a few seconds, depending upon whether the underlying token bucket is at its full capacity.", "default": "150"}, {"name": "aws_region", "description": "", "default": "\"us-west-2\""}]}, "riboseinc/authenticating-secgroup/aws": {"name": "authenticating-secgroup", "url": "https://registry.terraform.io/modules/riboseinc/authenticating-secgroup/aws", "provider": "aws", "downloads": 0, "description": "Dynamically manage security group IPs through an authenticated HTTPS endpoint", "source": "riboseinc/authenticating-secgroup/aws", "args": [{"name": "description", "description": "Description of this secgroup", "default": "\"Dynamically Managing Security Group IPs API\""}, {"name": "name", "description": "Creates a unique name beginning with the specified prefix, useful for searching later", "default": "\"terraform-aws-authenticating-secgroup\""}, {"name": "deployment_stage", "description": "Api deployment stages, ex: staging, production...", "default": "\"dev\""}, {"name": "security_groups", "description": "Where to add the rules to", "default": ""}, {"name": "time_to_expire", "description": "Time to expiry for every rule (in seconds)", "default": "600"}, {"name": "log_level", "description": "Set level of Cloud Watch Log to INFO or DEBUG", "default": "\"INFO\""}]}, "cloudposse/monitor/datadog": {"name": "monitor", "url": "https://registry.terraform.io/modules/cloudposse/monitor/datadog", "provider": "datadog", "downloads": 0, "description": "Terraform module to provision Standard System Monitors (cpu, memory, swap, io, etc) in Datadog", "source": "cloudposse/monitor/datadog", "args": []}, "anugnes/availability-set/azure": {"name": "availability-set", "url": "https://registry.terraform.io/modules/anugnes/availability-set/azure", "provider": "azure", "downloads": 0, "description": "Azure Availability Set Module for Terraform", "source": "anugnes/availability-set/azure", "args": [{"name": "location", "description": "Availability Set location", "default": ""}, {"name": "name", "description": "Name", "default": ""}, {"name": "res_group_name", "description": "Resource Group Name", "default": ""}, {"name": "tags", "description": "Resource Group Environment Tag", "default": ""}, {"name": "count", "description": "Number of Availability Sets to create", "default": ""}]}, "anugnes/resource-group/azure": {"name": "resource-group", "url": "https://registry.terraform.io/modules/anugnes/resource-group/azure", "provider": "azure", "downloads": 0, "description": "Azure Resource Group Module for Terraform", "source": "anugnes/resource-group/azure", "args": [{"name": "location", "description": "Resource Group Location", "default": "\"West US\""}, {"name": "name", "description": "Resource Group Name", "default": ""}, {"name": "tags", "description": "Environment tag for the resource group (i.e. 'Production')", "default": ""}]}, "anugnes/storage-container/azure": {"name": "storage-container", "url": "https://registry.terraform.io/modules/anugnes/storage-container/azure", "provider": "azure", "downloads": 0, "description": "Azure Storage Container Module for Terraform", "source": "anugnes/storage-container/azure", "args": [{"name": "storage_acc_name", "description": "Storage Account Name", "default": ""}, {"name": "location", "description": "Location", "default": ""}, {"name": "res_group_name", "description": "Resource Group Name", "default": ""}, {"name": "storage_con_name", "description": "Storage Container Name", "default": ""}]}, "anugnes/virtual-machine/azure": {"name": "virtual-machine", "url": "https://registry.terraform.io/modules/anugnes/virtual-machine/azure", "provider": "azure", "downloads": 0, "description": "Azure Virtual Machine Module for Terraform", "source": "anugnes/virtual-machine/azure", "args": [{"name": "ip_config_name", "description": "IP Configuration Name", "default": ""}, {"name": "subnet_id", "description": "Subnet ID", "default": ""}, {"name": "location", "description": "Location", "default": ""}, {"name": "net_if_name", "description": "Network Interface Name", "default": ""}, {"name": "disk_create_option", "description": "Disk Create Option", "default": ""}, {"name": "disk_size", "description": "Disk Size (in GBs)", "default": ""}, {"name": "disk_name", "description": "Disk Name", "default": ""}, {"name": "res_group_name", "description": "Resource Group Name", "default": ""}, {"name": "disk_storage_type", "description": "Disk Storage Type", "default": ""}, {"name": "vm_name", "description": "Virtual Machine Name", "default": ""}, {"name": "count", "description": "Virtual Machine Count", "default": ""}, {"name": "vm_admin_username", "description": "VM Admin Username", "default": ""}, {"name": "vm_admin_pwd", "description": "VM Admin Password", "default": ""}, {"name": "vm_pc_name", "description": "VM Computer Name", "default": ""}, {"name": "vm_size", "description": "VM Size", "default": ""}, {"name": "vm_storage_img_offer", "description": "VM Storage Image Offer", "default": ""}, {"name": "vm_storage_img_publisher", "description": "VM Storage Image Publisher", "default": ""}, {"name": "vm_storage_img_sku", "description": "VM Storage Image SKU", "default": ""}, {"name": "vm_storage_os_name", "description": "VM Storage OS Disk Name", "default": ""}, {"name": "tags", "description": "VM Environment Tag", "default": ""}]}, "anugnes/virtual-network/azure": {"name": "virtual-network", "url": "https://registry.terraform.io/modules/anugnes/virtual-network/azure", "provider": "azure", "downloads": 0, "description": "Azure Virtual Network Module for Terraform", "source": "anugnes/virtual-network/azure", "args": [{"name": "name", "description": "Virtual Network Name", "default": ""}, {"name": "location", "description": "Location", "default": ""}, {"name": "res_group", "description": "Resource Group Name", "default": ""}, {"name": "address_space", "description": "Virtual Network Address Space", "default": ""}, {"name": "dns_servers", "description": "Comma separated list of DNS servers IPs", "default": ""}, {"name": "tags", "description": "Virtual Network Environment Tag", "default": ""}]}, "confluentinc/s3/state": {"name": "s3", "url": "https://registry.terraform.io/modules/confluentinc/s3/state", "provider": "state", "downloads": 0, "description": "Terraform module to create the S3/DynamoDB backend to store the Terraform state+lock", "source": "confluentinc/s3/state", "args": [{"name": "env", "description": "Name of the environment. Example: prod", "default": ""}, {"name": "s3_bucket", "description": "S3 bucket for terraform state.", "default": ""}, {"name": "s3_bucket_name", "description": "'Name' tag for S3 bucket with terraform state.", "default": ""}, {"name": "dynamodb_table", "description": "DynamoDB table name for terraform lock.", "default": ""}]}, "sprutner/lambda-proxy/aws": {"name": "lambda-proxy", "url": "https://registry.terraform.io/modules/sprutner/lambda-proxy/aws", "provider": "aws", "downloads": 0, "description": "", "source": "sprutner/lambda-proxy/aws", "args": [{"name": "name", "description": "This can be defined when calling module so you can avoid creating duplicates if you want to call the module multiple times", "default": "\"microservice_api\""}, {"name": "region", "description": "Region must be specified", "default": ""}, {"name": "proxy_hostname", "description": "Hostname for Fabio", "default": ""}, {"name": "proxy_port", "description": "Port for Nomad API", "default": "\"80\""}, {"name": "subnet_ids", "description": "Subnet IDs to associate with Lambda Function", "default": ""}, {"name": "security_group_ids", "description": "Security Group IDs to associate with Lambda Function", "default": ""}, {"name": "burst_limit", "description": "", "default": "5"}, {"name": "rate_limit", "description": "", "default": "10"}]}, "sprutner/lifecycle-hook-runner/aws": {"name": "lifecycle-hook-runner", "url": "https://registry.terraform.io/modules/sprutner/lifecycle-hook-runner/aws", "provider": "aws", "downloads": 0, "description": "", "source": "sprutner/lifecycle-hook-runner/aws", "args": [{"name": "name", "description": "Name of your hook function", "default": ""}, {"name": "environment", "description": "Name of your environment", "default": "\"dev\""}, {"name": "subnet_ids", "description": "Desired subnet with Internet and Consul access for Lambda Function", "default": ""}, {"name": "security_group_ids", "description": "Security Group IDs to allow Internet and Consul access for Lambda function", "default": ""}, {"name": "commands", "description": "CSV string of commands to run", "default": "\"echo 'hello world',\\necho 'hello sunshine'\\n\""}, {"name": "consul_url", "description": "Base URL of your consul server", "default": ""}, {"name": "autoscaling_group_name", "description": "Name of desired auto-scaling group to apply lifecycle hook to", "default": ""}]}, "netifi/proteus-router/aws": {"name": "proteus-router", "url": "https://registry.terraform.io/modules/netifi/proteus-router/aws", "provider": "aws", "downloads": 0, "description": "Rapidly deploy a Proteus Router", "source": "netifi/proteus-router/aws", "args": [{"name": "name", "description": "Name to be used on all the resources as identifier", "default": "\"\""}, {"name": "tags", "description": "A map of tags to add to all resources", "default": "{}"}, {"name": "subnet_id", "description": "A subnet id the router should be launched into", "default": "\"\""}, {"name": "vpc_security_group_ids", "description": "A list of security groups the instance should be launched into", "default": "[]"}, {"name": "key_name", "description": "The key pair name to launch the instance with", "default": "\"\""}, {"name": "instance_type", "description": "The instance_type of the instance", "default": "\"t2.small\""}, {"name": "ebs_optimized", "description": "Should the instance be ebs_optimized", "default": "\"false\""}, {"name": "router_access_key", "description": "Proteus Router access key", "default": "\"7685465987873703191\""}, {"name": "router_access_token", "description": "Proteus Router access token", "default": "\"PYYgV9XHSJ/3KqgK5wYjz+73MeA=\""}, {"name": "router_account_id", "description": "Proteus Router account id", "default": "\"100\""}]}, "matti/kubernetes-node-pool/google": {"name": "kubernetes-node-pool", "url": "https://registry.terraform.io/modules/matti/kubernetes-node-pool/google", "provider": "google", "downloads": 0, "description": "", "source": "matti/kubernetes-node-pool/google", "args": [{"name": "settings", "description": "", "default": "{}"}, {"name": "labels", "description": "", "default": "{}"}, {"name": "tags", "description": "", "default": "[]"}]}, "ryanuber/elb/aws": {"name": "elb", "url": "https://registry.terraform.io/modules/ryanuber/elb/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which creates ELB resources on AWS", "source": "ryanuber/elb/aws", "args": [{"name": "name", "description": "The name of the ELB", "default": ""}, {"name": "security_groups", "description": "A list of security group IDs to assign to the ELB", "default": ""}, {"name": "subnets", "description": "A list of subnet IDs to attach to the ELB", "default": ""}, {"name": "internal", "description": "If true, ELB will be an internal ELB", "default": ""}, {"name": "cross_zone_load_balancing", "description": "Enable cross-zone load balancing", "default": "true"}, {"name": "idle_timeout", "description": "The time in seconds that the connection is allowed to be idle", "default": "60"}, {"name": "connection_draining", "description": "Boolean to enable connection draining", "default": "false"}, {"name": "connection_draining_timeout", "description": "The time in seconds to allow for connections to drain", "default": "300"}, {"name": "tags", "description": "A mapping of tags to assign to the resource", "default": "{}"}, {"name": "listener", "description": "A list of listener blocks", "default": ""}, {"name": "access_logs", "description": "An access logs block", "default": "[]"}, {"name": "health_check", "description": "A health check block", "default": ""}, {"name": "number_of_instances", "description": "Number of instances to attach to ELB", "default": "0"}, {"name": "instances", "description": "List of instances ID to place in the ELB pool", "default": "[]"}]}, "sidick/iam-ssl-certificate/aws": {"name": "iam-ssl-certificate", "url": "https://registry.terraform.io/modules/sidick/iam-ssl-certificate/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which uploads an IAM Server Certificate", "source": "sidick/iam-ssl-certificate/aws", "args": [{"name": "name_prefix", "description": "Prefix of the Certificate name", "default": ""}, {"name": "path", "description": "The IAM path for the server certificate", "default": "\"/\""}, {"name": "private_key", "description": "The contents of the private key in PEM-encoded format", "default": ""}, {"name": "certificate_body", "description": "The contents of the public key certificate in PEM-encoded format", "default": ""}, {"name": "certificate_chain", "description": "The contents of the certificate chain. This is typically a concatenation of the PEM-encoded public key certificates of the chain", "default": "\"\""}]}, "techjacker/s3website/aws": {"name": "s3website", "url": "https://registry.terraform.io/modules/techjacker/s3website/aws", "provider": "aws", "downloads": 0, "description": "Terraform modules to create a static website hosted on AWS S3 and set up MX records", "source": "techjacker/s3website/aws", "args": [{"name": "domain", "description": "The domain where to host the site. This must be the naked domain, e.g. `example.com`", "default": ""}, {"name": "zone_id", "description": "route53 hosted zone id", "default": ""}, {"name": "cdn_min_ttl", "description": "Cloudfront minimum TTL Default = 0 seconds.", "default": "0"}, {"name": "cdn_default_ttl", "description": "Cloudfront default TTL. Default = 86400 seconds (24 hours).", "default": "86400"}, {"name": "cdn_max_ttl", "description": "Cloudfront maximum TTL. Default = 31536000 seconds (365 days).", "default": "31536000"}, {"name": "enable_health_check", "description": "If true, it creates a Route53 health check that monitors the www endpoint and an alarm that triggers whenever it's not reachable. Please note this comes at an extra monthly cost on your AWS account", "default": "\"0\""}, {"name": "health_check_alarm_sns_topics", "description": "A list of SNS topics to notify whenever the health check fails or comes back to normal", "default": "[]"}, {"name": "enable_gzip", "description": "Whether to make CloudFront automatically compress content for web requests that include `Accept-Encoding: gzip` in the request header", "default": "\"1\""}, {"name": "mx", "description": "", "default": ""}, {"name": "mx_spf", "description": "", "default": ""}, {"name": "mx_dkim", "description": "", "default": ""}, {"name": "mx_dmarc", "description": "", "default": ""}]}, "Andrew-Klaas/simple/aws": {"name": "simple", "url": "https://registry.terraform.io/modules/Andrew-Klaas/simple/aws", "provider": "aws", "downloads": 0, "description": "Spins up simple ec2 instance", "source": "Andrew-Klaas/simple/aws", "args": [{"name": "ami", "description": "", "default": ""}, {"name": "instance_type", "description": "", "default": ""}, {"name": "instance_count", "description": "", "default": ""}, {"name": "region", "description": "", "default": ""}]}, "npalm/dockercloud-swarm-role/aws": {"name": "dockercloud-swarm-role", "url": "https://registry.terraform.io/modules/npalm/dockercloud-swarm-role/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS IAM role for Docker Cloud Swarm", "source": "npalm/dockercloud-swarm-role/aws", "args": [{"name": "principal_arns", "description": "List of ARNs (accounts) to grant dockercloud-swarm privilleges.", "default": "[\n  \"arn:aws:iam::689684103426:root\"\n]"}, {"name": "prefix", "description": "Prefix for created resources", "default": "\"\""}, {"name": "role_name", "description": "Name of the created role.", "default": "\"dockercloud-swarm-role\""}, {"name": "policy_name", "description": "Name of the created policy.", "default": "\"dockercloud-swarm-policy\""}]}, "rkarthik007/yugabyte/aws": {"name": "yugabyte", "url": "https://registry.terraform.io/modules/rkarthik007/yugabyte/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to deploy and run YugaByte on AWS.", "source": "rkarthik007/yugabyte/aws", "args": [{"name": "associate_public_ip_address", "description": "Associate public IP address to instances created.", "default": "\"1\""}, {"name": "cluster_name", "description": "The name for the cluster (universe) being created.", "default": ""}, {"name": "custom_security_group_id", "description": "Security group to assign to the instances. Example: 'sg-12345'.", "default": "\"\""}, {"name": "instance_type", "description": "The type of instances to create.", "default": "\"c4.xlarge\""}, {"name": "num_instances", "description": "Number of instances in the YugaByte cluster.", "default": "\"1\""}, {"name": "prefix", "description": "Prefix prepended to all resources created.", "default": "\"yb-ce-\""}, {"name": "replication_factor", "description": "The replication factor for the universe.", "default": "\"3\""}, {"name": "root_volume_iops", "description": "Provisioned IOPS - valid only for 'io1' type.", "default": "\"0\""}, {"name": "root_volume_size", "description": "The volume size in gigabytes.", "default": "\"50\""}, {"name": "root_volume_type", "description": "The volume type. Must be one of 'gp2' or 'io1'.", "default": "\"gp2\""}, {"name": "ssh_keypair", "description": "The SSH keypair name to use for the instances.", "default": ""}, {"name": "ssh_key_path", "description": "The public key to use when connecting to the instances.", "default": ""}, {"name": "subnet_ids", "description": "List of subnets to launch the instances in. Example: ['subnet-12345','subnet-98765'].", "default": ""}, {"name": "vpc_id", "description": "The VPC ID to create the security groups in.", "default": ""}]}, "jainishshah17/artifactory/aws": {"name": "artifactory", "url": "https://registry.terraform.io/modules/jainishshah17/artifactory/aws", "provider": "aws", "downloads": 0, "description": "Terraform Template to deploy Artifactory Enterprise", "source": "jainishshah17/artifactory/aws", "args": [{"name": "aws_region", "description": "AWS region to launch servers.", "default": "\"us-west-1\""}, {"name": "key_name", "description": "Desired name of AWS key pair", "default": ""}, {"name": "artifactory_version", "description": "Artifactory version to deploy", "default": "\"5.8.4\""}, {"name": "artifactory_license_1", "description": "Artifactory Enterprise License", "default": ""}, {"name": "artifactory_license_2", "description": "Artifactory Enterprise License", "default": ""}, {"name": "artifactory_license_3", "description": "Artifactory Enterprise License", "default": "\"\""}, {"name": "artifactory_license_4", "description": "Artifactory Enterprise License", "default": "\"\""}, {"name": "artifactory_license_5", "description": "Artifactory Enterprise License", "default": "\"\""}, {"name": "volume_size", "description": "Disk size for each EC2 instances", "default": "250"}, {"name": "artifactory_instance_type", "description": "Artifactory EC2 instance type", "default": "\"m4.xlarge\""}, {"name": "extra_java_options", "description": "Setting Java Memory Parameters for Artifactory. Learn about system requirements for Artifactory https://www.jfrog.com/confluence/display/RTF/System+Requirements#SystemRequirements-RecommendedHardware.", "default": "\"-server -Xms2g -Xmx14g -Xss256k -XX:+UseG1GC -XX:OnOutOfMemoryError=\\\\\\\\\\\\\\\"kill -9 %p\\\\\\\\\\\\\\\"\""}, {"name": "bucket_name", "description": "AWS S3 Buket name", "default": "\"artifactory-enterprise-bucket\""}, {"name": "db_name", "description": "MySQL database name", "default": "\"artdb\""}, {"name": "db_user", "description": "Database user name", "default": "\"artifactory\""}, {"name": "db_instance_class", "description": "The database instance type", "default": "\"db.t2.small\""}, {"name": "db_password", "description": "Database password", "default": "\"password\""}, {"name": "db_allocated_storage", "description": "The size of the database (Gb)", "default": "\"5\""}, {"name": "master_key", "description": "Master key for Artifactory cluster. Generate master.key using command '$openssl rand -hex 16'", "default": "\"35767fa0164bac66b6cccb8880babefb\""}, {"name": "secondary_node_count", "description": "Desired number of Artifactory secondary nodes", "default": "0"}, {"name": "ssl_certificate", "description": "To use Artifactory as docker registry you need to provide wild card valid Certificate. Provide your SSL Certificate.", "default": "\"-----BEGIN CERTIFICATE----- MIIFhzCCA2+gAwIBAgIJALC4r5BQWZE4MA0GCSqGSIb3DQEBCwUAMFoxCzAJBgNV BAYTAlVTMRMwEQYDVQQIDApDYWxpZm9ybmlhMRMwEQYDVQQHDApTYW50YUNsYXJh MQswCQYDVQQKDAJJVDEUMBIGA1UEAwwLKi5sb2NhbGhvc3QwHhcNMTgwMTE3MTk0 NjI4WhcNMTkwMTA4MTk0NjI4WjBaMQswCQYDVQQGEwJVUzETMBEGA1UECAwKQ2Fs aWZvcm5pYTETMBEGA1UEBwwKU2FudGFDbGFyYTELMAkGA1UECgwCSVQxFDASBgNV BAMMCyoubG9jYWxob3N0MIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEA 7KfOWDQlov8cMa8r/lcJqiWZaH9myQC74Vbe0HXsntQbcvljkjG2P7ebm5dd9Bzc sauNOJpbKf5AhFK1iwJUAkciGc1LR4k8wfWmQM3NPS8hrqrtH20zqNpdFRpNYjja JofwccPNm030GhhZkZ95TpruvmswMDwspl3jfqdcc/eiQsHcKyGnV2a+UAeoqe7J mHhmhRy1MLqAjF5U1GrUYUONA+22iRDJb4c9B91QoWvsnXpdA9NKV/mmA3/rIdx6 Ld2IPRdrIw2K5sAnXsh3bx2oCSvSfussf0x+4XDrnsaHVfjwvfNL8ECOuac2Oi/E WOp9528gOohpFAuwEt63Vl5p8/CC9m0HJDTZBKm2l5eD1kdPIj4PvP9Sn9CxGXKQ E1bxWoFxGX8EyRW0b0NK31N7b8JPZ1SoFNiB5amOMNLvR26a7cQrKumTuJeYK9Ja JaxhMXM7R0DA0Ev8ZG2xmyCygox+1KPSmJOIEpT70BFbj3rKLNqP22ET+zvPuh+2 DdgyrpHFeYkGWjMbWPjK7wJsD2zM8ccoJQfepPz8I4rT0JfrKAQgCGuGOggneaNJ KTVGNOFbj5AXdZ/Q+GvNommyRdq4J7EnqY6L+P25fo5qZ6UZ/iS0tPcvxgn0Fdhs pUPbQyQIDZyxZd3Q1lUIE38ol8P66mS2zbzf8EeOCoUCAwEAAaNQME4wHQYDVR0O BBYEFETAQM/5P7XJ8kevHFj6BPndQOFaMB8GA1UdIwQYMBaAFETAQM/5P7XJ8kev HFj6BPndQOFaMAwGA1UdEwQFMAMBAf8wDQYJKoZIhvcNAQELBQADggIBAJ1TepKv LWYhFmVQcgZwZf/qt1a1cohzJSm6da9RCnnAWC7WC/U117bgSomtrH1v0OysHFhB zBBUeBqI7+OmzAX8dhj+roKkcnFUM/IwlK1eueIIA//CWvEf/o0XExilVS2yCc9d PTpOQBXwk9QinxK36kHdBiGxa7dW0JPnOEEmuMgGORKeLy4J6Ik8iSeFY1SZVcOI +6WWvoKciPlmIeccC+6YVmkeBwhP2o5r5w/UAaO2hSnGvmm4UIj/VJv4VQu7xTUp cIfFz5NtIr80DbqcyPiEMS2ETJ4L/kO4MS5FfeEXyQuXCzmiIDVY6tE3C7+kZmK4 JzPLuWm9ndQoyQySOGfQqvlUR1+YxUdvmu3LrOS5dOA354Q36wHa4wEGUoHU/7GV fYQmmmDSDaNSpXW5PFey6scFyDBS/yYJ0H9EjYb/11HeWYj8Yv5xTWj8nhzJONC8 D6Y5ydlU4PifM2pOf88pTYpmogNwLJWXbql5I9cvMa8APo4yLVqcISU5ynsvFke+ Non+T0mHpJai/hrA9NK+s6EGC1dAX58jy61h6FhOPI1d4s/mov/KMa2t3SfZp5SF 81aR6dHvO56teiK5M1xMkrqG75zh3TMFJJLRFe9XxeB4JeN76URB3mgADOUqkBxd ibSgVqfKwOw4IujEcqMUc5mqSnbLY1Dv+oby -----END CERTIFICATE-----\""}, {"name": "ssl_certificate_key", "description": "Provide your SSL Certificate key", "default": "\"-----BEGIN PRIVATE KEY----- MIIJRAIBADANBgkqhkiG9w0BAQEFAASCCS4wggkqAgEAAoICAQDsp85YNCWi/xwx ryv+VwmqJZlof2bJALvhVt7Qdeye1Bty+WOSMbY/t5ubl130HNyxq404mlsp/kCE UrWLAlQCRyIZzUtHiTzB9aZAzc09LyGuqu0fbTOo2l0VGk1iONomh/Bxw82bTfQa GFmRn3lOmu6+azAwPCymXeN+p1xz96JCwdwrIadXZr5QB6ip7smYeGaFHLUwuoCM XlTUatRhQ40D7baJEMlvhz0H3VCha+ydel0D00pX+aYDf+sh3Hot3Yg9F2sjDYrm wCdeyHdvHagJK9J+6yx/TH7hcOuexodV+PC980vwQI65pzY6L8RY6n3nbyA6iGkU C7AS3rdWXmnz8IL2bQckNNkEqbaXl4PWR08iPg+8/1Kf0LEZcpATVvFagXEZfwTJ FbRvQ0rfU3tvwk9nVKgU2IHlqY4w0u9HbprtxCsq6ZO4l5gr0lolrGExcztHQMDQ S/xkbbGbILKCjH7Uo9KYk4gSlPvQEVuPesos2o/bYRP7O8+6H7YN2DKukcV5iQZa MxtY+MrvAmwPbMzxxyglB96k/PwjitPQl+soBCAIa4Y6CCd5o0kpNUY04VuPkBd1 n9D4a82iabJF2rgnsSepjov4/bl+jmpnpRn+JLS09y/GCfQV2GylQ9tDJAgNnLFl 3dDWVQgTfyiXw/rqZLbNvN/wR44KhQIDAQABAoICAQDm1pAp7UPBCELCG/I3t0KQ GvjWu17RNcwN86SHhl92VcMolSaQ1bjF0h0Q2ccldHm5PHMWAUpnXcAk0mCO5Yh4 aFZVALEraCxBrZGrqJNH2Q9rxwJhIy2+yLD/Apb09iukZfkdnzaRBKrUQWgs6Xd0 OyAh0YBBrJCI/xAG3M0LuUMnBt3xnHQUhv2gJrhYeble5iJqOSRsEZ+OS/1G7aWX 8kI80MS6UguKpEndv/0EV7eHrHHKZ3Ee+z76Lu52Kw9qaaqYnJ0+pdkVV92PUM9f LXhY6cv7TP4sdbtVv8W1LEWakKaTQhySjwYpBXeZrjpB2QlSlEzFi4WjrfrjjSca UZazm/jY5uDI2cXf35NyZUkbYxIKlGtURtDpoPp5R7XguHSoqLrh2Zsc79mZfNST zFwbhNBVB2nAl6ZyIRNFLjVhQScvlImpIVSVZm5/NiiABIEaxRh8w8C5qRMctSTy KF6rS6as2KsPQHpiu/6nDMqqTZ8UMQ3yXEpai5VwAzKFP67usHheKf4RIXNUn7Xc JxWiI8KfOV5n4cSJK1/R+i+ZpWyQiloao4v7GS/fwZTsILeBLBa0utDmNs5aJgVK cEagRjVGAeAEc2W+jXmSqtZRHQowJmEKOARMn4lI+duziSCjIfPH6xIDAUhVlc/K u03432NupfPepW6BYVBgQQKCAQEA/+CD2uiRZgmzuEn/vn/u7jGFjETdUQmfl5kX pMTtueXyQxHBRwBCZqq885doozeQd7mLRcW+klngq1NmnEnjx+NfUzFJLpEmQO1/ AMHUpYpZY4jOyntx9cBy+M+DUfNtdsJUz+VOe3HO5/lJJf+gSgpVp2ku1oOrgEeH a71aGIXOsiOQ/fHL4Q0CuylersD5Dq4Tdf/u6rr4NbwOZQCQ9WH0uTckA9SkjJFu iHXblg8j9RUNbj89WPrEulKA98duFuLvGTeohcAPQ8f60Z7sxDLGLRyRvhUO4EBr hTTmcfI2LsPWSo+X+n6eBqfUfGZub2qN+d2B08qKgnGdgFEf6QKCAQEA7MTtAphl lswq4kPvDkPHMqJhmPBgb5NAUzE2Z8yjJY3IX6zxinSDnuMwEzCinKe7rzv6aYIh klviND/oyLOxVlLESZu62epokgIey05sv9a/030z7q5hradNzcMP1VfGVs6IeOvr 3Kit4T7LI1L2eXwD1Yks6uHHw8lHAlyrrlbwCEmzqElKs0YtkvNa4HFgesFNnObe f8C29LOPZMqje7iAT91823MGI9NML9qGYON/ZLc4uCB9no+o6ZOTQHqX1xxSWv5D 66KGiRnUC/RAq6RbTVn3NxFgvb3k0rejbQbxW5KCri1E4sTw+pZ5bIRUJcXi+J+Z Tg88lVbmqXfwPQKCAQEA94yShDr0UC+au/R7hCXpVnB6r5YAN+KDj/sAsNwE0hDx LIoE31gU5ZbRbylQhne/QNU1NK93C8gAYEAzyYiC4mPLWYUZNAAhbjdW47iirfUH PhChX6vGOOeTU7wPZD2J7ZdczjUelLcqYar/Zc/Fl1wgOfK86bRBO733+fgbLhZm PlnCcKx5fqVDuybu/0qaqeUn1sVgs59nezURCA5gL8YxKO973GjhOU2KDmNXqfnD 49wWPk7YXzldEpW3SACdNW8futnqJFwHaKAUvLBwh/BHYmV9atScq8AnRZxERoD6 govcyg3aDvJomC/OlvvSY+BGszHl5KzTDBg3NGlH4QKCAQA/71lU5xQfqVg3K0MF ZhYHPUP/iYFw/6FSFarsUp0Higa+lzPOQHI+WHjl5a8zgDO1OQwAq6wnGnq1w0A3 2hYcClOI0O2e5KaCLuJj4fSJxRKdqGR6okosG05uLqs63+3mCPVfOc3CEyaI+Wzf SArYeT2LzvP7JSbNXq+3GpEdjcpZYpWJ7uimCmBKGz7B9runykUMBme0tbRx1X72 J6YHxaWYa2XI2IGi8O7UyTyaMzR2XOeLCPMC+yYQlNIhijkwVCyE974dhhCwOvJA nB9Oeh5Rf+a6zw2BjyKYKBCQY1yPbrutDvpYBfhQoot9Wyph3NLScj5yjri8VvAI eSO9AoIBAQDyUx5YUgHgpoJtRZ+8PGQBZHm5L5HJhvfUs96I9Z4lZSXnCmEJyOWn LIob8c0n4hU1EXdbbl+7eRQgG3oGKyF0XXhuaP3vHprIBW6tm9kCGORTliZOaZdW 0Mj9GUv2de1r8anwJMFvIMXsuO08rsGzsIt7DrNYa0YSMkeDwPenRfDHXOYH2fjf RKjlP3fQr/iLL/YuMGaNxzIeyWPZ2WTUUC0bllNxMTZmztuMkPNb7fhhs0hLecXM fE2nbwUaGwMZaails1+5G3HvEAlChJ1GN9XnYxrtfqq93tYELWBiNcv1LaMAFvj8 S+j1+iUKGGhwVmhqh75q5do3+VF3XlAh -----END PRIVATE KEY-----\""}, {"name": "certificate_domain", "description": "Provide your Certificate Domain Name. For e.g jfrog.team for certificate with *.jfrog.team", "default": "\"artifactory\""}, {"name": "artifactory_server_name", "description": "Provide artifactory server name to be used in Nginx. e.g artifactory for artifactory.jfrog.team", "default": "\"artifactory\""}, {"name": "aws_amis", "description": "", "default": "{\n  \"ap-northeast-1\": \"ami-374db956\",\n  \"ap-northeast-2\": \"ami-2b408b45\",\n  \"ap-south-1\": \"ami-ffbdd790\",\n  \"ap-southeast-1\": \"ami-a59b49c6\",\n  \"ap-southeast-2\": \"ami-dc361ebf\",\n  \"ca-central-1\": \"ami-730ebd17\",\n  \"cn-north-1\": \"ami-8e6aa0e3\",\n  \"eu-central-1\": \"ami-ea26ce85\",\n  \"eu-west-1\": \"ami-f9dd458a\",\n  \"eu-west-2\": \"ami-886369ec\",\n  \"sa-east-1\": \"ami-6dd04501\",\n  \"us-east-1\": \"ami-6869aa05\",\n  \"us-east-2\": \"ami-f6035893\",\n  \"us-west-1\": \"ami-31490d51\",\n  \"us-west-2\": \"ami-7172b611\"\n}"}]}, "matti/node-ignition/kontena": {"name": "node-ignition", "url": "https://registry.terraform.io/modules/matti/node-ignition/kontena", "provider": "kontena", "downloads": 0, "description": "", "source": "matti/node-ignition/kontena", "args": [{"name": "master_uri", "description": "Kontena Master URI", "default": ""}, {"name": "grid_token", "description": "Kontena Grid token", "default": ""}, {"name": "peer_interface", "description": "Network interface that is used for intra-datacenter communication", "default": "\"eth1\""}, {"name": "main_interface_prefix", "description": "The main network interface to configure", "default": "\"eth1\""}, {"name": "dns_server", "description": "Network DNS server", "default": "\"169.254.169.253\""}, {"name": "supernet", "description": "", "default": "\"10.81.0.0/16\""}, {"name": "docker_opts", "description": "Docker Engine options", "default": "\"\""}, {"name": "node_labels", "description": "Kontena node labels (as 'key=value' separated by spaces)", "default": "\"\""}, {"name": "overlay_version", "description": "Docker overlay version", "default": "\"overlay2\""}, {"name": "ignition_disks", "description": "Ignition disk configs", "default": "[]"}, {"name": "ignition_filesystems", "description": "Ignition filesystems", "default": "[]"}, {"name": "authorized_keys_core", "description": "Authorized SSH keys for the user core", "default": "[]"}, {"name": "systemd_units", "description": "Additional Ignition systemd units", "default": "[]"}, {"name": "ignition_files", "description": "Additional Ignition files", "default": "[]"}]}, "literalice/openshift/aws": {"name": "openshift", "url": "https://registry.terraform.io/modules/literalice/openshift/aws", "provider": "aws", "downloads": 0, "description": "Creates OpenShift Container Platform(OCP) or OpenShift Origin cluster", "source": "literalice/openshift/aws", "args": [{"name": "platform_name", "description": "The name of the cluster that is used for tagging some resources", "default": ""}, {"name": "key_pair_private_key_path", "description": "AWS key pair that is used for instances of the cluster includes the bastion", "default": ""}, {"name": "operator_cidrs", "description": "CIDRS that is allowed from which master api can be accessed", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "public_access_cidrs", "description": "CIDRS that is allowed from which public users can access served services in the cluster", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "compute_node_count", "description": "", "default": "2"}, {"name": "infra_node_count", "description": "", "default": "1"}, {"name": "master_count", "description": "", "default": "1"}, {"name": "master_spot_price", "description": "", "default": "\"0.05\""}, {"name": "upstream", "description": "Sets true if you want to install Origin.", "default": "false"}, {"name": "rh_subscription_pool_id", "description": "Red Hat subscription pool id for OpenShift Container Platform", "default": "\"\""}, {"name": "rhn_username", "description": "Red Hat Network login username for registration system of the OpenShift Container Platform cluster", "default": "\"\""}, {"name": "rhn_password", "description": "Red Hat Network login password for registration system of the OpenShift Container Platform cluster", "default": "\"\""}, {"name": "openshift_major_version", "description": "", "default": "\"3.9\""}, {"name": "platform_default_subdomain", "description": "Public DNS subdomain for access to services served in the cluster", "default": ""}]}, "devtheops/staticsite/aws": {"name": "staticsite", "url": "https://registry.terraform.io/modules/devtheops/staticsite/aws", "provider": "aws", "downloads": 0, "description": "The Terraform module creates everything needed to make a static website", "source": "devtheops/staticsite/aws", "args": [{"name": "name", "description": "Name to be used on all the resources as identifier.", "default": "\"\""}, {"name": "ssl_cert", "description": "The name of the ssl cert to use from ACM.", "default": ""}, {"name": "host_record", "description": "The Route53 host record to add the dns entry too.", "default": "\"\""}, {"name": "domain", "description": "The domain to use for the site. If left out will not create a Route53 record.", "default": "\"\""}, {"name": "extra_cnames", "description": "Any other CNAMEs you want added to the cloudfront distrobution.", "default": "[]"}, {"name": "comment", "description": "A description of the CloudFront distrobution.", "default": "\"\""}, {"name": "root_object", "description": "The root object to load when none specified.", "default": "\"index.html\""}, {"name": "tags", "description": "The tags to add to each resource that supports tags.", "default": "{}"}, {"name": "bucket_name", "description": "The name for the bucket. Will default to using a $name-static-assets", "default": "\"\""}, {"name": "enable_s3_versioning", "description": "Enable versioning on the s3 bucket or not.", "default": "false"}, {"name": "min_ttl", "description": "Minimum TTL that can be set on an object.", "default": "0"}, {"name": "default_ttl", "description": "TTL of an object when one is not set.", "default": "3600"}, {"name": "max_ttl", "description": "Maximum TTL that can be set on an object", "default": "86400"}, {"name": "price_class", "description": "The cloudfront price class to use.", "default": "\"PriceClass_100\""}, {"name": "ssl_support_method", "description": "The type of SLL method you want to support.", "default": "\"sni-only\""}, {"name": "minimum_protocol_version", "description": "minimum protocol version to require.", "default": "\"TLSv1\""}]}, "devops-workflow/users/datadog": {"name": "users", "url": "https://registry.terraform.io/modules/devops-workflow/users/datadog", "provider": "datadog", "downloads": 0, "description": "Terraform module to manage Datadog users", "source": "devops-workflow/users/datadog", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "users", "description": "List of Datadog user maps to manage", "default": ""}]}, "btower-labz/btlabz-vpc-ha-2x/aws": {"name": "btlabz-vpc-ha-2x", "url": "https://registry.terraform.io/modules/btower-labz/btlabz-vpc-ha-2x/aws", "provider": "aws", "downloads": 0, "description": "", "source": "btower-labz/btlabz-vpc-ha-2x/aws", "args": [{"name": "az_a", "description": "Availability zone for 'A' subnets. Both private and public.", "default": "\"\""}, {"name": "az_b", "description": "Availability zone for 'B' subnets. Both private and public.", "default": "\"\""}, {"name": "vpc_cidr", "description": "VPC CIDR range.", "default": "\"172.18.0.0/16\""}, {"name": "public_a_cidr", "description": "Public network A CIDR range.", "default": "\"172.18.1.0/24\""}, {"name": "public_b_cidr", "description": "Public network B CIDR range.", "default": "\"172.18.2.0/24\""}, {"name": "private_a_cidr", "description": "Private network A CIDR range.", "default": "\"172.18.11.0/24\""}, {"name": "private_b_cidr", "description": "Private network B CIDR range.", "default": "\"172.18.12.0/24\""}, {"name": "igw_name", "description": "IGW name. Will be used as the 'Name' tag value.", "default": "\"main-igw\""}, {"name": "nat_a_name", "description": "NAT-A name. Will be used as the 'Name' tag value.", "default": "\"nat-a\""}, {"name": "nat_b_name", "description": "NAT-B name. Will be used as the 'Name' tag value.", "default": "\"nat-b\""}, {"name": "rt_public_name", "description": "Main public route table name.", "default": "\"rt-public\""}, {"name": "rt_private_a_name", "description": "Route table name for private subnet A.", "default": "\"rt-private-a\""}, {"name": "rt_private_b_name", "description": "Route table name for private subnet C.", "default": "\"rt-private-b\""}, {"name": "vpc_name", "description": "VPC name. Will be used as the 'Name' tag value.", "default": "\"main-vpc\""}, {"name": "public_a_name", "description": "Public subnet A name. Will be used as the 'Name' tag value.", "default": "\"public-a\""}, {"name": "public_b_name", "description": "Public subnet B name. Will be used as the 'Name' tag value.", "default": "\"public-b\""}, {"name": "private_a_name", "description": "Private subnet A name. Will be used as the 'Name' tag value.", "default": "\"private-a\""}, {"name": "private_b_name", "description": "Private subnet B name. Will be used as the 'Name' tag value.", "default": "\"private-b\""}, {"name": "tags", "description": "Additional tags.", "default": "{}"}]}, "devops-workflow/datadog-integration/aws": {"name": "datadog-integration", "url": "https://registry.terraform.io/modules/devops-workflow/datadog-integration/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to manage AWS configuration for Datadog integration", "source": "devops-workflow/datadog-integration/aws", "args": [{"name": "datadog_aws_account", "description": "The ID of Datadog's AWS account", "default": "\"464622532012\""}, {"name": "datadog_external_id", "description": "The external ID datadog gives you for the cross-account role", "default": ""}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "enable_autoscaling", "description": "Allow Datadog to trigger autoscaling policies", "default": "false"}, {"name": "enable_cloudtrail", "description": "Setup Datadog Cloudtrail integration", "default": "false"}, {"name": "enable_logging", "description": "Setup Datadog Logging integration", "default": "false"}, {"name": "autoscaling_policy_name", "description": "Datadog autoscaling integration policy name", "default": "\"DatadogAWSIntegrationAutoscaling\""}, {"name": "aws_cloudtrail_bucket_arn", "description": "Cloudtrail S3 logs bucket ARN", "default": "\"\""}, {"name": "cloudtrail_policy_name", "description": "Datadog Cloudtrail integration policy name", "default": "\"DatadogAWSIntegrationCloudtrailLogBucket\""}, {"name": "logging_policy_name", "description": "Datadog Logging integration policy name", "default": "\"DatadogAWSIntegrationLogging\""}, {"name": "policy_name", "description": "The name for the IAM policy created to give Datadog permissions", "default": "\"DatadogAWSIntegrationPolicy\""}, {"name": "policies_path", "description": "Path for IAM policies", "default": "\"/\""}, {"name": "role_name", "description": "The name for the cross-account role Datadog will use to access your account", "default": "\"DatadogAWSIntegrationRole\""}, {"name": "role_path", "description": "Path for IAM role", "default": "\"/\""}]}, "plus3it/watchmaker/aws": {"name": "watchmaker", "url": "https://registry.terraform.io/modules/plus3it/watchmaker/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for Watchmaker", "source": "plus3it/watchmaker/aws", "args": [{"name": "NoUpdates", "description": "Controls whether to run yum update during a stack update (On the initial instance launch, Watchmaker _always_ installs updates)", "default": "\"false\""}, {"name": "SecurityGroupIds", "description": "List of security groups to apply to the instance", "default": ""}, {"name": "CfnGetPipUrl", "description": "URL to get-pip.py", "default": "\"https://bootstrap.pypa.io/2.6/get-pip.py\""}, {"name": "NoReboot", "description": "Controls whether to reboot the instance as the last step of cfn-init execution", "default": "\"false\""}, {"name": "PrivateIp", "description": "(Optional) Set a static, primary private IP. Leave blank to auto-select a free IP", "default": "\"\""}, {"name": "PypiIndexUrl", "description": "URL to the PyPi Index", "default": "\"https://pypi.org/simple\""}, {"name": "AmiDistro", "description": "Linux distro of the AMI", "default": ""}, {"name": "AppScriptShell", "description": "Shell with which to execute the application script. Ignored if AppScriptUrl is blank", "default": "\"bash\""}, {"name": "KeyPairName", "description": "Public/private key pairs allow you to securely connect to your instance after it launches", "default": ""}, {"name": "NoPublicIp", "description": "Controls whether to assign the instance a public IP. Recommended to leave at true _unless_ launching in a public subnet", "default": "\"true\""}, {"name": "WatchmakerConfig", "description": "(Optional) URL to a Watchmaker config file", "default": "\"\""}, {"name": "AmiId", "description": "ID of the AMI to launch", "default": ""}, {"name": "InstanceRole", "description": "(Optional) IAM instance role to apply to the instance", "default": "\"\""}, {"name": "WatchmakerOuPath", "description": "(Optional) DN of the OU to place the instance when joining a domain. If blank and WatchmakerEnvironment enforces a domain join, the instance will be placed in a default container. Leave blank if not joining a domain, or if WatchmakerEnvironment is false", "default": "\"\""}, {"name": "AppVolumeType", "description": "Type of EBS volume to create. Ignored if AppVolumeDevice is blank", "default": "\"gp2\""}, {"name": "AppVolumeMountPath", "description": "Filesystem path to mount the extra app volume. Ignored if AppVolumeDevice is blank", "default": "\"/opt/data\""}, {"name": "AppVolumeSize", "description": "Size in GB of the EBS volume to create. Ignored if AppVolumeDevice is blank", "default": "\"1\""}, {"name": "WatchmakerComputerName", "description": "(Optional) Sets the hostname/computername within the OS", "default": "\"\""}, {"name": "ToggleCfnInitUpdate", "description": "A/B toggle that forces a change to instance metadata, triggering the cfn-init update sequence", "default": "\"A\""}, {"name": "AppScriptUrl", "description": "(Optional) S3 URL to the application script in an S3 bucket (s3://). Leave blank to launch without an application script. If specified, an appropriate InstanceRole is required", "default": "\"\""}, {"name": "WatchmakerEnvironment", "description": "Environment in which the instance is being deployed", "default": "\"\""}, {"name": "WatchmakerS3Source", "description": "Flag that tells watchmaker to use its instance role to retrieve watchmaker content from S3", "default": "\"false\""}, {"name": "Name", "description": "Name of CloudFormation Stack", "default": ""}, {"name": "AppVolumeDevice", "description": "(Optional) Device to mount an extra EBS volume. Leave blank to launch without an extra application volume", "default": "\"\""}, {"name": "InstanceType", "description": "Amazon EC2 instance type", "default": "\"t2.micro\""}, {"name": "SubnetId", "description": "ID of the subnet to assign to the instance", "default": ""}, {"name": "WatchmakerAdminGroups", "description": "(Optional) Colon-separated list of domain groups that should have admin permissions on the EC2 instance", "default": "\"\""}, {"name": "WatchmakerAdminUsers", "description": "(Optional) Colon-separated list of domain users that should have admin permissions on the EC2 instance", "default": "\"\""}, {"name": "CfnEndpointUrl", "description": "(Optional) URL to the CloudFormation Endpoint. e.g. https://cloudformation.us-east-1.amazonaws.com", "default": "\"https://cloudformation.us-east-1.amazonaws.com\""}, {"name": "CfnBootstrapUtilsUrl", "description": "URL to aws-cfn-bootstrap-latest.tar.gz", "default": "\"https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\""}, {"name": "AppScriptParams", "description": "Parameter string to pass to the application script. Ignored if AppScriptUrl is blank", "default": "\"\""}]}, "yopaproperty/Harpocrates/AWS": {"name": "Harpocrates", "url": "https://registry.terraform.io/modules/yopaproperty/Harpocrates/AWS", "provider": "AWS", "downloads": 0, "description": "Terraform module to easily deploy Chamber.", "source": "yopaproperty/Harpocrates/AWS", "args": [{"name": "AccountID", "description": "AccountID", "default": ""}, {"name": "IAMAccountID", "description": "IAM AccountID", "default": ""}, {"name": "region", "description": "AWS Region", "default": ""}, {"name": "kms_alias_prefix", "description": "Prefix for KMS alias", "default": ""}, {"name": "ssm_prefix", "description": "Prefix for SSM parameters", "default": ""}]}, "matti/yaml/json": {"name": "yaml", "url": "https://registry.terraform.io/modules/matti/yaml/json", "provider": "json", "downloads": 0, "description": "", "source": "matti/yaml/json", "args": [{"name": "json", "description": "", "default": ""}]}, "plus3it/s3-keys/external": {"name": "s3-keys", "url": "https://registry.terraform.io/modules/plus3it/s3-keys/external", "provider": "external", "downloads": 0, "description": "Terraform module that returns a list of object keys from an S3 bucket", "source": "plus3it/s3-keys/external", "args": [{"name": "bucket", "description": "Name of the S3 bucket from which keys will be retrieved", "default": ""}, {"name": "prefix", "description": "S3 key prefix in which to look for object keys", "default": "\"\""}, {"name": "delimiter", "description": "Delimiter used to separate returned object keys", "default": "\",\""}]}, "plus3it/file-cache/external": {"name": "file-cache", "url": "https://registry.terraform.io/modules/plus3it/file-cache/external", "provider": "external", "downloads": 0, "description": "Terraform module to retrieve and cache files", "source": "plus3it/file-cache/external", "args": [{"name": "cache_dir", "description": "Path where files will be cached", "default": "\".filecache\""}, {"name": "uris", "description": "List of URIs to the files to be retrieved and cached locally", "default": "[]"}, {"name": "refresh", "description": "Retrieve file even if the URI is already cached on the system", "default": "\"false\""}]}, "devops-workflow/users/pagerduty": {"name": "users", "url": "https://registry.terraform.io/modules/devops-workflow/users/pagerduty", "provider": "pagerduty", "downloads": 0, "description": "A TF module that allows the declaration of all PagerDuty users. Does not support teams", "source": "devops-workflow/users/pagerduty", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "pagerduty_token", "description": "The API token for PagerDuty. Should be set via an environment variable.", "default": ""}, {"name": "users", "description": "A list of maps containing information about PagerDuty users. Please see the README or examples for the structure.", "default": ""}]}, "cloudposse/organization-access-role/aws": {"name": "organization-access-role", "url": "https://registry.terraform.io/modules/cloudposse/organization-access-role/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an IAM Role to grant permissions to delegated IAM users in the master account to access an invited member account", "source": "cloudposse/organization-access-role/aws", "args": [{"name": "master_account_id", "description": "The ID of the master account to grant permissions to access the current account", "default": ""}, {"name": "role_name", "description": "The name of the role to grant permissions to delegated IAM users in the master account to the current account", "default": "\"OrganizationAccountAccessRole\""}, {"name": "policy_arn", "description": "Policy ARN to attach to the role. By default it attaches `AdministratorAccess` managed policy to grant full access to AWS services and resources in the current account", "default": "\"arn:aws:iam::aws:policy/AdministratorAccess\""}]}, "cloudposse/organization-access-group/aws": {"name": "organization-access-group", "url": "https://registry.terraform.io/modules/cloudposse/organization-access-group/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an IAM Group and Policy to grant permissions to delegated IAM users in the Organization's master account to access a member account", "source": "cloudposse/organization-access-group/aws", "args": [{"name": "user_names", "description": "A list of IAM User names to associate with the Group", "default": ""}, {"name": "member_account_id", "description": "The ID of the member account to grant access permissions to the users in the Group", "default": ""}, {"name": "role_name", "description": "The name of the Role in the member account to grant permissions to the users in the Group", "default": "\"OrganizationAccountAccessRole\""}, {"name": "require_mfa", "description": "Require the users to have MFA enabled", "default": "\"false\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`, `infra`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}]}, "cloudposse/kops-metadata/aws": {"name": "kops-metadata", "url": "https://registry.terraform.io/modules/cloudposse/kops-metadata/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to lookup resources within a Kops cluster", "source": "cloudposse/kops-metadata/aws", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating or accessing any resources", "default": "\"true\""}, {"name": "dns_zone", "description": "Name of the Kops DNS zone", "default": ""}, {"name": "bastion_name", "description": "Bastion server subdomain name in the Kops DNS zone", "default": "\"bastion\""}, {"name": "masters_name", "description": "K8s masters subdomain name in the Kops DNS zone", "default": "\"masters\""}, {"name": "nodes_name", "description": "K8s nodes subdomain name in the Kops DNS zone", "default": "\"nodes\""}]}, "cloudposse/vpc-kops-peering/aws": {"name": "vpc-kops-peering", "url": "https://registry.terraform.io/modules/cloudposse/vpc-kops-peering/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create a peering connection between a backing services VPC and a VPC created by Kops", "source": "cloudposse/vpc-kops-peering/aws", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating or accessing any resources", "default": "\"true\""}, {"name": "auto_accept", "description": "Automatically accept the peering (both VPCs need to be in the same AWS account)", "default": "\"true\""}, {"name": "dns_zone", "description": "Name of the Kops DNS zone", "default": ""}, {"name": "bastion_name", "description": "Bastion server subdomain name in the Kops DNS zone", "default": "\"bastion\""}, {"name": "masters_name", "description": "K8s masters subdomain name in the Kops DNS zone", "default": "\"masters\""}, {"name": "nodes_name", "description": "K8s nodes subdomain name in the Kops DNS zone", "default": "\"nodes\""}, {"name": "backing_services_vpc_id", "description": "Backing services VPC ID", "default": ""}, {"name": "backing_services_allow_remote_vpc_dns_resolution", "description": "Allow the backing services VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the Kops VPC", "default": "\"true\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}]}, "devops-workflow/autoscaling/aws": {"name": "autoscaling", "url": "https://registry.terraform.io/modules/devops-workflow/autoscaling/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which creates Auto Scaling resources on AWS", "source": "devops-workflow/autoscaling/aws", "args": [{"name": "ebs_optimized", "description": "If true, the launched EC2 instance will be EBS-optimized", "default": "false"}, {"name": "launch_configuration", "description": "The name of the launch configuration to use (if it is created outside of this module)", "default": "\"\""}, {"name": "scaling_policy_low_cpu_threshold", "description": "The value against which the specified statistic is compared", "default": "20"}, {"name": "namespace-org", "description": "Prefix name with the organization. If true, format is: <org>-<env namespaced name>. If both env and org namespaces are used, format will be <org>-<env>-<name>", "default": "false"}, {"name": "scaling_policy_low_cpu_evaluation_periods", "description": "The number of periods over which data is compared to the specified threshold", "default": "3"}, {"name": "spot_price", "description": "The price to use for reserving spot instances", "default": "0"}, {"name": "asg_name", "description": "Override autoscaling group prefix name", "default": "\"\""}, {"name": "key_name", "description": "The key name that should be used for the instance", "default": "\"\""}, {"name": "placement_tenancy", "description": "The tenancy of the instance. Valid values are 'default' or 'dedicated'", "default": "\"default\""}, {"name": "monitor", "description": "TAG: Should resource be monitored", "default": "\"UNDEF-ASG\""}, {"name": "min_elb_capacity", "description": "Setting this causes Terraform to wait for this number of instances to show up healthy in the ELB only on creation. Updates will not wait on ELB instance number changes", "default": "0"}, {"name": "ephemeral_block_device", "description": "Customize Ephemeral (also known as 'Instance Store') volumes on the instance", "default": "[]"}, {"name": "health_check_grace_period", "description": "Time (in seconds) after instance comes into service before checking health", "default": "300"}, {"name": "user_data", "description": "The user data to provide when launching the instance", "default": "\" \""}, {"name": "suspended_processes", "description": "A list of processes to suspend for the AutoScaling Group. The allowed values are Launch, Terminate, HealthCheck, ReplaceUnhealthy, AZRebalance, AlarmNotification, ScheduledActions, AddToLoadBalancer. Note that if you suspend either the Launch or Terminate process types, it can prevent your autoscaling group from functioning properly.", "default": "[]"}, {"name": "placement_group", "description": "The name of the placement group into which you'll launch your instances, if any", "default": "\"\""}, {"name": "tags", "description": "A map of additional tags", "default": "{}"}, {"name": "image_id", "description": "The EC2 image ID to launch", "default": ""}, {"name": "lc_name", "description": "Override launch configuration prefix name", "default": "\"\""}, {"name": "load_balancers", "description": "A list of elastic load balancer names to add to the autoscaling group names", "default": "[]"}, {"name": "metrics_granularity", "description": "The granularity to associate with the metrics to collect. The only valid value is 1Minute", "default": "\"1Minute\""}, {"name": "scaling_policy_low_cpu_period", "description": "The period in seconds over which the specified statistic is applied", "default": "900"}, {"name": "product", "description": "TAG: Company/business product", "default": "\"UNDEF-ASG\""}, {"name": "service", "description": "TAG: Application (microservice) name", "default": "\"UNDEF-ASG\""}, {"name": "owner", "description": "TAG: Owner of the service", "default": "\"UNDEF-ASG\""}, {"name": "vpc_zone_identifier", "description": "A list of subnet IDs to launch resources in", "default": ""}, {"name": "ebs_block_device", "description": "Additional EBS block devices to attach to the instance", "default": "[]"}, {"name": "min_size", "description": "The minimum size of the auto scale group", "default": ""}, {"name": "team", "description": "TAG: Department/team of people responsible for service", "default": "\"UNDEF-ASG\""}, {"name": "instance_type", "description": "The size of instance to launch", "default": ""}, {"name": "security_groups", "description": "A list of security group IDs to assign to the launch configuration", "default": ""}, {"name": "enable_monitoring", "description": "Enables/disables detailed monitoring. This is enabled by default.", "default": "true"}, {"name": "max_size", "description": "The maximum size of the auto scale group", "default": ""}, {"name": "desired_capacity", "description": "The number of Amazon EC2 instances that should be running in the group", "default": ""}, {"name": "force_delete", "description": "Allows deleting the autoscaling group without waiting for all instances in the pool to terminate. You can force an autoscaling group to delete even if it's in the process of scaling a resource. Normally, Terraform drains all the instances before deleting the group. This bypasses that behavior and potentially leaves resources dangling", "default": "false"}, {"name": "scaling_policy_high_cpu_period", "description": "The period in seconds over which the specified statistic is applied", "default": "60"}, {"name": "attributes", "description": "Suffix name with additional attributes (policy, role, etc.)", "default": "[]"}, {"name": "namespace-env", "description": "Prefix name with the environment. If true, format is: <env>-<name>", "default": "true"}, {"name": "default_cooldown", "description": "The amount of time, in seconds, after a scaling activity completes before another scaling activity can start", "default": "300"}, {"name": "enabled_metrics", "description": "A list of metrics to collect. The allowed values are GroupMinSize, GroupMaxSize, GroupDesiredCapacity, GroupInServiceInstances, GroupPendingInstances, GroupStandbyInstances, GroupTerminatingInstances, GroupTotalInstances", "default": "[\n  \"GroupMinSize\",\n  \"GroupMaxSize\",\n  \"GroupDesiredCapacity\",\n  \"GroupInServiceInstances\",\n  \"GroupPendingInstances\",\n  \"GroupStandbyInstances\",\n  \"GroupTerminatingInstances\",\n  \"GroupTotalInstances\"\n]"}, {"name": "component", "description": "TAG: Underlying, dedicated piece of service (Cache, DB, ...)", "default": "\"UNDEF-ASG\""}, {"name": "associate_public_ip_address", "description": "Associate a public ip address with an instance in a VPC", "default": "false"}, {"name": "iam_instance_profile", "description": "The IAM instance profile to associate with launched instances", "default": "\"\""}, {"name": "protect_from_scale_in", "description": "Allows setting instance protection. The autoscaling group will not select instances with this setting for terminination during scale in events.", "default": "false"}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespaces`, `attributes`, etc.", "default": "\"-\""}, {"name": "wait_for_capacity_timeout", "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out. (See also Waiting for Capacity below.) Setting this to '0' causes Terraform to skip all Capacity Waiting behavior.", "default": "\"10m\""}, {"name": "termination_policies", "description": "A list of policies to decide how the instances in the auto scale group should be terminated. The allowed values are OldestInstance, NewestInstance, OldestLaunchConfiguration, ClosestToNextInstanceHour, Default", "default": "[\n  \"OldestLaunchConfiguration\",\n  \"Default\"\n]"}, {"name": "scaling_policy_high_cpu_evaluation_periods", "description": "The number of periods over which data is compared to the specified threshold", "default": "5"}, {"name": "scaling_policy_high_cpu_threshold", "description": "The value against which the specified statistic is compared", "default": "60"}, {"name": "scaling_policy_scaling_out_cooldown", "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start", "default": "300"}, {"name": "root_block_device", "description": "Customize details about the root block device of the instance", "default": "[]"}, {"name": "target_group_arns", "description": "A list of aws_alb_target_group ARNs, for use with Application Load Balancing", "default": "[]"}, {"name": "wait_for_elb_capacity", "description": "Setting this will cause Terraform to wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. Takes precedence over min_elb_capacity behavior.", "default": "false"}, {"name": "enable_scaling_policies", "description": "Enable default scale-in and scale-out policies based on CPU Utilization", "default": "false"}, {"name": "scaling_policy_scaling_in_cooldown", "description": "The amount of time, in seconds, after a scaling activity completes and before the next scaling activity can start", "default": "3000"}, {"name": "environment", "description": "Environment (ex: `dev`, `qa`, `stage`, `prod`). (Second or top level namespace. Depending on namespacing options)", "default": ""}, {"name": "organization", "description": "Organization name (Top level namespace)", "default": "\"\""}, {"name": "health_check_type", "description": "Controls how health checking is done. Values are - EC2 and ELB", "default": ""}, {"name": "name", "description": "Base name for resource", "default": ""}, {"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}]}, "cloudposse/cloudtrail-s3-bucket/aws": {"name": "cloudtrail-s3-bucket", "url": "https://registry.terraform.io/modules/cloudposse/cloudtrail-s3-bucket/aws", "provider": "aws", "downloads": 0, "description": "S3 bucket with built in IAM policy to allow CloudTrail logs", "source": "cloudposse/cloudtrail-s3-bucket/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `logs`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "acl", "description": "Canned ACL to apply to the S3 bucket", "default": "\"log-delivery-write\""}, {"name": "region", "description": "AWS Region for S3 bucket", "default": "\"us-east-1\""}, {"name": "force_destroy", "description": "A boolean that indicates the bucket can be destroyed even if it contains objects. These objects are not recoverable", "default": "\"false\""}]}, "claque2000/tfbackend/aws": {"name": "tfbackend", "url": "https://registry.terraform.io/modules/claque2000/tfbackend/aws", "provider": "aws", "downloads": 0, "description": "A module to abstract s3 secured backend with dynamodb lock for Terraform", "source": "claque2000/tfbackend/aws", "args": [{"name": "users", "description": "", "default": ""}, {"name": "tags", "description": "", "default": ""}, {"name": "bucket_tfstates_name", "description": "", "default": ""}, {"name": "deploy_region", "description": "", "default": ""}, {"name": "administrators", "description": "", "default": ""}]}, "khaliqgant/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/khaliqgant/ecs/aws", "provider": "aws", "downloads": 0, "description": "AWS specific terraform module for ECS", "source": "khaliqgant/ecs/aws", "args": [{"name": "app", "description": "Application name", "default": ""}, {"name": "instance_number", "description": "Number of instances to use in the ECS service", "default": ""}, {"name": "lb_healthy_threshold", "description": "Number of healthy instances required for the lb to be healthy", "default": ""}, {"name": "lb_unhealthy_threshold", "description": "Number of unhealthy instances required for the lb to be unhealthy", "default": ""}, {"name": "ssh_ips", "description": "List of IP addresses that can SSH into the instances", "default": ""}, {"name": "instance_type", "description": "EC2 instance type", "default": ""}, {"name": "cidr_block", "description": "CIDR block for the VPC", "default": "\"10.0.0.0/16\""}, {"name": "public_cidrs", "description": "Public CIDR block for the VPC", "default": "[\n  \"10.0.0.0/24\",\n  \"10.0.1.0/24\",\n  \"10.0.3.0/24\"\n]"}, {"name": "availability_zones", "description": "Availability zones for the app", "default": ""}, {"name": "destination_cidr_block", "description": "Specify all traffic to be routed either trough Internet Gateway or NAT to access the internet", "default": "\"0.0.0.0/0\""}, {"name": "aws_profile", "description": "AWS profile to use when provisioning the app. This is set in the ~/.aws directory", "default": ""}, {"name": "aws_region", "description": "AWS Region to place your app in", "default": ""}, {"name": "aws_key_pair", "description": "AWS key pair to use when creating your ecs instance", "default": ""}, {"name": "lb_health_check_path", "description": "Path for the health check to hit when checking for healthy instances", "default": ""}, {"name": "lb_port", "description": "Port used when running a health check to the LB", "default": ""}, {"name": "lb_protocol", "description": "Protocol used when checking the LB", "default": "\"HTTP\""}, {"name": "lb_timeout", "description": "Timeout allowed when checking the instances in the LB", "default": ""}, {"name": "lb_interval", "description": "Interval at which to check the LB instances", "default": ""}, {"name": "app_repositories", "description": "ECR repositories to create when making the app", "default": ""}, {"name": "app_ports", "description": "The ports for each repository in the app", "default": ""}, {"name": "app_memory_repositories", "description": "The memory required for each repository", "default": ""}, {"name": "provided_vpc_id", "description": "Supply a VPC for the cluster to join", "default": "\"\""}, {"name": "provided_subnets", "description": "List of subnets for the cluster to attach to", "default": "[]"}]}, "sacloud/packet-filter/sakuracloud": {"name": "packet-filter", "url": "https://registry.terraform.io/modules/sacloud/packet-filter/sakuracloud", "provider": "sakuracloud", "downloads": 0, "description": "Terraform module for provisioning packet-filter", "source": "sacloud/packet-filter/sakuracloud", "args": [{"name": "ssh_port", "description": "", "default": "22"}, {"name": "ssh_source_nw", "description": "", "default": "\"\""}, {"name": "http_port", "description": "", "default": "80"}, {"name": "https_port", "description": "", "default": "443"}, {"name": "local_port_range", "description": "", "default": "\"32768-61000\""}, {"name": "packet_filter_name", "description": "", "default": "\"packet-filter\""}, {"name": "packet_filter_description", "description": "", "default": "\"\""}]}, "cloudposse/kops-vpc-peering/aws": {"name": "kops-vpc-peering", "url": "https://registry.terraform.io/modules/cloudposse/kops-vpc-peering/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create a peering connection between a backing services VPC and a VPC created by Kops", "source": "cloudposse/kops-vpc-peering/aws", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating or accessing any resources", "default": "\"true\""}, {"name": "auto_accept", "description": "Automatically accept the peering (both VPCs need to be in the same AWS account)", "default": "\"true\""}, {"name": "dns_zone", "description": "Name of the Kops DNS zone", "default": ""}, {"name": "bastion_name", "description": "Bastion server subdomain name in the Kops DNS zone", "default": "\"bastion\""}, {"name": "masters_name", "description": "K8s masters subdomain name in the Kops DNS zone", "default": "\"masters\""}, {"name": "nodes_name", "description": "K8s nodes subdomain name in the Kops DNS zone", "default": "\"nodes\""}, {"name": "backing_services_vpc_id", "description": "Backing services VPC ID", "default": ""}, {"name": "backing_services_allow_remote_vpc_dns_resolution", "description": "Allow the backing services VPC to resolve public DNS hostnames to private IP addresses when queried from instances in the Kops VPC", "default": "\"true\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map('BusinessUnit`,`XYZ`)", "default": "{}"}]}, "vexingcodes/s3-static-site/aws": {"name": "s3-static-site", "url": "https://registry.terraform.io/modules/vexingcodes/s3-static-site/aws", "provider": "aws", "downloads": 0, "description": "Creates a static website on a domain hosted on S3 and delivered by CloudFront over HTTPS with Route53 managing DNS.", "source": "vexingcodes/s3-static-site/aws", "args": [{"name": "domain", "description": "The domain name of the site.", "default": ""}, {"name": "secret", "description": "A secret string between CloudFront and S3 to control access.", "default": ""}]}, "chroto/serverless-react/aws": {"name": "serverless-react", "url": "https://registry.terraform.io/modules/chroto/serverless-react/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which creates S3, CloudFront, and Route53 resources for hosting a React application", "source": "chroto/serverless-react/aws", "args": [{"name": "name", "description": "The name for the application", "default": ""}, {"name": "logging_config", "description": "List of config maps to describe the CloudFront logging configuration", "default": "[]"}, {"name": "min_ttl", "description": "The minimum amount of time that you want objects to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.", "default": "0"}, {"name": "default_ttl", "description": "The default amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request", "default": "3600"}, {"name": "max_ttl", "description": "The maximum amount of time (in seconds) that an object is in a CloudFront cache before CloudFront forwards another request to your origin to determine whether the object has been updated.", "default": "86400"}, {"name": "error_caching_min_ttl", "description": "he minimum amount of time you want HTTP error codes to stay in CloudFront caches before CloudFront queries your origin to see whether the object has been updated.", "default": "60"}, {"name": "environment", "description": "Tag the resources with an environment. Default is `development`", "default": "\"development\""}, {"name": "price_class", "description": "Set the price class for the CloudFront distribution", "default": "\"PriceClass_100\""}]}, "samstav/aws/mailgun": {"name": "aws", "url": "https://registry.terraform.io/modules/samstav/aws/mailgun", "provider": "mailgun", "downloads": 0, "description": "A Terraform module for creating a Mailgun domain, Route53 Zone, and corresponding DNS records", "source": "samstav/aws/mailgun", "args": [{"name": "mailgun_wildcard", "description": "Determines whether the domain will accept email for sub-domains.", "default": "true"}, {"name": "mailgun_set_mx_for_inbound", "description": "Affects terraform-mailgun-aws module behavior. Set to false or 0 to prevent this module from setting mailgun.org MX records on your Route53 Hosted Zone. See more information about how terraform handles booleans here: https://www.terraform.io/docs/configuration/variables.html", "default": "1"}, {"name": "zone_id", "description": "You probbaly want to set this variable if 1) You are using an existing Route53 Zone 2) You don't want to delete and recreate that route53 zone and/or 3) You don't want to `terraform import` your existing Route53 Zone into this module. (Instructions for that are in the README). If this zone id is set, terrafrom-mailgun-aws will use this existing zone *instead of creating one for you*.", "default": "0"}, {"name": "record_ttl", "description": "Lifespan of DNS records", "default": "300"}, {"name": "mailgun_smtp_password", "description": "", "default": ""}, {"name": "domain", "description": "", "default": ""}, {"name": "mailgun_spam_action", "description": "Spam filter behavior, (tag or disabled).", "default": "\"tag\""}]}, "cloudposse/kops-state-backend/aws": {"name": "kops-state-backend", "url": "https://registry.terraform.io/modules/cloudposse/kops-state-backend/aws", "provider": "aws", "downloads": 0, "description": "Easily bootstrap kops clusters (DNS & S3 Bucket)", "source": "cloudposse/kops-state-backend/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name (e.g. `kops-state`)", "default": "\"kops-state\""}, {"name": "cluster_name", "description": "Kops cluster name (e.g. `us-east-1` or `cluster-1`)", "default": "\"us-east-1\""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "zone_name", "description": "Template for the DNS zone name", "default": "\"$${name}.$${parent_zone_name}\""}, {"name": "parent_zone_id", "description": "Parent DNS zone ID", "default": "\"\""}, {"name": "parent_zone_name", "description": "Parent DNS zone name (e.g. `domain.com`)", "default": "\"\""}, {"name": "region", "description": "AWS Region the S3 bucket should reside in", "default": "\"us-east-1\""}, {"name": "acl", "description": "The canned ACL to apply to the S3 bucket", "default": "\"private\""}, {"name": "force_destroy", "description": "A boolean that indicates all objects should be deleted from the bucket so that the bucket can be destroyed without errors. These objects are not recoverable", "default": "\"0\""}]}, "traveloka/autoscaling/aws": {"name": "autoscaling", "url": "https://registry.terraform.io/modules/traveloka/autoscaling/aws", "provider": "aws", "downloads": 0, "description": "A terraform module which provisions an auto scaling group along with its launch configuration", "source": "traveloka/autoscaling/aws", "args": [{"name": "service_name", "description": "The name of the service", "default": ""}, {"name": "cluster_role", "description": "Primary role/function of the cluster", "default": "\"app\""}, {"name": "environment", "description": "The created resources will belong to this infrastructure environment", "default": ""}, {"name": "application", "description": "Application type that the ASG's instances will serve", "default": ""}, {"name": "product_domain", "description": "Abbreviation of the product domain this ASG and its instances belongs to", "default": ""}, {"name": "description", "description": "Free form description of this ASG and its instances", "default": ""}, {"name": "asg_vpc_zone_identifier", "description": "The created ASG will spawn instances to these subnet IDs", "default": ""}, {"name": "asg_lb_target_group_arns", "description": "The created ASG will be attached to this target group", "default": "[]"}, {"name": "asg_min_capacity", "description": "The created ASG will have this number of instances at minimum", "default": "\"1\""}, {"name": "asg_max_capacity", "description": "The created ASG will have this number of instances at maximum", "default": "\"5\""}, {"name": "asg_health_check_type", "description": "Controls how ASG health checking is done", "default": "\"ELB\""}, {"name": "asg_health_check_grace_period", "description": "Time, in seconds, to wait for new instances before checking their health", "default": "\"300\""}, {"name": "asg_default_cooldown", "description": "Time, in seconds, the minimum interval of two scaling activities", "default": "\"300\""}, {"name": "asg_placement_group", "description": "The placement group for the spawned instances", "default": "\"\""}, {"name": "asg_metrics_granularity", "description": "The granularity to associate with the metrics to collect", "default": "\"1Minute\""}, {"name": "asg_enabled_metrics", "description": "The list of ASG metrics to collect", "default": "[\n  \"GroupMinSize\",\n  \"GroupMaxSize\",\n  \"GroupDesiredCapacity\",\n  \"GroupInServiceInstances\",\n  \"GroupPendingInstances\",\n  \"GroupStandbyInstances\",\n  \"GroupTerminatingInstances\",\n  \"GroupTotalInstances\"\n]"}, {"name": "asg_service_linked_role_arn", "description": "The ARN of the service-linked role that the ASG will use to call other AWS services", "default": "\"\""}, {"name": "asg_termination_policies", "description": "Specify policies that the auto scaling group should use to terminate its instances", "default": "[\n  \"Default\"\n]"}, {"name": "asg_tags", "description": "The created ASG (and spawned instances) will have these tags, merged over the default (see main.tf)", "default": "[]"}, {"name": "asg_wait_for_capacity_timeout", "description": "A maximum duration that Terraform should wait for ASG instances to be healthy before timing out", "default": ""}, {"name": "asg_wait_for_elb_capacity", "description": "Terraform will wait for exactly this number of healthy instances in all attached load balancers on both create and update operations. If left to default, the value is set to asg_min_capacity", "default": "\"\""}, {"name": "lc_security_groups", "description": "The spawned instances will have these security groups", "default": ""}, {"name": "lc_instance_profile", "description": "The spawned instances will have this IAM profile", "default": ""}, {"name": "lc_key_name", "description": "The spawned instances will have this SSH key name", "default": "\"\""}, {"name": "lc_instance_type", "description": "The spawned instances will have this type", "default": ""}, {"name": "lc_ami_id", "description": "The spawned instances will have this AMI", "default": ""}, {"name": "lc_monitoring", "description": "The spawned instances will have enhanced monitoring if enabled", "default": "\"1\""}, {"name": "lc_ebs_optimized", "description": "The spawned instances will have EBS optimization if enabled", "default": "\"0\""}, {"name": "lc_user_data", "description": "The spawned instances will have this user data. Use the rendered value of a terraform's `template_cloudinit_config` data", "default": "\"\""}]}, "matti/config/pharos": {"name": "config", "url": "https://registry.terraform.io/modules/matti/config/pharos", "provider": "pharos", "downloads": 0, "description": "", "source": "matti/config/pharos", "args": [{"name": "depends_id", "description": "", "default": "\"\""}, {"name": "master_addresses", "description": "", "default": ""}, {"name": "master_private_addresses", "description": "", "default": ""}, {"name": "master_fields", "description": "", "default": ""}, {"name": "worker_addresses", "description": "", "default": ""}, {"name": "worker_private_addresses", "description": "", "default": ""}, {"name": "worker_fields", "description": "", "default": ""}, {"name": "addons", "description": "", "default": "{}"}, {"name": "network", "description": "", "default": "{}"}]}, "cloudposse/kops-chart-repo/aws": {"name": "kops-chart-repo", "url": "https://registry.terraform.io/modules/cloudposse/kops-chart-repo/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an S3 bucket for Helm chart repository, and an IAM role and policy with permissions for Kops nodes to access the bucket", "source": "cloudposse/kops-chart-repo/aws", "args": [{"name": "permitted_nodes", "description": "Kops kubernetes nodes that are permitted to assume the role (e.g. 'nodes', 'masters', or 'both')", "default": "\"both\""}, {"name": "cluster_name", "description": "Kops cluster name (e.g. `us-east-1.cloudposse.com` or `cluster-1.cloudposse.com`)", "default": ""}, {"name": "nodes_name", "description": "Kops nodes subdomain name in the cluster DNS zone", "default": "\"nodes\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "name", "description": "Name (e.g. `chart-repo`)", "default": "\"chart-repo\""}, {"name": "masters_name", "description": "Kops masters subdomain name in the cluster DNS zone", "default": "\"masters\""}]}, "cloudposse/kops-external-dns/aws": {"name": "kops-external-dns", "url": "https://registry.terraform.io/modules/cloudposse/kops-external-dns/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an IAM role for external-dns running in a Kops cluster, and attach an IAM policy to the role with permissions to modify Route53 record sets", "source": "cloudposse/kops-external-dns/aws", "args": [{"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "tags", "description": "Additional tags (e.g. map(`Cluster`,`us-east-1.cloudposse.com`)", "default": "{}"}, {"name": "masters_name", "description": "Kops masters subdomain name in the cluster DNS zone", "default": "\"masters\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "name", "description": "Name (e.g. `external-dns`)", "default": "\"external-dns\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "cluster_name", "description": "Kops cluster name (e.g. `us-east-1.cloudposse.com` or `cluster-1.cloudposse.com`)", "default": ""}, {"name": "nodes_name", "description": "Kops nodes subdomain name in the cluster DNS zone", "default": "\"nodes\""}]}, "cloudposse/kops-route53/aws": {"name": "kops-route53", "url": "https://registry.terraform.io/modules/cloudposse/kops-route53/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to lookup the IAM role associated with `kops` masters, and attach an IAM policy to the role with permissions to modify Route53 record sets", "source": "cloudposse/kops-route53/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Name (e.g. `route53`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name`, and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`Cluster`,`k8s.domain.com`)", "default": "{}"}, {"name": "masters_name", "description": "K8s masters subdomain name in the Kops DNS zone", "default": "\"masters\""}]}, "zoitech/alb/aws": {"name": "alb", "url": "https://registry.terraform.io/modules/zoitech/alb/aws", "provider": "aws", "downloads": 0, "description": "", "source": "zoitech/alb/aws", "args": [{"name": "aws_region", "description": "The AWS region to run in.", "default": "\"eu-central-1\""}, {"name": "vpc_id", "description": "The VPC ID in which the resources should be created.", "default": ""}, {"name": "prefix", "description": "A prefix which is added to each resource name.", "default": "\"\""}, {"name": "suffix", "description": "A suffix which is added to each resource name.", "default": "\"\""}, {"name": "http_target_group_names", "description": "Name(s) of the http target group(s)", "default": "[\n  \"http-target-group\"\n]"}, {"name": "http_target_group_ports", "description": "Port(s) of the http target group(s)", "default": "[\n  80\n]"}, {"name": "http_target_group_deregistration_delay", "description": "Deregistration delay for the http target group(s)", "default": "300"}, {"name": "http_health_check_interval", "description": "Set HTTP health check interval", "default": "30"}, {"name": "http_health_check_path", "description": "Set HTTP health check path", "default": "\"/\""}, {"name": "http_health_check_port", "description": "Set HTTP health check port", "default": "\"traffic-port\""}, {"name": "http_health_check_protocol", "description": "Set HTTP health check protocol", "default": "\"HTTP\""}, {"name": "http_health_check_timeout", "description": "Set HTTP health check timeout", "default": "5"}, {"name": "http_health_check_healthy_threshold", "description": "Set HTTP health check healthy threshold", "default": "3"}, {"name": "http_health_check_unhealthy_threshold", "description": "Set HTTP health check unhealthy threshold", "default": "3"}, {"name": "http_health_check_matcher", "description": "Set HTTP health check matcher", "default": "200"}, {"name": "http_target_group_stickiness_enabled", "description": "Turn stickiness on/off for the http target group(s)", "default": "false"}, {"name": "http_target_group_stickiness_cookie_duration", "description": "Cookie Duration for stickiness of the http target group(s)", "default": "8640"}, {"name": "https_target_group_names", "description": "Name(s) of the https target group(s)", "default": "[\n  \"https-target-group\"\n]"}, {"name": "https_target_group_ports", "description": "Port(s) of the https target group(s)", "default": "[\n  443\n]"}, {"name": "https_target_group_deregistration_delay", "description": "Deregistration delay for the https target group(s)", "default": "300"}, {"name": "https_health_check_interval", "description": "Set HTTPS health check interval", "default": "30"}, {"name": "https_health_check_path", "description": "Set HTTPS health check path", "default": "\"/\""}, {"name": "https_health_check_port", "description": "Set HTTPS health check port", "default": "\"traffic-port\""}, {"name": "https_health_check_protocol", "description": "Set HTTPS health check protocol", "default": "\"HTTPS\""}, {"name": "https_health_check_timeout", "description": "Set HTTPS health check timeout", "default": "5"}, {"name": "https_health_check_healthy_threshold", "description": "Set HTTPS health check healthy threshold", "default": "3"}, {"name": "https_health_check_unhealthy_threshold", "description": "Set HTTPS health check unhealthy threshold", "default": "3"}, {"name": "https_health_check_matcher", "description": "Set HTTPS health check matcher", "default": "200"}, {"name": "https_target_group_stickiness_enabled", "description": "Turn stickiness on/off for the https target group(s)", "default": "false"}, {"name": "https_target_group_stickiness_cookie_duration", "description": "Cookie Duration for stickiness of the https target group(s)", "default": "8640"}, {"name": "lb_internal", "description": "Define if the loadbalancer should be internal or not", "default": "true"}, {"name": "lb_name", "description": "Name of the loadbalancer", "default": "\"loadbalancer\""}, {"name": "lb_public_subnet_ids", "description": "The Public Subnet ID(s) which should be attached to the loadbalancer", "default": "[]"}, {"name": "lb_private_subnet_ids", "description": "The Private Subnet ID(s) which should be attached to the loadbalancer", "default": "[]"}, {"name": "lb_security_group_ids", "description": "Additional Security Group ID(s) which should be attached to the loadbalancer", "default": "[]"}, {"name": "lb_source_traffic_name", "description": "Name of source traffic for the loadbalancer within the HTTP and HTTPS security group. E.g. Rule-allow-${var.lb_source_traffic_name}-in-HTTP", "default": "\"\""}, {"name": "lb_sg_http_name", "description": "Name of the HTTP security group", "default": "\"\""}, {"name": "lb_sg_https_name", "description": "Name of the HTTP security group", "default": "\"\""}, {"name": "rule_allow_lb_http_listener_traffic_in_cidr_blocks", "description": "CIDR blocks loadbalancer http listener source traffic", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "rule_allow_lb_https_listener_traffic_in_cidr_blocks", "description": "CIDR blocks loadbalancer https listener source traffic", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "lb_idle_timeout", "description": "Idle timeout for the loadbalancer.", "default": "60"}, {"name": "lb_enable_http2", "description": "Define is http2 is enabled", "default": "true"}, {"name": "lb_enable_deletion_protection", "description": "Enable deletion protection", "default": "false"}, {"name": "lb_http_listener", "description": "If true add a HTTP listener", "default": "true"}, {"name": "lb_https_listener", "description": "If true add a HTTPS listener", "default": "false"}, {"name": "lb_http_listener_port", "description": "HTTP listener port of the loadbalancer", "default": "80"}, {"name": "lb_https_listener_port", "description": "HTTPS listener port of the loadbalancer", "default": "443"}, {"name": "http_host_headers", "description": "Http ost headers for load balancer listener rules", "default": "[]"}, {"name": "https_host_headers", "description": "Https ost headers for load balancer listener rules", "default": "[]"}, {"name": "certificate_arn", "description": "Certificate ARN for the HTTPS listener", "default": "\"\""}, {"name": "target_id", "description": "Instance ID for the target group", "default": "\"\""}]}, "techjacker/lambda-api-gateway/aws": {"name": "lambda-api-gateway", "url": "https://registry.terraform.io/modules/techjacker/lambda-api-gateway/aws", "provider": "aws", "downloads": 0, "description": "Terraform module which deploys a serverless HTTP endpoint backed by AWS Lambda & API Gateway", "source": "techjacker/lambda-api-gateway/aws", "args": [{"name": "project", "description": "Project name for tags and resource naming", "default": ""}, {"name": "owner", "description": "Contact person responsible for the resource", "default": ""}, {"name": "costcenter", "description": "Cost Center tag", "default": ""}, {"name": "service", "description": "Service name", "default": ""}, {"name": "vpc_cidr", "description": "VPC CIDR", "default": ""}, {"name": "igw_cidr", "description": "VPC Internet Gateway CIDR", "default": ""}, {"name": "public_subnets_cidr", "description": "Public Subnets CIDR", "default": ""}, {"name": "private_subnets_cidr", "description": "Private Subnets CIDR", "default": ""}, {"name": "nat_cidr", "description": "VPC NAT Gateway CIDR", "default": ""}, {"name": "azs", "description": "VPC Availability Zones", "default": ""}, {"name": "lambda_runtime", "description": "Lambda Function runtime", "default": ""}, {"name": "lambda_zip_path", "description": "Lambda Function Zipfile local path for S3 Upload", "default": ""}, {"name": "lambda_function_name", "description": "Lambda Function Name", "default": "\"HttpServer\""}, {"name": "lambda_handler", "description": "Lambda Function Handler", "default": ""}, {"name": "region", "description": "Region in which to deploy the API", "default": ""}, {"name": "account_id", "description": "Account ID needed to construct ARN to allow API Gateway to invoke lambda function", "default": ""}]}, "sbogacz/website-automation-user/aws": {"name": "website-automation-user", "url": "https://registry.terraform.io/modules/sbogacz/website-automation-user/aws", "provider": "aws", "downloads": 0, "description": "A terraform module to create the necessary IAM resources for an automation user that will be updating S3 and CloudFront resources", "source": "sbogacz/website-automation-user/aws", "args": [{"name": "domain", "description": "the domain name of the website that the automation user will be maintaining. This is only to add detail to the resources", "default": ""}, {"name": "bucket_arns", "description": "a list of the S3 bucket ARNs that you'd like the automation user to have access to", "default": ""}]}, "aliyun/concourse/alicloud": {"name": "concourse", "url": "https://registry.terraform.io/modules/aliyun/concourse/alicloud", "provider": "alicloud", "downloads": 0, "description": "Terraform module which deploys concourse application in a swarm cluster on Alibaba Cloud.", "source": "aliyun/concourse/alicloud", "args": [{"name": "alicloud_access_key", "description": "The Alicloud Access Key ID to launch resources.", "default": ""}, {"name": "alicloud_secret_key", "description": "The Alicloud Access Secret Key to launch resources.", "default": ""}, {"name": "region", "description": "The region to launch resources.", "default": "\"us-west-1\""}, {"name": "availability_zone", "description": "The available zone to launch vswitch and cluster.", "default": "\"\""}, {"name": "resource_group_name", "description": "", "default": "\"tf-module-concourse\""}, {"name": "image_name_regex", "description": "The ECS image's name regex used to fetch specified image.", "default": "\"^ubuntu_14.*_64\""}, {"name": "cpu_core_count", "description": "CPU core count is used to fetch instance types.", "default": "1"}, {"name": "memory_size", "description": "Memory size used to fetch instance types.", "default": "2"}, {"name": "vpc_id", "description": "A existing vpc id used to create vswitch and other resources.", "default": "\"\""}, {"name": "vpc_name", "description": "The vpc name used to create a new vpc when vpc_id is not set. Default to variable `resource_group_name`", "default": "\"\""}, {"name": "vpc_cidr", "description": "The cidr block used to launch a new vpc.", "default": "\"10.1.0.0/21\""}, {"name": "vswitch_id", "description": "A existing vswitch id used to create swarm cluster.", "default": "\"\""}, {"name": "vswitch_name", "description": "The vswitch name prefix used to create a new vswitch when vswitch_id is not set. Default to variable `resource_group_name`", "default": "\"\""}, {"name": "vswitch_cidr", "description": "The cidr block used to create a new vswitch when vswitch_id is not set.", "default": "\"10.1.2.0/24\""}, {"name": "image_id", "description": "The image id used to launch cluster instances. Default from images datasource.", "default": "\"\""}, {"name": "instance_type", "description": "The instance type used to launch cluster instances. Default from instance typs datasource.", "default": "\"\""}, {"name": "data_disk_category", "description": "The data disk category used to launch cluster instances data disk.", "default": "\"cloud_efficiency\""}, {"name": "data_disk_size", "description": "The data disk size used to launch cluster instances data disk.", "default": "\"40\""}, {"name": "cluster_name", "description": "The cluster name. Default to variable `resource_group_name`", "default": "\"\""}, {"name": "ecs_password", "description": "The password of cluster instance.", "default": "\"Abc12345\""}, {"name": "node_number", "description": "The number of launching cluster node.", "default": "1"}, {"name": "cluster_cidr", "description": "The cidr block of cluster. It cannot conflict with VPC or Vswitch cidr block.", "default": "\"172.20.0.0/16\""}, {"name": "app_name", "description": "The app resource name. Default to variable `resource_group_name`", "default": "\"\""}, {"name": "app_version", "description": "The app resource version.", "default": "\"1.0\""}, {"name": "latest_image", "description": "Whether use the latest image while each update.", "default": "true"}, {"name": "blue_green", "description": "Whether use blue-green release while each update.", "default": "true"}, {"name": "confirm_blue_green", "description": "Confirm a application release which in blue_green.", "default": "true"}]}, "aliyun/classic-load-balance/alicloud": {"name": "classic-load-balance", "url": "https://registry.terraform.io/modules/aliyun/classic-load-balance/alicloud", "provider": "alicloud", "downloads": 0, "description": "Terraform module which creates classic load balance application architecture on Alibaba Cloud.", "source": "aliyun/classic-load-balance/alicloud", "args": [{"name": "alicloud_access_key", "description": "The Alicloud Access Key ID to launch resources.", "default": ""}, {"name": "alicloud_secret_key", "description": "The Alicloud Access Secret Key to launch resources.", "default": ""}, {"name": "region", "description": "The region to launch resources.", "default": "\"cn-beijing\""}, {"name": "availability_zone", "description": "The available zone to launch ecs instance and other resources.", "default": "\"\""}, {"name": "number_format", "description": "The number format used to output.", "default": "\"%02d\""}, {"name": "resource_group_name", "description": "", "default": "\"tf-module-classic-load-balance\""}, {"name": "image_name_regex", "description": "The ECS image's name regex used to fetch specified image.", "default": "\"^ubuntu_14.*_64\""}, {"name": "cpu_core_count", "description": "CPU core count is used to fetch instance types.", "default": "1"}, {"name": "memory_size", "description": "Memory size used to fetch instance types.", "default": "2"}, {"name": "vpc_name", "description": "The vpc name used to create a new vpc when 'vpc_id' is not specified. Default to variable `resource_group_name`", "default": "\"\""}, {"name": "vpc_id", "description": "A existing vpc id used to create several vswitches and other resources.", "default": "\"\""}, {"name": "vpc_cidr", "description": "The cidr block used to launch a new vpc when 'vpc_id' is not specified.", "default": "\"10.1.0.0/21\""}, {"name": "vswitch_name_prefix", "description": "The vswitch name prefix used to create several new vswitches. Default to variable `resource_group_name`", "default": "\"\""}, {"name": "vswitch_ids", "description": "List existing vswitches id used to create ECS and RDS instance.", "default": "[]"}, {"name": "vswitch_cidrs", "description": "List of cidr blocks used to create several new vswitches when variable `vswitch_ids` is not specified.", "default": "[\n  \"10.1.2.0/24\",\n  \"10.1.3.0/24\"\n]"}, {"name": "group_name", "description": "The security group name. Default to variable `resource_group_name`.", "default": "\"\""}, {"name": "image_id", "description": "The image id used to launch one or more ecs instances. Default from images datasource.", "default": "\"\""}, {"name": "instance_type", "description": "The instance type used to launch one or more ecs instances. Default from instance typs datasource.", "default": "\"\""}, {"name": "system_category", "description": "The system disk category used to launch one or more ecs instances.", "default": "\"cloud_efficiency\""}, {"name": "system_size", "description": "The system disk size used to launch one or more ecs instances.", "default": "\"40\""}, {"name": "web_instance_name", "description": "The instance name used to mark web instances.", "default": "\"tf-web-tier\""}, {"name": "web_host_name", "description": "The instance host name used to configure web instances.", "default": "\"tf-web-tier\""}, {"name": "ecs_password", "description": "The password of instance.", "default": "\"Abc12345\""}, {"name": "internet_charge_type", "description": "The internet charge type of instance. Choices are 'PayByTraffic' and 'PayByBandwidth'.", "default": "\"PayByTraffic\""}, {"name": "internet_max_bandwidth_out", "description": "The maximum internet out bandwidth of instance.", "default": "0"}, {"name": "instance_charge_type", "description": "The charge type of instance. Choices are 'PostPaid' and 'PrePaid'.", "default": "\"PostPaid\""}, {"name": "period", "description": "The period of instance when instance charge type is 'PrePaid'.", "default": "1"}, {"name": "period_unit", "description": "The period unit of instance when instance charge type is 'PrePaid'.", "default": "\"Month\""}, {"name": "instance_tags", "description": "Used to mark specified ecs instance.", "default": "{\n  \"created_by\": \"Terraform\",\n  \"created_from\": \"module-tf-alicloud-ecs-instance\"\n}"}, {"name": "number_of_web_instances", "description": "The number of launching web instances one time.", "default": "2"}, {"name": "app_instance_name", "description": "The instance name used to mark app instances.", "default": "\"tf-app-tier\""}, {"name": "app_host_name", "description": "The instance host name used to configure app instances.", "default": "\"tf-app-tier\""}, {"name": "number_of_app_instances", "description": "The number of launching app instances one time.", "default": "2"}, {"name": "number_of_rds_instances", "description": "The number of launching rds instances one time.", "default": "2"}, {"name": "rds_name_prefix", "description": "The rds instance name prefix.", "default": "\"tf_rds\""}, {"name": "engine", "description": "The rds instance engine.", "default": "\"MySQL\""}, {"name": "engine_version", "description": "The rds instance engine version.", "default": "\"5.6\""}, {"name": "db_instance_type", "description": "The rds instance type.", "default": "\"rds.mysql.t1.small\""}, {"name": "storage", "description": "The rds instance storage.", "default": "\"10\""}, {"name": "rds_account_name_prefix", "description": "The rds account name prefix used to create two new account in the RDS instance.", "default": "\"tf_account_\""}, {"name": "rds_account_password", "description": "The rds account password.", "default": "\"Abc12345\""}, {"name": "rds_database_name_prefix", "description": "The rds database name prefix used to create two new database in the RDS instance.", "default": "\"tf_db_\""}, {"name": "slb_intranet_name", "description": "The SLB intranet instance name used to create a new Intraner SLB instance. Default to `resource_group_name`", "default": "\"\""}, {"name": "slb_internet_name", "description": "The SLB internet instance name used to create a new Internet SLB instance. Default to `resource_group_name`", "default": "\"\""}, {"name": "slb_max_bandwidth", "description": "The maximum internet out bandwidth of slb instance.", "default": "10"}, {"name": "bucket_name", "description": "The OSS bucket name. Default to `resource_group_name`", "default": "\"\""}, {"name": "bucket_acl", "description": "The OSS bucket ACL.", "default": "\"private\""}]}, "devops-workflow/team-members/pagerduty": {"name": "team-members", "url": "https://registry.terraform.io/modules/devops-workflow/team-members/pagerduty", "provider": "pagerduty", "downloads": 0, "description": "Terraform module to manage Pagerduty team membership", "source": "devops-workflow/team-members/pagerduty", "args": [{"name": "enabled", "description": "Set to false to prevent the module from creating anything", "default": "true"}, {"name": "member_emails", "description": "List of email addresses of members to manage in team", "default": ""}, {"name": "team_id", "description": "ID of the team to manage members in", "default": ""}]}, "cloudposse/iam-chamber-user/aws": {"name": "iam-chamber-user", "url": "https://registry.terraform.io/modules/cloudposse/iam-chamber-user/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision a basic IAM chamber user with access to SSM parameters and KMS key to decrypt secrets, suitable for CI/CD systems (e.g. TravisCI, CircleCI, CodeFresh) or systems which are external to AWS that cannot leverage AWS IAM Instance Profiles", "source": "cloudposse/iam-chamber-user/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Application or solution name (e.g. `app`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "kms_key_arn", "description": "ARN of the KMS key which will decrypt secret strings", "default": ""}, {"name": "ssm_actions", "description": "Actions to allow in the policy", "default": "[\n  \"ssm:GetParametersByPath\",\n  \"ssm:GetParameters\"\n]"}, {"name": "ssm_resources", "description": "Resources to apply the actions specified in the policy", "default": "[\n  \"*\"\n]"}, {"name": "force_destroy", "description": "Destroy even if it has non-Terraform-managed IAM access keys, login profiles or MFA devices", "default": "\"false\""}, {"name": "path", "description": "Path in which to create the user", "default": "\"/\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}]}, "cloudposse/ssh-key-pair/tls": {"name": "ssh-key-pair", "url": "https://registry.terraform.io/modules/cloudposse/ssh-key-pair/tls", "provider": "tls", "downloads": 0, "description": "Terraform module for generating an SSH public/private key file.", "source": "cloudposse/ssh-key-pair/tls", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Application or solution name (e.g. `app`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "ssh_public_key_path", "description": "Path to SSH public key directory (e.g. `/secrets`)", "default": ""}, {"name": "ssh_key_algorithm", "description": "SSH key algorithm", "default": "\"RSA\""}, {"name": "private_key_extension", "description": "Private key extension", "default": "\"\""}, {"name": "public_key_extension", "description": "Public key extension", "default": "\".pub\""}, {"name": "chmod_command", "description": "Template of the command executed on the private key file", "default": "\"chmod 600 %v\""}]}, "cloudposse/iam-s3-user/aws": {"name": "iam-s3-user", "url": "https://registry.terraform.io/modules/cloudposse/iam-s3-user/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision a basic IAM user with permissions to access S3 resources, e.g. to give the user read/write/delete access to the objects in an S3 bucket", "source": "cloudposse/iam-s3-user/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "name", "description": "Application or solution name (e.g. `app`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "s3_actions", "description": "Actions to allow in the policy", "default": "[\n  \"s3:GetObject\"\n]"}, {"name": "s3_resources", "description": "S3 resources to apply the actions specified in the policy", "default": ""}, {"name": "force_destroy", "description": "Destroy even if it has non-Terraform-managed IAM access keys, login profiles or MFA devices", "default": "\"false\""}, {"name": "path", "description": "Path in which to create the user", "default": "\"/\""}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}]}, "jonbrouse/module/sample": {"name": "module", "url": "https://registry.terraform.io/modules/jonbrouse/module/sample", "provider": "sample", "downloads": 0, "description": "Test module", "source": "jonbrouse/module/sample", "args": [{"name": "aws_account", "description": "The name of the AWS account in which the VPC is being created", "default": ""}, {"name": "aws_region", "description": "The name of the AWS region in which the VPC will be created", "default": ""}, {"name": "aws_region_shortnames", "description": "", "default": "{\n  \"ap-northeast-1\": \"apne1\",\n  \"ap-northeast-2\": \"apne2\",\n  \"ap-south-1\": \"aps1\",\n  \"ap-southeast-1\": \"apse1\",\n  \"ap-southeast-2\": \"apse2\",\n  \"ca-central-1\": \"cac1\",\n  \"eu-central-1\": \"euc1\",\n  \"eu-west-1\": \"euw1\",\n  \"eu-west-2\": \"euw2\",\n  \"sa-east-1\": \"sae1\",\n  \"us-east-1\": \"use1\",\n  \"us-east-2\": \"use2\",\n  \"us-west-1\": \"usw1\",\n  \"us-west-2\": \"usw2\"\n}"}, {"name": "vpc_cidr", "description": "Define the VPC CIDR block", "default": ""}, {"name": "vpc_name", "description": "The desired name of the VPC being created", "default": ""}, {"name": "availability_zones", "description": "The AWS availability zones in which subnets will be created", "default": "[]"}, {"name": "enable_dns_hostnames", "description": "True to enable DNS hostnames in the VPC", "default": "true"}, {"name": "environment_name", "description": "Name of the enviornment the VPC belongs to", "default": ""}, {"name": "enable_dns_support", "description": "True to enable private DNS within the VPC", "default": "true"}, {"name": "map_public_ip_on_launch", "description": "True to auto-assign a public IP on launch", "default": "true"}, {"name": "private_propagating_vgws", "description": "A list of VGWs the private route table should propagate.", "default": "[]"}, {"name": "private_subnets", "description": "", "default": "[]"}, {"name": "public_propagating_vgws", "description": "A list of VGWs the public route table should propagate.", "default": "[]"}, {"name": "public_subnets", "description": "", "default": "[]"}]}, "riboseinc/iam-authenticating-group/aws": {"name": "iam-authenticating-group", "url": "https://registry.terraform.io/modules/riboseinc/iam-authenticating-group/aws", "provider": "aws", "downloads": 0, "description": "Dynamically manage IAM group membership through an authenticated HTTPS endpoint", "source": "riboseinc/iam-authenticating-group/aws", "args": [{"name": "time_to_expire", "description": "Time to expiry for every rule (in seconds)", "default": "600"}, {"name": "log_level", "description": "Set level of Cloud Watch Log to INFO or DEBUG", "default": "\"INFO\""}, {"name": "description", "description": "Description of this API", "default": "\"Dynamically Managing IAM Groups API\""}, {"name": "name", "description": "Creates a unique name beginning with the specified prefix, useful for searching later", "default": "\"terraform-aws-authenticating-iam\""}, {"name": "deployment_stage", "description": "Api deployment stages, ex: staging, production...", "default": "\"dev\""}, {"name": "iam_groups", "description": "Where to add the rules to", "default": ""}]}, "cloudposse/label/terraform": {"name": "label", "url": "https://registry.terraform.io/modules/cloudposse/label/terraform", "provider": "terraform", "downloads": 0, "description": "Terraform Module to define a consistent naming convention by (namespace, stage, name, [attributes])", "source": "cloudposse/label/terraform", "args": [{"name": "namespace", "description": "Namespace, which could be your organization name, e.g. `cp` or `cloudposse`", "default": ""}, {"name": "stage", "description": "Stage, e.g. `prod`, `staging`, `dev`, or `test`", "default": ""}, {"name": "name", "description": "Solution name, e.g. `app`", "default": ""}, {"name": "enabled", "description": "Set to false to prevent the module from creating any resources", "default": "\"true\""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `name`, `stage` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes, e.g. `1`", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. `map(`BusinessUnit`,`XYZ`)", "default": "{}"}]}, "traveloka/bake-ami/aws": {"name": "bake-ami", "url": "https://registry.terraform.io/modules/traveloka/bake-ami/aws", "provider": "aws", "downloads": 0, "description": "A terraform module which provisions a CodePipeline + CodeBuild that will be use to bake application AMIs", "source": "traveloka/bake-ami/aws", "args": [{"name": "buildspec", "description": "the buildspec for the CodeBuild project", "default": "\"version: 0.2\\nenv:\\n  variables:\\n    USER: \\\"ubuntu\\\"\\n    PACKER_NO_COLOR: \\\"true\\\"\\n    APP_TEMPLATE_SG_ID: \\\"$${template-instance-sg}\\\"\\n    APP_S3_PREFIX: \\\"s3://$${ami-manifest-bucket}/$${ami-baking-pipeline-name}\\\"\\n    APP_TEMPLATE_INSTANCE_PROFILE: \\\"$${template-instance-profile}\\\"\\n    APP_TEMPLATE_INSTANCE_VPC_ID: \\\"$${vpc-id}\\\"\\n    APP_TEMPLATE_INSTANCE_SUBNET_ID: \\\"$${subnet-id}\\\"\\n    STACK_AMI_OWNERS: \\\"$${base-ami-owners}\\\"\\n    STACK_AMI_NAME_FILTER: \\\"tvlk/ubuntu/tsi/java/hvm/x86_64/*\\\"\\n    PACKER_VARIABLES_FILE: \\\"packer_variables.json\\\"\\nphases:\\n  pre_build:\\n    commands:\\n      - ansible-galaxy install -r requirements.yml\\n      - packer validate -var-file=$$$${PACKER_VARIABLES_FILE} /root/aws-ebs-traveloka-ansible.json\\n  build:\\n    commands:\\n      - packer build -var-file=$$$${PACKER_VARIABLES_FILE} /root/aws-ebs-traveloka-ansible.json\\n  post_build:\\n    commands:\\n      - jq \\\".builds[0].artifact_id\\\" packer-manifest.json | grep -oE \\\"ami-[a-f0-9]+\\\" \\u003e instance-ami-id.tfvars\\n      - aws s3 cp . s3://$${ami-manifest-bucket}/$(cat instance-ami-id.tfvars)/ --recursive\\ncache:\\n  paths:\\n    - /root/.ansible/roles/**/*\\n\""}, {"name": "playbook_bucket", "description": "the S3 bucket that contains the AMI baking playbook", "default": ""}, {"name": "vpc_id", "description": "the id of the VPC where AMI baking instances will reside on", "default": ""}, {"name": "bake_codebuild_compute_type", "description": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-compute-types.html", "default": "\"BUILD_GENERAL1_SMALL\""}, {"name": "bake_codebuild_environment_type", "description": "https://docs.aws.amazon.com/codebuild/latest/userguide/create-project.html#create-project-cli", "default": "\"LINUX_CONTAINER\""}, {"name": "service_name", "description": "the name of the service", "default": ""}, {"name": "base_ami_owners", "description": "the owners (AWS account IDs) of the base AMIs that instances will be run from", "default": ""}, {"name": "additional_codebuild_permission", "description": "Additional policies (in JSON) to be given to the codebuild IAM Role", "default": "[]"}, {"name": "ami_manifest_bucket", "description": "the S3 bucket to which CodeBuild will store the resulting AMI's artifacts", "default": ""}, {"name": "binary_key", "description": "the S3 key of the Application binary that will be used as the pipeline input", "default": "\"application.tgz\""}, {"name": "pipeline_artifact_bucket", "description": "An S3 bucket to be used as CodePipeline's artifact bucket", "default": ""}, {"name": "product_domain", "description": "the owner of this pipeline (e.g. team). This is used mostly for adding tags to resources", "default": ""}, {"name": "additional_template_instance_permission", "description": "Additional policies (in JSON) to be given to the template instance's IAM Role", "default": "[]"}, {"name": "playbook_key", "description": "the S3 key of the AMI baking playbook that will be used as the pipeline input. CodeBuild doesn't seem to support tar files", "default": "\"playbook.zip\""}, {"name": "poll_source_changes", "description": "Set whether the created pipeline should poll the source for change and triggers the pipeline", "default": "\"false\""}, {"name": "binary_bucket", "description": "the S3 bucket that contains the application binary", "default": ""}, {"name": "subnet_id", "description": "the id of the subnet where AMI baking instances will reside on", "default": ""}, {"name": "bake_codebuild_image", "description": "https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-available.html", "default": "\"traveloka/ansible-packer-codebuild-builder:0.1.7\""}]}, "integr8/devops-vpc/aws": {"name": "devops-vpc", "url": "https://registry.terraform.io/modules/integr8/devops-vpc/aws", "provider": "aws", "downloads": 0, "description": "", "source": "integr8/devops-vpc/aws", "args": [{"name": "cidr", "description": "CIDR", "default": "\"10.0.0.0/16\""}, {"name": "subnets", "description": "Subnets mapping", "default": "{\n  \"private\": [\n    \"10.0.3.0/24\",\n    \"10.0.4.0/24\"\n  ],\n  \"public\": [\n    \"10.0.1.0/24\",\n    \"10.0.2.0/24\"\n  ]\n}"}]}, "integr8/devops-selenium/aws": {"name": "devops-selenium", "url": "https://registry.terraform.io/modules/integr8/devops-selenium/aws", "provider": "aws", "downloads": 0, "description": "", "source": "integr8/devops-selenium/aws", "args": [{"name": "availability-zones", "description": "", "default": ""}, {"name": "vpc-id", "description": "", "default": ""}, {"name": "subnets", "description": "", "default": ""}, {"name": "cluster-name", "description": "", "default": "\"selenium-cluster\""}, {"name": "bucket-name-prefix", "description": "", "default": "\"selenium-config-\""}, {"name": "ami", "description": "", "default": "\"ami-aff65ad2\""}, {"name": "instance-type", "description": "", "default": "\"m4.xlarge\""}]}, "integr8/devops-nexus/aws": {"name": "devops-nexus", "url": "https://registry.terraform.io/modules/integr8/devops-nexus/aws", "provider": "aws", "downloads": 0, "description": "", "source": "integr8/devops-nexus/aws", "args": [{"name": "instance-type", "description": "", "default": "\"t2.medium\""}, {"name": "availability-zones", "description": "", "default": ""}, {"name": "vpc-id", "description": "", "default": ""}, {"name": "subnets", "description": "", "default": ""}, {"name": "cluster-name", "description": "", "default": "\"nexus-cluster\""}, {"name": "bucket-name-prefix", "description": "", "default": "\"nexus-config-\""}, {"name": "ami", "description": "", "default": "\"ami-aff65ad2\""}]}, "cloudposse/ssm-parameter-store/aws": {"name": "ssm-parameter-store", "url": "https://registry.terraform.io/modules/cloudposse/ssm-parameter-store/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to populate AWS Systems Manager (SSM) Parameter Store with values from Terraform. Works great with Chamber.", "source": "cloudposse/ssm-parameter-store/aws", "args": [{"name": "parameter_read", "description": "List of parameters to read from SSM. These must already exist otherwise an error is returned. Can be used with `parameter_write` as long as the parameters are different.", "default": "[]"}, {"name": "parameter_write", "description": "  List of maps with the Parameter values in this format.\n  Parameter Write Format Example\n\n  [{\n    name = \"/cp/prod/app/database/master_password\" // Required\n    type = \"SecureString\" // Required - Valid types are String, StringList and SecureString\n    value = \"password1\" // Required\n    description = \"Production database master password\" // Optional\n    overwrite = false // Optional - Force Overwrite of value if true. \n  }]\n", "default": "[]"}, {"name": "tags", "description": "Map containing tags that will be added to the parameters", "default": "{}"}, {"name": "kms_arn", "description": "The ARN of a KMS key used to encrypt and decrypt SecretString values", "default": "\"\""}, {"name": "enabled", "description": "Set to `false` to prevent the module from creating and accessing any resources", "default": "\"true\""}, {"name": "split_delimiter", "description": "A delimiter for splitting and joining lists together for normalising the output", "default": "\"~^~\""}]}, "devops-workflow/budgets/aws": {"name": "budgets", "url": "https://registry.terraform.io/modules/devops-workflow/budgets/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for configuring AWS budgets", "source": "devops-workflow/budgets/aws", "args": [{"name": "budget_name", "description": "Budget name (when managing a single budget)", "default": "\"\""}, {"name": "budget_type", "description": "Type of budget", "default": "\"COST\""}, {"name": "limit_amount", "description": "Budget limit amount", "default": "\"100\""}, {"name": "tag_key", "description": "Tag key for cost filter by tag (TagKeyValue)", "default": "\"Stack\""}, {"name": "tag_value", "description": "Tag value for cost filter by tag (TagKeyValue)", "default": "\"\""}, {"name": "email", "description": "Email address to send budget alerts to. Used by account budgets.", "default": "\"\""}, {"name": "budget_name_prefix", "description": "Text to prefix budget names with", "default": "\"\""}, {"name": "budgets", "description": "List of account budget maps. Each map contains: name (name of budget), account (AWS linked account ID), and limit (budget limit)", "default": "[]"}, {"name": "cost_filter_type", "description": "Cost filter type (when managing a single budget)", "default": "\"TagKeyValue\""}, {"name": "limit_unit", "description": "Budget units", "default": "\"USD\""}, {"name": "time_unit", "description": "Budget time period", "default": "\"MONTHLY\""}, {"name": "emails", "description": "List of email addresses to send budget alerts to. Maximum of 10. Used by single budgets", "default": "[]"}]}, "FredHutch/waf-alb/aws": {"name": "waf-alb", "url": "https://registry.terraform.io/modules/FredHutch/waf-alb/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for AWS WAF ALB", "source": "FredHutch/waf-alb/aws", "args": []}, "azavea/ecr-repository/aws": {"name": "ecr-repository", "url": "https://registry.terraform.io/modules/azavea/ecr-repository/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to create an Amazon Web Services (AWS) Elastic Container Registry (ECR) repository.", "source": "azavea/ecr-repository/aws", "args": [{"name": "repository_name", "description": "", "default": ""}, {"name": "attach_lifecycle_policy", "description": "", "default": "false"}, {"name": "lifecycle_policy", "description": "", "default": "\"\""}]}, "squidfunk/github-ci/aws": {"name": "github-ci", "url": "https://registry.terraform.io/modules/squidfunk/github-ci/aws", "provider": "aws", "downloads": 0, "description": "Serverless CI for GitHub using AWS CodeBuild with PR and status support", "source": "squidfunk/github-ci/aws", "args": [{"name": "github_reporter", "description": "GitHub commit status reporter", "default": "\"AWS CodeBuild\""}, {"name": "codebuild_project", "description": "CodeBuild project name (won't create default project)", "default": "\"\""}, {"name": "codebuild_buildspec", "description": "Build specification file location", "default": "\"\""}, {"name": "codebuild_privileged_mode", "description": "Enables running the Docker daemon inside a Docker container", "default": "\"false\""}, {"name": "codebuild_bucket", "description": "S3 bucket to store status badge and artifacts", "default": "\"\""}, {"name": "namespace", "description": "AWS resource namespace/prefix", "default": ""}, {"name": "github_repository", "description": "GitHub repository name", "default": ""}, {"name": "github_oauth_token", "description": "GitHub OAuth token for repository access", "default": ""}, {"name": "github_owner", "description": "GitHub repository owner", "default": ""}, {"name": "codebuild_compute_type", "description": "Compute resources used by the build", "default": "\"BUILD_GENERAL1_SMALL\""}, {"name": "codebuild_image", "description": "Base image for provisioning", "default": "\"aws/codebuild/ubuntu-base:14.04\""}]}, "aliyun/kubernetes/alicloud": {"name": "kubernetes", "url": "https://registry.terraform.io/modules/aliyun/kubernetes/alicloud", "provider": "alicloud", "downloads": 0, "description": "Terraform module which creates kubernetes(es) on Alibaba Cloud.", "source": "aliyun/kubernetes/alicloud", "args": [{"name": "cpu_core_count", "description": "CPU core count is used to fetch instance types.", "default": "1"}, {"name": "vswitch_ids", "description": "List of existing vswitch id.", "default": "[]"}, {"name": "k8s_pod_cidr", "description": "The kubernetes pod cidr block. It cannot be equals to vpc's or vswitch's and cannot be in them.", "default": "\"172.20.0.0/16\""}, {"name": "master_disk_category", "description": "The system disk category used to launch one or more master nodes.", "default": "\"cloud_efficiency\""}, {"name": "k8s_number", "description": "The number of kubernetes cluster.", "default": "1"}, {"name": "master_instance_type", "description": "The ecs instance type used to launch master nodes. Default from instance typs datasource.", "default": "\"\""}, {"name": "worker_disk_category", "description": "The system disk category used to launch one or more worker nodes.", "default": "\"cloud_efficiency\""}, {"name": "region", "description": "The region to launch resources.", "default": "\"cn-hangzhou\""}, {"name": "memory_size", "description": "Memory size used to fetch instance types.", "default": "2"}, {"name": "vpc_id", "description": "A existing vpc id used to create several vswitches and other resources.", "default": "\"\""}, {"name": "vpc_cidr", "description": "The cidr block used to launch a new vpc when 'vpc_id' is not specified.", "default": "\"10.1.0.0/21\""}, {"name": "master_disk_size", "description": "The system disk size used to launch one or more master nodes.", "default": "\"40\""}, {"name": "alicloud_access_key", "description": "The Alicloud Access Key ID to launch resources.", "default": ""}, {"name": "alicloud_secret_key", "description": "The Alicloud Access Secret Key to launch resources.", "default": ""}, {"name": "k8s_name_prefix", "description": "The name prefix used to create several kubernetes clusters. Default to variable `example_name`", "default": "\"\""}, {"name": "new_nat_gateway", "description": "Whether to create a new nat gateway. In this template, a new nat gateway will create a nat gateway, eip and server snat entries.", "default": "\"true\""}, {"name": "worker_instance_type", "description": "The ecs instance type used to launch worker nodes. Default from instance typs datasource.", "default": "\"\""}, {"name": "k8s_worker_number", "description": "The number of worker nodes in each kubernetes cluster.", "default": "3"}, {"name": "k8s_service_cidr", "description": "The kubernetes service cidr block. It cannot be equals to vpc's or vswitch's or pod's and cannot be in them.", "default": "\"172.21.0.0/20\""}, {"name": "number_format", "description": "The number format used to output.", "default": "\"%02d\""}, {"name": "example_name", "description": "", "default": "\"tf-example-kubernetes\""}, {"name": "worker_disk_size", "description": "The system disk size used to launch one or more worker nodes.", "default": "\"40\""}, {"name": "ecs_password", "description": "The password of instance.", "default": "\"Abc12345\""}, {"name": "availability_zone", "description": "The available zone to launch ecs instance and other resources.", "default": "\"\""}, {"name": "vswitch_name_prefix", "description": "The vswitch name prefix used to create several new vswitches. Default to variable `example_name`", "default": "\"\""}, {"name": "vswitch_cidrs", "description": "List of cidr blocks used to create several new vswitches when 'vswitch_ids' is not specified.", "default": "[\n  \"10.1.2.0/24\"\n]"}, {"name": "vpc_name", "description": "The vpc name used to create a new vpc when 'vpc_id' is not specified. Default to variable `example_name`", "default": "\"\""}]}, "aliyun/kubernetes-wordpress/alicloud": {"name": "kubernetes-wordpress", "url": "https://registry.terraform.io/modules/aliyun/kubernetes-wordpress/alicloud", "provider": "alicloud", "downloads": 0, "description": "Terraform module which deploys Wordpress and MySQL on Alibaba Cloud Kubernetes.", "source": "aliyun/kubernetes-wordpress/alicloud", "args": [{"name": "wordpress_version", "description": "The version of wordpress. Default to 4.7.3.", "default": "\"4.7.3\""}, {"name": "mysql_password", "description": "Please input mysql password.", "default": ""}, {"name": "mysql_version", "description": "The version of mysql which wordpress used. Default to 5.6.", "default": "\"5.6\""}]}, "cloudposse/ecs-container-definition/aws": {"name": "ecs-container-definition", "url": "https://registry.terraform.io/modules/cloudposse/ecs-container-definition/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to generate well-formed JSON documents (container definitions) that are passed to the  aws_ecs_task_definition Terraform resource", "source": "cloudposse/ecs-container-definition/aws", "args": [{"name": "host_port", "description": "The port number on the container instance (host) to reserve for the container_port. If using containers in a task with the awsvpc or host network mode, the hostPort can either be left blank or set to the same value as the containerPort.", "default": "80"}, {"name": "protocol", "description": "The protocol used for the port mapping. Options: tcp or udp.", "default": "\"tcp\""}, {"name": "healthcheck", "description": "A map containing command (string), interval (duration in seconds), retries (1-10, number of times to retry before marking container unhealthy, and startPeriod (0-300, optional grace period to wait, in seconds, before failed healthchecks count toward retries)", "default": "{}"}, {"name": "essential", "description": "Determines whether all other containers in a task are stopped, if this container fails or stops for any reason. Due to how Terraform type casts booleans in json it is required to double quote this value.", "default": "\"true\""}, {"name": "container_memory", "description": "The amount of memory (in MiB) to allow the container to use. This is a hard limit, if the container attempts to exceed the container_memory, the container is killed. This field is optional for Fargate launch type and the total amount of container_memory of all containers in a task will need to be lower than the task memory value.", "default": "256"}, {"name": "container_memory_reservation", "description": "The amount of memory (in MiB) to reserve for the container. If container needs to exceed this threshold, it can do so up to the set container_memory hard limit.", "default": "128"}, {"name": "entrypoint", "description": "The entry point that is passed to the container.", "default": "[\n  \"\"\n]"}, {"name": "readonly_root_filesystem", "description": "Determines whether a container is given read-only access to its root filesystem. Due to how Terraform type casts booleans in json it is required to double quote this value.", "default": "\"false\""}, {"name": "log_options", "description": "The configuration options to send to the log_driver.", "default": "{\n  \"awslogs-group\": \"default\",\n  \"awslogs-region\": \"us-west-2\",\n  \"awslogs-stream-prefix\": \"default\"\n}"}, {"name": "working_directory", "description": "The working directory to run commands inside the container.", "default": "\"\""}, {"name": "environment", "description": "The environment variables to pas to the container. This is a list of maps.", "default": "[]"}, {"name": "log_driver", "description": "The log driver to use for the container. If using Fargate launch type, only supported value is awslogs.", "default": "\"awslogs\""}, {"name": "container_name", "description": "The name of the container. Up to 255 characters ([a-z], [A-Z], [0-9], -, _ allowed).", "default": ""}, {"name": "container_image", "description": "The image used to start the container. Images in the Docker Hub registry available by default.", "default": ""}, {"name": "container_port", "description": "The port number on the container bound to assigned host_port.", "default": "80"}, {"name": "container_cpu", "description": "The number of cpu units to reserve for the container. This is optional for tasks using Fargate launch type and the total amount of container_cpu of all containers in a task will need to be lower than the task-level cpu value.", "default": "256"}, {"name": "command", "description": "The command that is passed to the container.", "default": "[\n  \"\"\n]"}]}, "terraform-aws-modules/ebs-optimized/aws": {"name": "ebs-optimized", "url": "https://registry.terraform.io/modules/terraform-aws-modules/ebs-optimized/aws", "provider": "aws", "downloads": 0, "description": "A terraform module to determine if an instance can be flagged for EBS optimization.", "source": "terraform-aws-modules/ebs-optimized/aws", "args": [{"name": "instance_type", "description": "Instance type to evaluate if EBS optimized is an option.", "default": ""}]}, "squidfunk/api-gateway-enable-cors/aws": {"name": "api-gateway-enable-cors", "url": "https://registry.terraform.io/modules/squidfunk/api-gateway-enable-cors/aws", "provider": "aws", "downloads": 0, "description": "Easily add an OPTIONS method to an API Gateway resource to enable CORS", "source": "squidfunk/api-gateway-enable-cors/aws", "args": [{"name": "api_id", "description": "API identifier", "default": ""}, {"name": "api_resource_id", "description": "API resource identifier", "default": ""}, {"name": "allowed_headers", "description": "Allowed headers", "default": "[\n  \"Content-Type\",\n  \"X-Amz-Date\",\n  \"Authorization\",\n  \"X-Api-Key\",\n  \"X-Amz-Security-Token\"\n]"}, {"name": "allowed_methods", "description": "Allowed methods", "default": "[\n  \"OPTIONS\",\n  \"HEAD\",\n  \"GET\",\n  \"POST\",\n  \"PUT\",\n  \"PATCH\",\n  \"DELETE\"\n]"}, {"name": "allowed_origin", "description": "Allowed origin", "default": "\"*\""}, {"name": "allowed_max_age", "description": "Allowed response caching time", "default": "\"7200\""}]}, "dwp/metric-filter-alarm/aws": {"name": "metric-filter-alarm", "url": "https://registry.terraform.io/modules/dwp/metric-filter-alarm/aws", "provider": "aws", "downloads": 0, "description": "Terraform module that creates AWS CloudWatch metric filters and alarms", "source": "dwp/metric-filter-alarm/aws", "args": [{"name": "statistic", "description": "The statistic to apply to the alarm's associated metric. Either of the following is supported: SampleCount, Average, Sum, Minimum, Maximum", "default": "\"Sum\""}, {"name": "pattern", "description": "A valid CloudWatch Logs filter pattern for extracting metric data out of ingested log events", "default": ""}, {"name": "period", "description": "The period in seconds over which the specified statistic is applied", "default": "\"60\""}, {"name": "threshold", "description": "The value against which the specified statistic is compared", "default": "\"0\""}, {"name": "metric_filter_name", "description": "A name for the metric filter", "default": "\"\""}, {"name": "alarm_action_arns", "description": "The list of actions to execute when this alarm transitions into an ALARM state from any other state. Each action is specified as an Amazon Resource Number (ARN)", "default": "[]"}, {"name": "comparison_operator", "description": "The arithmetic operation to use when comparing the specified Statistic and Threshold. The specified Statistic value is used as the first operand. Either of the following is supported: GreaterThanOrEqualToThreshold, GreaterThanThreshold, LessThanThreshold, LessThanOrEqualToThreshold", "default": "\"GreaterThanThreshold\""}, {"name": "evaluation_periods", "description": "The number of periods over which data is compared to the specified threshold", "default": "\"1\""}, {"name": "log_group_name", "description": "The name of the log group to associate the metric filter with", "default": ""}, {"name": "metric_namespace", "description": "The destination namespace of the CloudWatch metric", "default": ""}, {"name": "alarm_name", "description": "The descriptive name for the alarm. This name must be unique within the user's AWS account", "default": ""}]}, "cloudposse/ecs-alb-service-task/aws": {"name": "ecs-alb-service-task", "url": "https://registry.terraform.io/modules/cloudposse/ecs-alb-service-task/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module which implements an ECS service which exposes a web service via ALB.", "source": "cloudposse/ecs-alb-service-task/aws", "args": [{"name": "deployment_minimum_healthy_percent", "description": "The lower limit (as a percentage of desired_count) of the number of tasks that must remain running and healthy in a service during a deployment.", "default": "100"}, {"name": "alb_target_group_arn", "description": "The ALB target group ARN for the ECS service.", "default": ""}, {"name": "private_subnet_ids", "description": "Private subnet IDs.", "default": ""}, {"name": "desired_count", "description": "The number of instances of the task definition to place and keep running.", "default": "1"}, {"name": "container_name", "description": "The name of the container in task definition to associate with the load balancer.", "default": ""}, {"name": "task_memory", "description": "The amount of memory (in MiB) used by the task. If using Fargate launch type task_memory must match supported cpu value (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size).", "default": "512"}, {"name": "name", "description": "The name of the app to be used in labels.", "default": ""}, {"name": "stage", "description": "Stage to be used in labels.", "default": ""}, {"name": "tags", "description": "Map of key-value pairs to use for tags.", "default": "{}"}, {"name": "ecr_repository_name", "description": "The name of the ECR repository to store images.", "default": ""}, {"name": "family", "description": "The name used for multiple versions of a task definition.", "default": "\"web\""}, {"name": "launch_type", "description": "The launch type on which to run your service. Valid values are EC2 and FARGATE.", "default": "\"FARGATE\""}, {"name": "deployment_maximum_percent", "description": "The upper limit of the number of tasks (as a percentage of desired_count) that can be running in a service during a deployment.", "default": "200"}, {"name": "attributes", "description": "List of attributes to add to label.", "default": "[]"}, {"name": "vpc_id", "description": "The VPC ID where resources are created.", "default": ""}, {"name": "ecs_cluster_arn", "description": "The ARN of the ECS cluster where service will be provisioned.", "default": ""}, {"name": "container_port", "description": "The port on the container to associate with the load balancer.", "default": "80"}, {"name": "security_group_ids", "description": "Security group IDs to allow in Service network_configuration.", "default": ""}, {"name": "network_mode", "description": "The network mode to use for the task. This is required to be awsvpc for FARGATE launch_type.", "default": "\"awsvpc\""}, {"name": "task_cpu", "description": "The number of CPU units used by the task. If using Fargate launch type task_cpu must match supported memory values (https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_size).", "default": "256"}, {"name": "namespace", "description": "The namespace to be used in labels.", "default": ""}, {"name": "delimiter", "description": "The delimiter to be used in labels.", "default": "\"-\""}, {"name": "container_definition_json", "description": "The JSON of the task container definition.", "default": ""}]}, "cloudposse/ecs-codepipeline/aws": {"name": "ecs-codepipeline", "url": "https://registry.terraform.io/modules/cloudposse/ecs-codepipeline/aws", "provider": "aws", "downloads": 0, "description": "Terraform Module for CI/CD with AWS Code Pipeline and Code Build for ECS https://cloudposse.com/", "source": "cloudposse/ecs-codepipeline/aws", "args": [{"name": "buildspec", "description": "Declaration to use for building the project. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/build-spec-ref.html)", "default": "\"\""}, {"name": "delimiter", "description": "Delimiter to be used between `name`, `namespace`, `stage`, etc.", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes (e.g. `policy` or `role`)", "default": "[]"}, {"name": "aws_account_id", "description": "AWS Account ID. Used as CodeBuild ENV variable when building Docker images. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html)", "default": "\"\""}, {"name": "image_tag", "description": "Docker image tag in the ECR repository, e.g. 'latest'. Used as CodeBuild ENV variable when building Docker images. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html)", "default": "\"latest\""}, {"name": "namespace", "description": "Namespace, which could be your organization name, e.g. 'cp' or 'cloudposse'", "default": "\"global\""}, {"name": "build_image", "description": "Docker image for build environment, _e.g._ `aws/codebuild/docker:docker:17.09.0`", "default": "\"aws/codebuild/docker:17.09.0\""}, {"name": "branch", "description": "Branch of the GitHub repository, _e.g._ `master`", "default": ""}, {"name": "privileged_mode", "description": "If set to true, enables running the Docker daemon inside a Docker container on the CodeBuild instance. Used when building Docker images", "default": "\"false\""}, {"name": "name", "description": "Solution name, e.g. 'app' or 'jenkins'", "default": "\"app\""}, {"name": "repo_name", "description": "GitHub repository name of the application to be built and deployed to ECS.", "default": ""}, {"name": "poll_source_changes", "description": "Periodically check the location of your source content and run the pipeline if changes are detected", "default": "\"true\""}, {"name": "image_repo_name", "description": "ECR repository name to store the Docker image built by this module. Used as CodeBuild ENV variable when building Docker images. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html)", "default": "\"UNSET\""}, {"name": "github_oauth_token", "description": "GitHub Oauth Token with permissions to access private repositories", "default": ""}, {"name": "repo_owner", "description": "GitHub Organization or Username.", "default": ""}, {"name": "ecs_cluster_name", "description": "ECS Cluster Name", "default": ""}, {"name": "service_name", "description": "ECS Service Name", "default": ""}, {"name": "build_compute_type", "description": "`CodeBuild` instance size. Possible values are: `BUILD_GENERAL1_SMALL` `BUILD_GENERAL1_MEDIUM` `BUILD_GENERAL1_LARGE`", "default": "\"BUILD_GENERAL1_SMALL\""}, {"name": "tags", "description": "Additional tags (e.g. `map('BusinessUnit', 'XYZ')`", "default": "{}"}, {"name": "aws_region", "description": "AWS Region, e.g. us-east-1. Used as CodeBuild ENV variable when building Docker images. [For more info](http://docs.aws.amazon.com/codebuild/latest/userguide/sample-docker.html)", "default": "\"\""}, {"name": "stage", "description": "Stage, e.g. 'prod', 'staging', 'dev', or 'test'", "default": "\"default\""}, {"name": "enabled", "description": "Enable `CodePipeline` creation", "default": "\"true\""}]}, "mcapuccini/spark/openstack": {"name": "spark", "url": "https://registry.terraform.io/modules/mcapuccini/spark/openstack", "provider": "openstack", "downloads": 0, "description": "Terraform module to deploy Apache Spark.", "source": "mcapuccini/spark/openstack", "args": [{"name": "cluster_prefix", "description": "Prefix for the cluster resources name", "default": "\"spark\""}, {"name": "public_key", "description": "Local path to a SSH public key", "default": ""}, {"name": "spark_docker_image", "description": "Spark Docker image", "default": "\"gettyimages/spark:2.2.1-hadoop-2.7\""}, {"name": "worker_flavor_name", "description": "Flavor name to be used for the worker nodes", "default": ""}, {"name": "workers_count", "description": "Number of workers to deploy", "default": ""}, {"name": "external_net_uuid", "description": "External network UUID", "default": ""}, {"name": "floating_ip_pool", "description": "Name of the floating IP pool (often same as the external network name)", "default": ""}, {"name": "image_name", "description": "Image name to boot the nodes from", "default": ""}, {"name": "master_flavor_name", "description": "Flavor name to be used for the master node", "default": ""}, {"name": "workers_floating_ip", "description": "If true a floating IP will be attached to each worker", "default": "false"}]}, "10thmagnitude/certs/private": {"name": "certs", "url": "https://registry.terraform.io/modules/10thmagnitude/certs/private", "provider": "private", "downloads": 0, "description": "Extracted submodule from Hashicorp/terraform-azurerm-vault", "source": "10thmagnitude/certs/private", "args": [{"name": "private_key_rsa_bits", "description": "The size of the generated RSA key in bits. Should only be used if var.private_key_algorithm is RSA.", "default": "\"2048\""}, {"name": "ca_public_key_file_path", "description": "Write the PEM-encoded CA certificate public key to this path (e.g. /etc/tls/ca.crt.pem).", "default": ""}, {"name": "organization_name", "description": "The name of the organization to associate with the certificates (e.g. Acme Co).", "default": ""}, {"name": "ip_addresses", "description": "List of IP addresses for which the certificate will be valid (e.g. 127.0.0.1).", "default": ""}, {"name": "allowed_uses", "description": "List of keywords from RFC5280 describing a use that is permitted for the issued certificate. For more info and the list of keywords, see https://www.terraform.io/docs/providers/tls/r/self_signed_cert.html#allowed_uses.", "default": "[\n  \"key_encipherment\",\n  \"digital_signature\"\n]"}, {"name": "private_key_algorithm", "description": "The name of the algorithm to use for private keys. Must be one of: RSA or ECDSA.", "default": "\"RSA\""}, {"name": "owner", "description": "The OS user who should be given ownership over the certificate files.", "default": ""}, {"name": "dns_names", "description": "List of DNS names for which the certificate will be valid (e.g. vault.service.consul, foo.example.com).", "default": ""}, {"name": "ca_allowed_uses", "description": "List of keywords from RFC5280 describing a use that is permitted for the CA certificate. For more info and the list of keywords, see https://www.terraform.io/docs/providers/tls/r/self_signed_cert.html#allowed_uses.", "default": "[\n  \"cert_signing\",\n  \"key_encipherment\",\n  \"digital_signature\"\n]"}, {"name": "private_key_ecdsa_curve", "description": "The name of the elliptic curve to use. Should only be used if var.private_key_algorithm is ECDSA. Must be one of P224, P256, P384 or P521.", "default": "\"P256\""}, {"name": "ca_common_name", "description": "The common name to use in the subject of the CA certificate (e.g. acme.co cert).", "default": ""}, {"name": "permissions", "description": "The Unix file permission to assign to the cert files (e.g. 0600).", "default": "\"0600\""}, {"name": "public_key_file_path", "description": "Write the PEM-encoded certificate public key to this path (e.g. /etc/tls/vault.crt.pem).", "default": ""}, {"name": "private_key_file_path", "description": "Write the PEM-encoded certificate private key to this path (e.g. /etc/tls/vault.key.pem).", "default": ""}, {"name": "common_name", "description": "The common name to use in the subject of the certificate (e.g. acme.co cert).", "default": ""}, {"name": "validity_period_hours", "description": "The number of hours after initial issuing that the certificate will become invalid.", "default": ""}]}, "cloudposse/ssm-iam-role/aws": {"name": "ssm-iam-role", "url": "https://registry.terraform.io/modules/cloudposse/ssm-iam-role/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an IAM role with configurable permissions to access SSM Parameter Store", "source": "cloudposse/ssm-iam-role/aws", "args": [{"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}, {"name": "ssm_actions", "description": "SSM actions to allow", "default": "[\n  \"ssm:GetParametersByPath\",\n  \"ssm:GetParameters\"\n]"}, {"name": "max_session_duration", "description": "The maximum session duration (in seconds) for the role. Can have a value from 1 hour to 12 hours", "default": "3600"}, {"name": "assume_role_arns", "description": "List of ARNs to allow assuming the role. Could be AWS services or accounts, Kops nodes, IAM users or groups", "default": ""}, {"name": "ssm_parameters", "description": "List of SSM parameters to apply the actions. A parameter can include a path and a name pattern that you define by using forward slashes, e.g. `kops/secret-*`", "default": ""}, {"name": "name", "description": "Name (e.g. `app` or `chamber`)", "default": ""}, {"name": "attributes", "description": "Additional attributes (e.g. `1`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "region", "description": "AWS Region", "default": ""}, {"name": "account_id", "description": "AWS account ID", "default": ""}, {"name": "kms_key_arn", "description": "ARN of the KMS key which will encrypt/decrypt SSM secret strings", "default": ""}]}, "blinkist/airship-ecs-instance-draining/aws": {"name": "airship-ecs-instance-draining", "url": "https://registry.terraform.io/modules/blinkist/airship-ecs-instance-draining/aws", "provider": "aws", "downloads": 0, "description": "ECS scale-in draining module", "source": "blinkist/airship-ecs-instance-draining/aws", "args": [{"name": "create", "description": "Whether to create everything related", "default": "true"}, {"name": "name", "description": "A preferably short unique identifier for this module", "default": ""}]}, "cloudposse/lb-s3-bucket/aws": {"name": "lb-s3-bucket", "url": "https://registry.terraform.io/modules/cloudposse/lb-s3-bucket/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an S3 bucket with built in IAM policy to allow AWS Load Balancers to ship access logs", "source": "cloudposse/lb-s3-bucket/aws", "args": [{"name": "attributes", "description": "Additional attributes (e.g. `logs`)", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "acl", "description": "Canned ACL to apply to the S3 bucket", "default": "\"log-delivery-write\""}, {"name": "force_destroy", "description": "A boolean that indicates the bucket can be destroyed even if it contains objects. These objects are not recoverable", "default": "\"false\""}, {"name": "prefix", "description": "The S3 bucket prefix for the AWSLogs", "default": "\"\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "region", "description": "AWS Region for S3 bucket", "default": "\"us-east-1\""}, {"name": "name", "description": "Name  (e.g. `app` or `cluster`)", "default": ""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `stage`, `name` and `attributes`", "default": "\"-\""}]}, "cloudposse/alb/aws": {"name": "alb", "url": "https://registry.terraform.io/modules/cloudposse/alb/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision a standard ALB for HTTP/HTTP traffic", "source": "cloudposse/alb/aws", "args": [{"name": "internal", "description": "A boolean flag to determine whether the ALB should be internal", "default": "\"false\""}, {"name": "http_port", "description": "The port for the HTTP listener", "default": "\"80\""}, {"name": "http_enabled", "description": "A boolean flag to enable/disable HTTP listener", "default": "\"true\""}, {"name": "http_ingress_prefix_list_ids", "description": "List of prefix list IDs for allowing access to HTTP ingress security group", "default": "[]"}, {"name": "https_ingress_prefix_list_ids", "description": "List of prefix list IDs for allowing access to HTTPS ingress security group", "default": "[]"}, {"name": "access_logs_enabled", "description": "A boolean flag to enable/disable access_logs", "default": "\"true\""}, {"name": "health_check_path", "description": "The destination for the health check request", "default": "\"/\""}, {"name": "health_check_unhealthy_threshold", "description": "The number of consecutive health check failures required before considering the target unhealthy", "default": "\"2\""}, {"name": "name", "description": "Solution name, e.g. `app`", "default": ""}, {"name": "http_ingress_cidr_blocks", "description": "List of CIDR blocks to allow in HTTP security group", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "http2_enabled", "description": "A boolean flag to enable/disable HTTP/2", "default": "\"true\""}, {"name": "idle_timeout", "description": "The time in seconds that the connection is allowed to be idle", "default": "\"60\""}, {"name": "deletion_protection_enabled", "description": "A boolean flag to enable/disable deletion protection for ALB", "default": "\"false\""}, {"name": "health_check_interval", "description": "The duration in seconds in between health checks", "default": "\"15\""}, {"name": "health_check_matcher", "description": "The HTTP response codes to indicate a healthy check", "default": "\"200-399\""}, {"name": "access_logs_prefix", "description": "The S3 bucket prefix", "default": "\"\""}, {"name": "health_check_timeout", "description": "The amount of time to wait in seconds before failing a health check request", "default": "\"10\""}, {"name": "namespace", "description": "Namespace, which could be your organization name, e.g. `cp` or `cloudposse`", "default": ""}, {"name": "security_group_ids", "description": "A list of additional security group IDs to allow access to ALB", "default": "[]"}, {"name": "https_ingress_cidr_blocks", "description": "List of CIDR blocks to allow in HTTPS security group", "default": "[\n  \"0.0.0.0/0\"\n]"}, {"name": "access_logs_region", "description": "The region for the access_logs S3 bucket", "default": "\"us-east-1\""}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `name`, `stage` and `attributes`", "default": "\"-\""}, {"name": "attributes", "description": "Additional attributes, e.g. `1`", "default": "[]"}, {"name": "tags", "description": "Additional tags (e.g. `map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "vpc_id", "description": "VPC ID to associate with ALB", "default": ""}, {"name": "cross_zone_load_balancing_enabled", "description": "A boolean flag to enable/disable cross zone load balancing", "default": "\"true\""}, {"name": "ip_address_type", "description": "The type of IP addresses used by the subnets for your load balancer. The possible values are `ipv4` and `dualstack`.", "default": "\"ipv4\""}, {"name": "stage", "description": "Stage, e.g. `prod`, `staging`, `dev`, or `test`", "default": ""}, {"name": "https_port", "description": "The port for the HTTPS listener", "default": "\"443\""}, {"name": "subnet_ids", "description": "A list of subnet IDs to associate with ALB", "default": ""}, {"name": "certificate_arn", "description": "The ARN of the default SSL certificate for HTTPS listener", "default": "\"\""}, {"name": "https_enabled", "description": "A boolean flag to enable/disable HTTPS listener", "default": "\"false\""}, {"name": "deregistration_delay", "description": "The amount of time to wait in seconds before changing the state of a deregistering target to unused", "default": "\"15\""}, {"name": "health_check_healthy_threshold", "description": "The number of consecutive health checks successes required before considering an unhealthy target healthy", "default": "\"2\""}]}, "cloudposse/alb-ingress/aws": {"name": "alb-ingress", "url": "https://registry.terraform.io/modules/cloudposse/alb-ingress/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision an HTTP style ingress rule based on hostname and path for an ALB", "source": "cloudposse/alb-ingress/aws", "args": [{"name": "attributes", "description": "Additional attributes, e.g. `1`", "default": "[]"}, {"name": "target_group_arn", "description": "ALB target group ARN, if this is an empty string a new one will be generated", "default": "\"\""}, {"name": "listener_arns_count", "description": "The number of ARNs in listener_arns, this is necessary to work around a limitation in Terraform where counts cannot be computed", "default": "\"0\""}, {"name": "health_check_healthy_threshold", "description": "The number of consecutive health checks successes required before healthy", "default": "\"2\""}, {"name": "vpc_id", "description": "The VPC ID where generated ALB target group will be provisioned (if target_group_arn not set)", "default": ""}, {"name": "namespace", "description": "Namespace, which could be your organization name, e.g. `cp` or `cloudposse`", "default": ""}, {"name": "tags", "description": "Additional tags (e.g. `map(`BusinessUnit`,`XYZ`)", "default": "{}"}, {"name": "listener_arns", "description": "A list of ALB listener ARNs to attach ALB listener rule to", "default": "[]"}, {"name": "deregistration_delay", "description": "The amount of time to wait in seconds while deregistering target", "default": "\"15\""}, {"name": "stage", "description": "Stage, e.g. `prod`, `staging`, `dev`, or `test`", "default": ""}, {"name": "health_check_path", "description": "The destination for the health check request", "default": "\"/\""}, {"name": "health_check_timeout", "description": "The amount of time to wait in seconds before failing a health check request", "default": "\"10\""}, {"name": "health_check_unhealthy_threshold", "description": "The number of consecutive health check failures required before unhealthy", "default": "\"2\""}, {"name": "health_check_matcher", "description": "The HTTP response codes to indicate a healthy check", "default": "\"200-399\""}, {"name": "protocol", "description": "The protocol for generated ALB target group (if target_group_arn not set)", "default": "\"HTTP\""}, {"name": "name", "description": "Solution name, e.g. `app`", "default": ""}, {"name": "health_check_interval", "description": "The duration in seconds in between health checks", "default": "\"15\""}, {"name": "priority", "description": "The priority for the rule between 1 and 50000 (1 being highest priority)", "default": "\"100\""}, {"name": "port", "description": "The port for generated ALB target group (if target_group_arn not set)", "default": "\"80\""}, {"name": "target_type", "description": "", "default": "\"ip\""}, {"name": "hosts", "description": "Hosts to match in Hosts header, at least one of hosts or paths must be set", "default": "[]"}, {"name": "paths", "description": "Path pattern to match (a maximum of 1 can be defined), at least one of hosts or paths must be set", "default": "[]"}, {"name": "delimiter", "description": "Delimiter to be used between `namespace`, `name`, `stage` and `attributes`", "default": "\"-\""}]}, "terraformdns/route53-recordsets/aws": {"name": "route53-recordsets", "url": "https://registry.terraform.io/modules/terraformdns/route53-recordsets/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for creating DNS recordsets in a Route53 zone", "source": "terraformdns/route53-recordsets/aws", "args": [{"name": "route53_zone_id", "description": "The id of the Route53 zone to add records to.", "default": ""}, {"name": "recordsets", "description": "List of DNS record objects to manage, in the standard terraformdns structure.", "default": ""}]}, "terraformdns/recordsets/dns": {"name": "recordsets", "url": "https://registry.terraform.io/modules/terraformdns/recordsets/dns", "provider": "dns", "downloads": 0, "description": "Terraform module for creating DNS recordsets using RFC 2136 dynamic updates", "source": "terraformdns/recordsets/dns", "args": [{"name": "zone_name", "description": "Name of the zone where the given recordsets are to be managed.", "default": ""}, {"name": "recordsets", "description": "List of DNS record objects to manage, in the standard terraformdns structure.", "default": ""}]}, "terraformdns/dns-recordsets/dyn": {"name": "dns-recordsets", "url": "https://registry.terraform.io/modules/terraformdns/dns-recordsets/dyn", "provider": "dyn", "downloads": 0, "description": "Terraform module for creating DNS recordsets in a DNS zone hosted by Dyn", "source": "terraformdns/dns-recordsets/dyn", "args": [{"name": "zone_name", "description": "The name of the Dyn-managed DNS zone to add records to.", "default": ""}, {"name": "recordsets", "description": "List of DNS record objects to manage, in the standard terraformdns structure.", "default": ""}]}, "terraformdns/dns-zonefile/template": {"name": "dns-zonefile", "url": "https://registry.terraform.io/modules/terraformdns/dns-zonefile/template", "provider": "template", "downloads": 0, "description": "Terraform module for formatting a DNS zonefile string", "source": "terraformdns/dns-zonefile/template", "args": [{"name": "recordsets", "description": "List of DNS recordset objects, in the standard terraformdns structure, to format into a zone file.", "default": ""}]}, "telia-oss/terraform-init/aws": {"name": "terraform-init", "url": "https://registry.terraform.io/modules/telia-oss/terraform-init/aws", "provider": "aws", "downloads": 0, "description": "Initialise the terraform state bucket, lock table and encryption key.", "source": "telia-oss/terraform-init/aws", "args": [{"name": "name_prefix", "description": "A prefix used for naming resources.", "default": ""}, {"name": "tags", "description": "A map of tags (key-value pairs) passed to resources.", "default": "{}"}]}, "telia-oss/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/telia-oss/ecs/aws", "provider": "aws", "downloads": 0, "description": "Collection of ECS modules for Terraform.", "source": "telia-oss/ecs/aws", "args": []}, "gyamada619/chocoserver/aws": {"name": "chocoserver", "url": "https://registry.terraform.io/modules/gyamada619/chocoserver/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to build a single EC2 instance used for Chocolately.Server.", "source": "gyamada619/chocoserver/aws", "args": [{"name": "admin_password", "description": "Windows Administrator password to login as.", "default": "\"\""}, {"name": "key_name", "description": "Name of the SSH keypair to use in AWS.", "default": "\"\""}, {"name": "aws_region", "description": "AWS region to launch servers.", "default": "\"us-east-1\""}]}, "cloudposse/ecs-web-app/aws": {"name": "ecs-web-app", "url": "https://registry.terraform.io/modules/cloudposse/ecs-web-app/aws", "provider": "aws", "downloads": 0, "description": "Terraform module that implements a web app on ECS and supporting AWS resources.", "source": "cloudposse/ecs-web-app/aws", "args": [{"name": "alb_name", "description": "Name of the ALB for the Target Group.", "default": "\"\""}, {"name": "alb_ingress_healthcheck_path", "description": "The path of the healthcheck which the ALB checks.", "default": "\"/\""}, {"name": "ecs_alarms_enabled", "description": "A boolean to enable/disable CloudWatch Alarms for ECS Service metrics.", "default": "\"false\""}, {"name": "repo_name", "description": "GitHub repository name of the application to be built and deployed to ECS.", "default": "\"\""}, {"name": "name", "description": "Name (unique identifier for app or service)", "default": ""}, {"name": "attributes", "description": "List of attributes to add to label.", "default": "[]"}, {"name": "tags", "description": "Map of key-value pairs to use for tags.", "default": "{}"}, {"name": "protocol", "description": "The protocol used for the port mapping. Options: tcp or udp.", "default": "\"tcp\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "alb_target_group_alarms_5xx_threshold", "description": "The maximum number of 5XX HTTPCodes in a given period for ECS Service.", "default": "\"25\""}, {"name": "ecs_private_subnet_ids", "description": "List of Private Subnet IDs to provision ECS Service onto.", "default": ""}, {"name": "vpc_id", "description": "The VPC ID where resources are created.", "default": ""}, {"name": "container_memory", "description": "The amount of RAM to allow container to use in MB.", "default": "\"128\""}, {"name": "host_port", "description": "The port number to bind container_port to on the host", "default": "\"\""}, {"name": "healthcheck", "description": "A map containing command (string), interval (duration in seconds), retries (1-10, number of times to retry before marking container unhealthy, and startPeriod (0-300, optional grace period to wait, in seconds, before failed healthchecks count toward retries)", "default": "{}"}, {"name": "alb_target_group_alarms_4xx_threshold", "description": "The maximum number of 4XX HTTPCodes in a given period for ECS Service.", "default": "\"25\""}, {"name": "ecs_alarms_evaluation_periods", "description": "The number of periods to analyze for ECS CloudWatch Alarms.", "default": "\"1\""}, {"name": "ecs_cluster_arn", "description": "The ECS Cluster ARN where ECS Service will be provisioned.", "default": ""}, {"name": "branch", "description": "Branch of the GitHub repository, e.g. master", "default": "\"\""}, {"name": "alb_target_group_alarms_3xx_threshold", "description": "The maximum number of 3XX HTTPCodes in a given period for ECS Service.", "default": "\"25\""}, {"name": "ecs_alarms_cpu_utilization_threshold", "description": "The max percentage of CPU usage for ECS Service.", "default": "\"80\""}, {"name": "ecs_alarms_memory_utilization_threshold", "description": "The max percentage of Memory usage for ECS Service.", "default": "\"80\""}, {"name": "ecs_alarms_period", "description": "The period (in seconds) to analyze for ECS CloudWatch Alarms.", "default": "\"300\""}, {"name": "alb_arn_suffix", "description": "ARN suffix of the ALB for the Target Group.", "default": "\"\""}, {"name": "listener_arns_count", "description": "Number of elements in list of ALB Listener ARNs for the ECS service.", "default": ""}, {"name": "github_oauth_token", "description": "GitHub Oauth Token with permissions to access private repositories", "default": "\"\""}, {"name": "repo_owner", "description": "GitHub Organization or Username.", "default": "\"\""}, {"name": "codepipeline_enabled", "description": "A boolean to enable/disable AWS Codepipeline and ECR", "default": "\"true\""}, {"name": "launch_type", "description": "The ECS launch type (valid options: FARGATE or EC2)", "default": "\"FARGATE\""}, {"name": "notify_arns", "description": "List of ARNs to send notifications on CloudWatch `ALARM` and `OK` actions.", "default": ""}, {"name": "alb_target_group_alarms_response_time_threshold", "description": "The maximum ALB Target Group response time.", "default": "\"0.5\""}, {"name": "container_image", "description": "The default container image to use in container definition.", "default": "\"cloudposse/default-backend\""}, {"name": "alb_ingress_hosts", "description": "Hosts to match in Hosts header, at least one of hosts or paths must be set", "default": "[]"}, {"name": "listener_arns", "description": "List of ALB Listener ARNs for the ECS service.", "default": ""}, {"name": "aws_logs_region", "description": "The region for the AWS Cloudwatch Logs group.", "default": ""}, {"name": "alb_target_group_alarms_enabled", "description": "A boolean to enable/disable CloudWatch Alarms for ALB Target metrics.", "default": "\"false\""}, {"name": "alb_target_group_alarms_evaluation_periods", "description": "The number of periods to analyze for ALB CloudWatch Alarms.", "default": "\"1\""}, {"name": "ecs_cluster_name", "description": "The ECS Cluster Name to use in ECS Code Pipeline Deployment step.", "default": ""}, {"name": "ecs_security_group_ids", "description": "Additional Security Group IDs to allow into ECS Service.", "default": "[]"}, {"name": "delimiter", "description": "The delimiter to be used in labels.", "default": "\"-\""}, {"name": "container_port", "description": "The port number on the container bound to assigned host_port.", "default": "\"80\""}, {"name": "alb_target_group_alarms_period", "description": "The period (in seconds) to analyze for ALB CloudWatch Alarms.", "default": "\"300\""}, {"name": "alb_ingress_paths", "description": "Path pattern to match (a maximum of 1 can be defined), at least one of hosts or paths must be set", "default": "[]"}]}, "louislarry/spa/aws": {"name": "spa", "url": "https://registry.terraform.io/modules/louislarry/spa/aws", "provider": "aws", "downloads": 0, "description": "Build AWS infrastructure for SPA", "source": "louislarry/spa/aws", "args": [{"name": "hosted_zone", "description": "", "default": ""}, {"name": "force_destroy", "description": "", "default": "false"}]}, "plus3it/codecommit-flow-ci/aws": {"name": "codecommit-flow-ci", "url": "https://registry.terraform.io/modules/plus3it/codecommit-flow-ci/aws", "provider": "aws", "downloads": 0, "description": "Implement an event-based CI workflow on a CodeCommit repository", "source": "plus3it/codecommit-flow-ci/aws", "args": []}, "telia-oss/rds-instance/aws": {"name": "rds-instance", "url": "https://registry.terraform.io/modules/telia-oss/rds-instance/aws", "provider": "aws", "downloads": 0, "description": "RDS Instance module for Terraform", "source": "telia-oss/rds-instance/aws", "args": [{"name": "database_name", "description": "Name for an automatically created database on instance creation.", "default": "\"main\""}, {"name": "allocated_storage", "description": "The allocated storage in gigabytes.", "default": "\"50\""}, {"name": "publicly_accessible", "description": "Bool to control if instances is publicly accessible.", "default": "\"false\""}, {"name": "subnet_ids", "description": "A list of VPC subnet IDs.", "default": ""}, {"name": "port", "description": "The port on which the DB accepts connections.", "default": "\"5439\""}, {"name": "snapshot_identifier", "description": "Specifies whether or not to create this instance from a snapshot.", "default": "\"\""}, {"name": "username", "description": "Username for the master DB user.", "default": ""}, {"name": "password", "description": "Password for the master DB user.", "default": ""}, {"name": "instance_type", "description": "The DB instance class to use.", "default": "\"db.m3.medium\""}, {"name": "skip_final_snapshot", "description": "Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DB snapshot is created.", "default": "\"true\""}, {"name": "multi_az", "description": "Specifies if the RDS instance is multi-AZ.", "default": "\"true\""}, {"name": "tags", "description": "A map of tags (key-value pairs) passed to resources.", "default": "{}"}, {"name": "name_prefix", "description": "A prefix used for naming resources.", "default": ""}, {"name": "engine", "description": "The name of the database engine to be used for this DB instance.", "default": "\"postgres\""}, {"name": "vpc_id", "description": "The VPC ID.", "default": ""}]}, "cloudposse/ssm-parameter-store-policy-documents/aws": {"name": "ssm-parameter-store-policy-documents", "url": "https://registry.terraform.io/modules/cloudposse/ssm-parameter-store-policy-documents/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module that generates JSON documents for access for common AWS SSM Parameter Store policies", "source": "cloudposse/ssm-parameter-store-policy-documents/aws", "args": [{"name": "parameter_root_name", "description": "The prefix or root parameter that you want to allow access to.", "default": "\"\""}, {"name": "kms_key", "description": "The arn of the KMS key that you want to allow access to. If empty it uses a wildcard resource (`*`).", "default": "\"\""}, {"name": "region", "description": "The region of the parameter store value that you want to allow access to. If none supplied, it uses the current region of the provider.", "default": "\"\""}, {"name": "account_id", "description": "The account id of the parameter store you want to allow access to. If none supplied, it uses the current account id of the provider.", "default": "\"\""}]}, "nozaq/secure-baseline/aws": {"name": "secure-baseline", "url": "https://registry.terraform.io/modules/nozaq/secure-baseline/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to set up your AWS account with the secure baseline configuration based on CIS Amazon Web Services Foundations.", "source": "nozaq/secure-baseline/aws", "args": [{"name": "vpc_iam_role_policy_name", "description": "The name of the IAM Role Policy which VPC Flow Logs will use.", "default": "\"VPC-Flow-Logs-Publish-Policy\""}, {"name": "vpc_log_group_name", "description": "The name of CloudWatch Logs group to which VPC Flow Logs are delivered.", "default": "\"default-vpc-flow-logs\""}, {"name": "audit_log_bucket_name", "description": "The name of the S3 bucket to store various audit logs.", "default": ""}, {"name": "audit_log_lifecycle_glacier_transition_days", "description": "The number of days after log creation when the log file is archived into Glacier.", "default": "90"}, {"name": "manager_iam_role_name", "description": "The name of the IAM Manager role.", "default": "\"IAM-Manager\""}, {"name": "manager_iam_role_policy_name", "description": "The name of the IAM Manager role policy.", "default": "\"IAM-Manager-Policy\""}, {"name": "support_iam_role_principal_arn", "description": "The ARN of the IAM principal element by which the support role could be assumed.", "default": ""}, {"name": "require_symbols", "description": "Whether to require symbols for user passwords.", "default": "true"}, {"name": "config_iam_role_policy_name", "description": "The name of the IAM Role Policy which AWS Config will use.", "default": "\"Config-Recorder-Policy\""}, {"name": "alarm_sns_topic_name", "description": "The name of the SNS Topic which will be notified when any alarm is performed.", "default": "\"CISAlarm\""}, {"name": "master_iam_role_policy_name", "description": "The name of the IAM Master role policy.", "default": "\"IAM-Master-Policy\""}, {"name": "allow_users_to_change_password", "description": "Whether to allow users to change their own password.", "default": "true"}, {"name": "vpc_iam_role_name", "description": "The name of the IAM Role which VPC Flow Logs will use.", "default": "\"VPC-Flow-Logs-Publisher\""}, {"name": "require_lowercase_characters", "description": "Whether to require lowercase characters for user passwords.", "default": "true"}, {"name": "cloudtrail_cloudwatch_logs_group_name", "description": "The name of CloudWatch Logs group to which CloudTrail events are delivered.", "default": "\"cloudtrail-multi-region\""}, {"name": "cloudtrail_s3_key_prefix", "description": "The prefix used when CloudTrail delivers events to the S3 bucket.", "default": "\"cloudtrail\""}, {"name": "password_reuse_prevention", "description": "The number of previous passwords that users are prevented from reusing.", "default": "24"}, {"name": "cloudtrail_name", "description": "The name of the trail.", "default": "\"cloudtrail-multi-region\""}, {"name": "support_iam_role_name", "description": "The name of the the support role.", "default": "\"IAM-Support\""}, {"name": "minimum_password_length", "description": "Minimum length to require for user passwords.", "default": "14"}, {"name": "cloudtrail_key_deletion_window_in_days", "description": "Duration in days after which the key is deleted after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.", "default": "10"}, {"name": "region", "description": "The AWS region in which global resources are set up.", "default": ""}, {"name": "config_delivery_frequency", "description": "The frequency which AWS Config sends a snapshot into the S3 bucket.", "default": "\"One_Hour\""}, {"name": "config_sns_topic_name", "description": "The name of the SNS Topic to be used to notify configuration changes.", "default": "\"ConfigChanges\""}, {"name": "support_iam_role_policy_name", "description": "The name of the support role policy.", "default": "\"IAM-Support-Role\""}, {"name": "max_password_age", "description": "The number of days that an user password is valid.", "default": "90"}, {"name": "config_s3_bucket_key_prefix", "description": "The prefix used when writing AWS Config snapshots into the S3 bucket.", "default": "\"config\""}, {"name": "cloudtrail_iam_role_policy_name", "description": "The name of the IAM Role Policy to be used by CloudTrail to delivery logs to CloudWatch Logs group.", "default": "\"CloudTrail-CloudWatch-Delivery-Policy\""}, {"name": "alarm_namespace", "description": "The namespace in which all alarms are set up.", "default": "\"CISBenchmark\""}, {"name": "aws_account_id", "description": "The AWS Account ID number of the account.", "default": ""}, {"name": "master_iam_role_name", "description": "The name of the IAM Master role.", "default": "\"IAM-Master\""}, {"name": "require_numbers", "description": "Whether to require numbers for user passwords.", "default": "true"}, {"name": "require_uppercase_characters", "description": "Whether to require uppercase characters for user passwords.", "default": "true"}, {"name": "config_iam_role_name", "description": "The name of the IAM Role which AWS Config will use.", "default": "\"Config-Recorder\""}, {"name": "cloudtrail_iam_role_name", "description": "The name of the IAM Role to be used by CloudTrail to delivery logs to CloudWatch Logs group.", "default": "\"CloudTrail-CloudWatch-Delivery-Role\""}]}, "nozaq/secure-vpc/aws": {"name": "secure-vpc", "url": "https://registry.terraform.io/modules/nozaq/secure-vpc/aws", "provider": "aws", "downloads": 0, "description": "A terraform module to create a VPC with secure default configurations.", "source": "nozaq/secure-vpc/aws", "args": [{"name": "assign_generated_ipv6_cidr_block", "description": "Requests an Amazon-provided IPv6 CIDR block with a /56 prefix length for the VPC. You cannot specify the range of IP addresses, or the size of the CIDR block.", "default": "false"}, {"name": "flow_logs_iam_role_name", "description": "The name of the IAM role to publish VPC Flow Logs.", "default": ""}, {"name": "flow_logs_traffic_type", "description": "The type of traffic to capture. Valid values: ACCEPT,REJECT, ALL", "default": "\"ALL\""}, {"name": "aws_account_id", "description": "The AWS Account ID number of the account.", "default": ""}, {"name": "nat_subnet_cidr_blocks", "description": "The CIDR blocks for the NAT subnets.", "default": "[]"}, {"name": "enable_dns_support", "description": "A boolean flag to enable/disable DNS support in the VPC.", "default": "true"}, {"name": "flow_logs_retention_in_days", "description": "Specifies the number of days you want to retain VPC Flow Logs events.", "default": "\"0\""}, {"name": "flow_logs_key_deletion_window_in_days", "description": "Duration in days after which the key is deleted after destruction of the resource, must be between 7 and 30 days. Defaults to 30 days.", "default": "\"30\""}, {"name": "availability_zones", "description": "The availability zones to support with this VPC.", "default": "[]"}, {"name": "instance_tenancy", "description": "A tenancy option for instances launched into the VPC", "default": "\"default\""}, {"name": "enable_dns_hostnames", "description": "A boolean flag to enable/disable DNS hostnames in the VPC.", "default": "false"}, {"name": "tags", "description": "Tags to be attached to all resources created with this module.", "default": "{}"}, {"name": "cidr_block", "description": "The CIDR block for the VPC.", "default": ""}, {"name": "flow_logs_group_name", "description": "The name of the CloudWatch Logs group for VPC Flow Logs.", "default": ""}]}, "GSLabDev/icp/module": {"name": "icp", "url": "https://registry.terraform.io/modules/GSLabDev/icp/module", "provider": "module", "downloads": 0, "description": "Terraform module for IBM Cloud Platform which is IBM's cloud orchestration platform. Module helps in doing installation of ICP in Distributed and Base mode.", "source": "GSLabDev/icp/module", "args": []}, "philips-software/bastion/aws": {"name": "bastion", "url": "https://registry.terraform.io/modules/philips-software/bastion/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS bastion host", "source": "philips-software/bastion/aws", "args": [{"name": "enable_bastion", "description": "If true the bastion will be created. Be default the bastion host is not running, needs explicit set to true.", "default": "false"}, {"name": "user_data", "description": "Used data for bastion EC2 instance", "default": "\"\""}, {"name": "aws_region", "description": "The Amazon region.", "default": ""}, {"name": "environment", "description": "Logical name of the environment.", "default": ""}, {"name": "amazon_optimized_amis", "description": "Map from region to AMI. By default the latest Amazon Linux is used.", "default": "{}"}, {"name": "vpc_id", "description": "The VPC to launch the instance in (e.g. vpc-66ecaa02).", "default": ""}, {"name": "subnet_id", "description": "Subnet in which the basion needs to be deployed.", "default": ""}, {"name": "project", "description": "Name of the project.", "default": ""}, {"name": "key_name", "description": "SSH key name for the environment.", "default": ""}, {"name": "instance_type", "description": "EC2 instance type.", "default": "\"t2.micro\""}, {"name": "ebs_optimized", "description": "If true, the launched EC2 instance will be EBS-optimized.", "default": "\"false\""}, {"name": "admin_cidr", "description": "CIDR pattern to access the bastion host", "default": "\"0.0.0.0/0\""}]}, "rahulkhengare/redis/azurerm": {"name": "redis", "url": "https://registry.terraform.io/modules/rahulkhengare/redis/azurerm", "provider": "azurerm", "downloads": 0, "description": "Terraform Module for Azure Redis Service", "source": "rahulkhengare/redis/azurerm", "args": [{"name": "tier_settings", "description": "Redis tier settings", "default": "{\n  \"capacity\": 0,\n  \"family\": \"C\",\n  \"sku_name\": \"Basic\"\n}"}, {"name": "non_ssl_port", "description": "Enable non SSL port of redis", "default": "\"false\""}, {"name": "resource_group_name", "description": "The name of the resource group in which the resources will be created.", "default": ""}, {"name": "name", "description": "The name of the redis service", "default": ""}, {"name": "location", "description": "Region where the resources are created.", "default": ""}]}, "WesleyCharlesBlake/vault/aws": {"name": "vault", "url": "https://registry.terraform.io/modules/WesleyCharlesBlake/vault/aws", "provider": "aws", "downloads": 0, "description": "A Terraform Module for how to run Vault on AWS using Terraform and Packer", "source": "WesleyCharlesBlake/vault/aws", "args": [{"name": "create_dns_entry", "description": "If set to true, this module will create a Route 53 DNS A record for the ELB in the var.hosted_zone_id hosted zone with the domain name in var.domain_name.", "default": ""}, {"name": "vault_cluster_name", "description": "What to name the Vault server cluster and all of its associated resources", "default": "\"vault-example\""}, {"name": "consul_cluster_name", "description": "What to name the Consul server cluster and all of its associated resources", "default": "\"consul-example\""}, {"name": "hosted_zone_domain_name", "description": "The domain name of the Route 53 Hosted Zone in which to add a DNS entry for Vault (e.g. example.com). Only used if var.create_dns_entry is true.", "default": ""}, {"name": "vault_domain_name", "description": "The domain name to use in the DNS A record for the Vault ELB (e.g. vault.example.com). Make sure that a) this is a domain within the var.hosted_zone_domain_name hosted zone and b) this is the same domain name you used in the TLS certificates for Vault. Only used if var.create_dns_entry is true.", "default": ""}, {"name": "aws_region", "description": "The AWS region to deploy into (e.g. us-east-1).", "default": "\"us-east-1\""}, {"name": "ssh_key_name", "description": "The name of an EC2 Key Pair that can be used to SSH to the EC2 Instances in this cluster. Set to an empty string to not associate a Key Pair.", "default": ""}, {"name": "vpc_tags", "description": "Tags used to find a vpc for building resources in", "default": "{}"}, {"name": "use_default_vpc", "description": "Whether to use the default VPC - NOT recommended for production! - should more likely change this to false and use the vpc_tags to find your vpc", "default": "true"}, {"name": "consul_cluster_size", "description": "The number of Consul server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "consul_instance_type", "description": "The type of EC2 Instance to run in the Consul ASG", "default": "\"t2.micro\""}, {"name": "consul_cluster_tag_key", "description": "The tag the Consul EC2 Instances will look for to automatically discover each other and form a cluster.", "default": "\"consul-servers\""}, {"name": "ami_id", "description": "The ID of the AMI to run in the cluster. This should be an AMI built from the Packer template under examples/vault-consul-ami/vault-consul.json. If no AMI is specified, the template will 'just work' by using the example public AMIs. WARNING! Do not use the example AMIs in a production setting!", "default": "\"\""}, {"name": "subnet_tags", "description": "Tags used to find subnets for vault and consul servers", "default": "{}"}, {"name": "vault_cluster_size", "description": "The number of Vault server nodes to deploy. We strongly recommend using 3 or 5.", "default": "3"}, {"name": "vault_instance_type", "description": "The type of EC2 Instance to run in the Vault ASG", "default": "\"t2.micro\""}]}, "WesleyCharlesBlake/eks/aws": {"name": "eks", "url": "https://registry.terraform.io/modules/WesleyCharlesBlake/eks/aws", "provider": "aws", "downloads": 0, "description": "Deploy a full EKS cluster with Terraform", "source": "WesleyCharlesBlake/eks/aws", "args": [{"name": "max-size", "description": "Autoscaling maximum node capacity", "default": "5"}, {"name": "min-size", "description": "Autoscaling Minimum node capacity", "default": "1"}, {"name": "cluster-name", "description": "The name of your EKS Cluster", "default": "\"my-cluster\""}, {"name": "aws-region", "description": "The AWS Region to deploy EKS", "default": "\"us-west-2\""}, {"name": "node-instance-type", "description": "Worker Node EC2 instance type", "default": "\"m4.large\""}, {"name": "desired-capacity", "description": "Autoscaling Desired node capacity", "default": "2"}]}, "philips-software/vpc/aws": {"name": "vpc", "url": "https://registry.terraform.io/modules/philips-software/vpc/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS VPC (public, or public and private)", "source": "philips-software/vpc/aws", "args": [{"name": "create_private_subnets", "description": "", "default": "\"true\""}, {"name": "create_private_hosted_zone", "description": "", "default": "\"true\""}, {"name": "public_subnet_map_public_ip_on_launch", "description": "", "default": "\"false\""}, {"name": "environment", "description": "", "default": ""}, {"name": "project", "description": "", "default": "\"\""}, {"name": "aws_region", "description": "The Amazon region", "default": ""}, {"name": "cidr_block", "description": "", "default": "\"10.0.0.0/16\""}, {"name": "availability_zones", "description": "", "default": "{\n  \"ap-northeast-1\": [\n    \"ap-northeast-1a\",\n    \"ap-northeast-1c\"\n  ],\n  \"ap-northeast-2\": [\n    \"ap-northeast-2a\",\n    \"ap-northeast-2c\"\n  ],\n  \"ap-south-1\": [\n    \"ap-south-1a\",\n    \"ap-south-1b\"\n  ],\n  \"ap-southeast-1\": [\n    \"ap-southeast-1a\",\n    \"ap-southeast-1b\"\n  ],\n  \"ap-southeast-2\": [\n    \"ap-southeast-2a\",\n    \"ap-southeast-2b\",\n    \"ap-southeast-2c\"\n  ],\n  \"ca-central-1\": [\n    \"ca-central-1a\",\n    \"ca-central-1b\"\n  ],\n  \"eu-central-1\": [\n    \"eu-central-1a\",\n    \"eu-central-1b\",\n    \"eu-central-1c\"\n  ],\n  \"eu-west-1\": [\n    \"eu-west-1a\",\n    \"eu-west-1b\",\n    \"eu-west-1c\"\n  ],\n  \"eu-west-2\": [\n    \"eu-west-2a\",\n    \"eu-west-2b\"\n  ],\n  \"sa-east-1\": [\n    \"sa-east-1a\",\n    \"sa-east-1c\"\n  ],\n  \"us-east-1\": [\n    \"us-east-1a\",\n    \"us-east-1b\",\n    \"us-east-1c\",\n    \"us-east-1d\",\n    \"us-east-1e\",\n    \"us-east-1f\"\n  ],\n  \"us-east-2\": [\n    \"us-east-2a\",\n    \"eu-east-2b\",\n    \"eu-east-2c\"\n  ],\n  \"us-west-1\": [\n    \"us-west-1a\",\n    \"us-west-1c\"\n  ],\n  \"us-west-2\": [\n    \"us-west-2a\",\n    \"us-west-2b\",\n    \"us-west-2c\"\n  ]\n}"}]}, "philips-software/ecs/aws": {"name": "ecs", "url": "https://registry.terraform.io/modules/philips-software/ecs/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS ECS cluster", "source": "philips-software/ecs/aws", "args": [{"name": "instance_type", "description": "The instance type used in the cluster.", "default": ""}, {"name": "vpc_cidr", "description": "The CIDR block of the VPC (e.g. 10.64.48.0/23).", "default": ""}, {"name": "min_instance_count", "description": "The minimal instance count in the cluster.", "default": "\"1\""}, {"name": "max_instance_count", "description": "The maximum instance count in the cluster.", "default": "\"1\""}, {"name": "desired_instance_count", "description": "The desired instance count in the cluster.", "default": "\"1\""}, {"name": "ecs_optimized_amis", "description": "List with ecs optimized images per region, last updated on: 2018-06-20 (2018.03.a).", "default": "{\n  \"ap-northeast-1\": \"ami-f3f8098c\",\n  \"ap-northeast-2\": \"ami-7c69c112\",\n  \"ap-south-1\": \"ami-c7072aa8\",\n  \"ap-southeast-1\": \"ami-b75a6acb\",\n  \"ap-southeast-2\": \"ami-bc04d5de\",\n  \"ca-central-1\": \"ami-da6cecbe\",\n  \"eu-central-1\": \"ami-10e6c8fb\",\n  \"eu-west-1\": \"ami-c91624b0\",\n  \"eu-west-2\": \"ami-3622cf51\",\n  \"eu-west-3\": \"ami-ca75c4b7\",\n  \"sa-east-1\": \"ami-a1e2becd\",\n  \"us-east-1\": \"ami-5253c32d\",\n  \"us-east-2\": \"ami-956e52f0\",\n  \"us-west-1\": \"ami-6b81980b\",\n  \"us-west-2\": \"ami-d2f489aa\"\n}"}, {"name": "project", "description": "Project identifier", "default": ""}, {"name": "key_name", "description": "The AWS keyname, used to create instances.", "default": ""}, {"name": "environment", "description": "Name of the environment; will be prefixed to all resources.", "default": ""}, {"name": "vpc_id", "description": "The VPC to launch the instance in (e.g. vpc-66ecaa02).", "default": ""}, {"name": "subnet_ids", "description": "List of subnets ids on which the instances will be launched.", "default": ""}, {"name": "user_data", "description": "The user-data for the ec2 instances", "default": ""}, {"name": "aws_region", "description": "The Amazon region: currently North Virginia [us-east-1].", "default": ""}]}, "philips-software/cloudwatch/aws": {"name": "cloudwatch", "url": "https://registry.terraform.io/modules/philips-software/cloudwatch/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS Cloudwatch log group and config", "source": "philips-software/cloudwatch/aws", "args": [{"name": "name_suffix", "description": "Logical name to append to the log group name.", "default": ""}, {"name": "create_log_group", "description": "Indicates if the log group needs to be created by the module.", "default": "true"}, {"name": "tags", "description": "A map of tags to add to the resources", "default": "{}"}, {"name": "environment", "description": "Logical name of the environment, will be used as prefix and for tagging.", "default": ""}]}, "philips-software/efs/aws": {"name": "efs", "url": "https://registry.terraform.io/modules/philips-software/efs/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS elastic file system (EFS)", "source": "philips-software/efs/aws", "args": [{"name": "encrypted", "description": "Encrypt file system.", "default": "true"}, {"name": "subnet_count", "description": "", "default": ""}, {"name": "environment", "description": "Name of the environment; will be prefixed to all resources", "default": ""}, {"name": "project", "description": "Name of the project.", "default": ""}, {"name": "vpc_id", "description": "EFS is created in this VPC", "default": ""}, {"name": "subnet_ids", "description": "The created EFS will be available in these subnet ids", "default": ""}, {"name": "mount_location", "description": "Used to create a cloud init config part for amazon linux instances.", "default": "\"/efs\""}, {"name": "performance_mode", "description": "maxIO", "default": "\"generalPurpose\""}, {"name": "creation_token", "description": "", "default": "\"\""}, {"name": "tags", "description": "A map of tags to add to the resources", "default": "{}"}]}, "philips-software/rds/aws": {"name": "rds", "url": "https://registry.terraform.io/modules/philips-software/rds/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS RDS instance", "source": "philips-software/rds/aws", "args": [{"name": "instance_class", "description": "The instance type of the RDS instance. The default is 'db.t2.small' to allow encryption. The micro versions cannot be encrypted", "default": "\"db.t2.small\""}, {"name": "vpc_private_dns_zone_id", "description": "", "default": ""}, {"name": "engine_version", "description": "The database engine_version", "default": ""}, {"name": "username", "description": "The database username", "default": ""}, {"name": "port", "description": "The database port", "default": ""}, {"name": "storage_encrypted", "description": "(Optional) Specifies whether the DB instance is encrypted. The default is false if not specified.", "default": "\"true\""}, {"name": "tags", "description": "A map of tags to add to the resources", "default": "{}"}, {"name": "name", "description": "Name of the database instance", "default": ""}, {"name": "subnet_ids", "description": "IDs of the subnets, seperated by a ,", "default": ""}, {"name": "allocated_storage", "description": "(Optional) The amount of allocated storage. The default is 10GB if not specified", "default": "\"10\""}, {"name": "skip_final_snapshot", "description": "(Optional) Determines whether a final DB snapshot is created before the DB instance is deleted. If true is specified, no DBSnapshot is created. If false is specified, a DB snapshot is created before the DB instance is deleted, using the value from final_snapshot_identifier. Default is false.", "default": "\"false\""}, {"name": "environment", "description": "Name of the environment (e.g. digilabs-projextX-dev); will be prefixed to all resources", "default": ""}, {"name": "vpc_id", "description": "The VPC to launch the instance in (e.g. vpc-66ecaa02)", "default": ""}, {"name": "storage_type", "description": "(Optional) One of 'standard' (magnetic), 'gp2' (general purpose SSD), or 'io1' (provisioned IOPS SSD). The default is 'gp2' if not specified.", "default": "\"gp2\""}, {"name": "backup_retention_period", "description": "(Optional) Automatically keep backups for point-in-time recovery for XX days(1-35). When providing '0' as a value backups will be disabled.The default is 14 if not specified.", "default": "\"7\""}, {"name": "backup_window", "description": "(Optional) The daily time range (in UTC) during which automated backups are created if they are enabled. Example: '09:46-10:16'. Must not overlap with maintenance_window. The default is '00:00-02:00' if not specified", "default": "\"00:00-02:00\""}, {"name": "engine", "description": "The database engine to use", "default": ""}, {"name": "password", "description": "The database password", "default": ""}]}, "cloudposse/efs-cloudwatch-sns-alarms/aws": {"name": "efs-cloudwatch-sns-alarms", "url": "https://registry.terraform.io/modules/cloudposse/efs-cloudwatch-sns-alarms/aws", "provider": "aws", "downloads": 0, "description": "", "source": "cloudposse/efs-cloudwatch-sns-alarms/aws", "args": [{"name": "filesystem_id", "description": "The EFS file system ID that you want to monitor", "default": ""}, {"name": "burst_credit_balance_threshold", "description": "The minimum number of burst credits that a file system should have.", "default": "\"192000000000\""}, {"name": "percent_io_limit_threshold", "description": "IO Limit threshold", "default": "\"95\""}, {"name": "additional_endpoint_arns", "description": "Any alert endpoints, such as autoscaling, or app escaling endpoint arns that will respond to an alert", "default": "[]"}, {"name": "sns_topic_arn", "description": "An SNS topic ARN that has already been created. Its policy must already allow access from CloudWatch Alarms, or set `add_sns_policy` to `true`", "default": "\"\""}, {"name": "add_sns_policy", "description": "Attach a policy that allows the notifications through to the SNS topic endpoint", "default": "\"false\""}]}, "cloudposse/cloudtrail-cloudwatch-alarms/aws": {"name": "cloudtrail-cloudwatch-alarms", "url": "https://registry.terraform.io/modules/cloudposse/cloudtrail-cloudwatch-alarms/aws", "provider": "aws", "downloads": 0, "description": "Terraform module for creating alarms for tracking important changes and occurances from cloudtrail.", "source": "cloudposse/cloudtrail-cloudwatch-alarms/aws", "args": [{"name": "metric_namespace", "description": "A namespace for grouping all of the metrics together", "default": "\"CISBenchmark\""}, {"name": "create_dashboard", "description": "When true a dashboard that displays tha statistics as a line graph will be created in CloudWatch", "default": "\"true\""}, {"name": "additional_endpoint_arns", "description": "Any alert endpoints, such as autoscaling, or app scaling endpoint arns that will respond to an alert", "default": "[]"}, {"name": "sns_topic_arn", "description": "An SNS topic ARN that has already been created. Its policy must already allow access from CloudWatch Alarms, or set `add_sns_policy` to `true`", "default": "\"\""}, {"name": "add_sns_policy", "description": "Attach a policy that allows the notifications through to the SNS topic endpoint", "default": "\"false\""}, {"name": "region", "description": "The region that should be monitored for unauthorised AWS API Access. Current region used if none provied.", "default": "\"\""}, {"name": "log_group_name", "description": "The cloudtrail cloudwatch log group name", "default": ""}]}, "google-terraform-modules/cloudsql/google": {"name": "cloudsql", "url": "https://registry.terraform.io/modules/google-terraform-modules/cloudsql/google", "provider": "google", "downloads": 0, "description": "Create instance CloudSQL (GCP)", "source": "google-terraform-modules/cloudsql/google", "args": [{"name": "general", "description": "General configuration", "default": ""}, {"name": "instance", "description": "Instance configuration", "default": ""}, {"name": "labels", "description": "Global labels", "default": "{}"}, {"name": "authorized_gae_applications", "description": "A list of Google App Engine (GAE) project names that are allowed to access this instance", "default": "[]"}]}, "telia-oss/acm-certificate/aws": {"name": "acm-certificate", "url": "https://registry.terraform.io/modules/telia-oss/acm-certificate/aws", "provider": "aws", "downloads": 0, "description": "ACM Certificate with validation using Terraform.", "source": "telia-oss/acm-certificate/aws", "args": [{"name": "domain", "description": "The domain of the certificate to look up.", "default": ""}, {"name": "zone_id", "description": "The ID of the hosted zone to contain this record.", "default": ""}, {"name": "tags", "description": "A map of tags (key-value pairs) passed to resources.", "default": "{}"}]}, "azavea/acm-certificate/aws": {"name": "acm-certificate", "url": "https://registry.terraform.io/modules/azavea/acm-certificate/aws", "provider": "aws", "downloads": 0, "description": "A Terraform module to create an Amazon Certificate Manager (ACM) certificate with Route 53 DNS validation.", "source": "azavea/acm-certificate/aws", "args": [{"name": "domain_name", "description": "", "default": ""}, {"name": "subject_alternative_names", "description": "", "default": ""}, {"name": "hosted_zone_id", "description": "", "default": ""}, {"name": "validation_record_ttl", "description": "", "default": "\"60\""}]}, "cloudposse/sns-lambda-notify-slack/aws": {"name": "sns-lambda-notify-slack", "url": "https://registry.terraform.io/modules/cloudposse/sns-lambda-notify-slack/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to provision a lambda function that subscribes to SNS and notifies to Slack.", "source": "cloudposse/sns-lambda-notify-slack/aws", "args": [{"name": "tags", "description": "Map of key-value pairs to use for tags.", "default": "{}"}, {"name": "sns_topic_name", "description": "Name of the SNS topic to subscribe to.", "default": "\"\""}, {"name": "name", "description": "Name (unique identifier for app or service)", "default": ""}, {"name": "delimiter", "description": "The delimiter to be used in labels.", "default": "\"-\""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "attributes", "description": "List of attributes to add to label.", "default": "[]"}, {"name": "enabled", "description": "Whether to create all resources", "default": "\"true\""}, {"name": "create_sns_topic", "description": "Whether to create new SNS topic", "default": "\"true\""}, {"name": "slack_channel", "description": "The name of the channel in Slack for notifications", "default": ""}, {"name": "kms_key_arn", "description": "ARN of the KMS key used for decrypting slack webhook url", "default": "\"\""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "slack_webhook_url", "description": "The URL of Slack webhook", "default": ""}, {"name": "slack_emoji", "description": "A custom emoji that will appear on Slack messages", "default": "\":aws:\""}, {"name": "create_with_kms_key", "description": "Whether to create resources with KMS encryption", "default": "\"false\""}, {"name": "slack_username", "description": "The username that will appear on Slack messages", "default": ""}]}, "cloudposse/ecs-cloudwatch-sns-alarms/aws": {"name": "ecs-cloudwatch-sns-alarms", "url": "https://registry.terraform.io/modules/cloudposse/ecs-cloudwatch-sns-alarms/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create CloudWatch Alarms on ECS Service level metrics.", "source": "cloudposse/ecs-cloudwatch-sns-alarms/aws", "args": [{"name": "attributes", "description": "List of attributes to add to label.", "default": "[]"}, {"name": "evaluation_periods", "description": "Number of periods to evaluate for the alarm.", "default": "\"1\""}, {"name": "cpu_utilization_threshold", "description": "The maximum percentage of CPU utilization average.", "default": "\"80\""}, {"name": "alarm_description", "description": "The string to format and use as the alarm description.", "default": "\"Average service %v utilization over last %d minute(s) too high over %v period(s)\""}, {"name": "enabled", "description": "Whether to create all resources", "default": "\"true\""}, {"name": "notify_arns", "description": "A list of ARNs (i.e. SNS Topic ARN) to notify on alarm and ok actions.", "default": ""}, {"name": "cluster_name", "description": "The name of the ECS cluster to monitor.", "default": ""}, {"name": "memory_utilization_threshold", "description": "The maximum percentage of Memory utilization average.", "default": "\"80\""}, {"name": "name", "description": "Name (unique identifier for app or service)", "default": ""}, {"name": "namespace", "description": "Namespace (e.g. `cp` or `cloudposse`)", "default": ""}, {"name": "stage", "description": "Stage (e.g. `prod`, `dev`, `staging`)", "default": ""}, {"name": "tags", "description": "Map of key-value pairs to use for tags.", "default": "{}"}, {"name": "delimiter", "description": "The delimiter to be used in labels.", "default": "\"-\""}, {"name": "service_name", "description": "The name of the ECS Service in the ECS cluster to monitor.", "default": "\"\""}, {"name": "period", "description": "Duration in seconds to evaluate for the alarm.", "default": "\"300\""}]}, "ndejong/opnsense-cloud-image-builder/digitalocean": {"name": "opnsense-cloud-image-builder", "url": "https://registry.terraform.io/modules/ndejong/opnsense-cloud-image-builder/digitalocean", "provider": "digitalocean", "downloads": 0, "description": "Terraform module to create a Digital Ocean Droplet snapshot-image that can subsequently be used to start  an OPNsense instance within Digital Ocean.", "source": "ndejong/opnsense-cloud-image-builder/digitalocean", "args": [{"name": "digitalocean_ipv6", "description": "Enable/disable getting a public IPv6 on this digitalocean-droplet.", "default": "true"}, {"name": "digitalocean_token", "description": "Your DigitalOcean API token used to issue cURL API calls directly to DigitalOcean to create the required image", "default": ""}, {"name": "opnsense_release", "description": "The OPNsense release to target for this image build", "default": ""}, {"name": "root_passwd", "description": "The initial root password for OPNsense once the image is built.", "default": "\"opnsense\""}, {"name": "hostname", "description": "The hostname applied to this digitalocean-droplet within the image build process only.", "default": "\"opnsense-cloud-image-builder\""}, {"name": "digitalocean_image", "description": "The DigitalOcean image to use as the base for this digitalocean-droplet.", "default": "\"freebsd-11-1-x64\""}, {"name": "digitalocean_size", "description": "The size to use for this digitalocean-droplet.", "default": "\"s-1vcpu-1gb\""}, {"name": "digitalocean_monitoring", "description": "Enable/disable monitoring functionality on this digitalocean-droplet - untested with OPNsense", "default": "false"}, {"name": "digitalocean_private_networking", "description": "Enable/disable private-networking functionality on this digitalocean-droplet.", "default": "true"}, {"name": "digitalocean_region", "description": "The DigitalOcean region-slug to start this digitalocean-droplet within (nyc1, sgp1, lon1, nyc3, ams3, fra1, tor1, sfo2, blr1)", "default": ""}, {"name": "self_destruct", "description": "Cause the Droplet used to create the snapshot image to self destruct itself once complete.", "default": "1"}, {"name": "digitalocean_backups", "description": "Enable/disable backup functionality on this digitalocean-droplet - untested with OPNsense", "default": "false"}]}, "philips-software/ecs-service/aws": {"name": "ecs-service", "url": "https://registry.terraform.io/modules/philips-software/ecs-service/aws", "provider": "aws", "downloads": 0, "description": "Terraform module to create an AWS ECS service", "source": "philips-software/ecs-service/aws", "args": [{"name": "docker_repository", "description": "The location of the docker repository (e.g. 123456789.dkr.ecr.eu-west-1.amazonaws.com).", "default": "\"docker.io\""}, {"name": "alb_certificate_arn", "description": "The AWS certificate ARN, required for an ALB via HTTPS. The certificate should be available in the same zone.", "default": "\"\""}, {"name": "health_check_path", "description": "The url path part for the health check endpoint.", "default": "\"/\""}, {"name": "enable_monitoring", "description": "If true monitoring alerts will be created if needed.", "default": "true"}, {"name": "desired_count", "description": "The number of desired tasks", "default": "\"1\""}, {"name": "project", "description": "Project cost center / cost allocation.", "default": ""}, {"name": "docker_image_tag", "description": "The docker image version (e.g. 1.0.0 or latest).", "default": "\"latest\""}, {"name": "enable_alb", "description": "If true an ALB is created.", "default": "false"}, {"name": "health_check_grace_period_seconds", "description": "Seconds to ignore failing load balancer health checks on newly instantiated tasks to prevent premature shutdown, up to 1800. Only valid for services configured to use load balancers.", "default": "\"0\""}, {"name": "enable_dns", "description": "Enable creation of DNS record.", "default": "true"}, {"name": "vpc_id", "description": "The VPC to launch the ALB in in (e.g. vpc-66ecaa02).", "default": "\"\""}, {"name": "monitoring_sns_topic_arn", "description": "ARN for the SNS topic to send alerts to.", "default": "\"\""}, {"name": "docker_logging_config", "description": "The configuration for docker container logging", "default": "\"\""}, {"name": "alb_protocol", "description": "Defines the ALB protocol to be used.", "default": "\"HTTPS\""}, {"name": "volumes", "description": "Defines the volumes that can be mounted to a container.", "default": "[]"}, {"name": "environment", "description": "Name of the environment (e.g. project-dev); will be prefixed to all resources.", "default": ""}, {"name": "ecs_cluster_id", "description": "The id of the ECS cluster where this service will be launched.", "default": ""}, {"name": "container_cpu", "description": "CPU shares to be assigned to the container.", "default": "\"\""}, {"name": "docker_environment_vars", "description": "A JSON formated array of tuples of docker enviroment variables.", "default": "\"\""}, {"name": "container_ssl_enabled", "description": "Set to true if container has SSL enabled. This requires that the container can handle HTTPS traffic.", "default": "false"}, {"name": "container_port", "description": "The container port to be exported to the host.", "default": ""}, {"name": "subnet_ids", "description": "Comma separated list with subnet itd.", "default": "\"\""}, {"name": "container_memory", "description": "Memory to be assigned to the container.", "default": "\"400\""}, {"name": "service_name", "description": "Name of the service to be created.", "default": ""}, {"name": "tags", "description": "A map of tags to add to the resources", "default": "{}"}, {"name": "docker_image", "description": "Name of te docker image.", "default": ""}, {"name": "alb_port", "description": "Defines to port for the ALB.", "default": "443"}, {"name": "health_check_matcher", "description": "HTTP result code used for health validation.", "default": "\"200-399\""}, {"name": "health_check_interval", "description": "The approximate amount of time, in seconds, between health checks of an individual target. Minimum value 5 seconds, Maximum value 300 seconds. Default 30 seconds.", "default": "\"30\""}, {"name": "ecs_service_role", "description": "ECS service role.", "default": "\"\""}, {"name": "dns_name", "description": "The name DNS name.", "default": "\"\""}, {"name": "docker_mount_points", "description": "Defines the the mount point for the container.", "default": "\"\""}, {"name": "dns_zone_id", "description": "The ID of the DNS zone.", "default": "\"\""}, {"name": "internal_alb", "description": "If true this ALB is only available within the VPC, default (false) is publicly accessable (internetfacing).", "default": "false"}, {"name": "ecs_cluster_name", "description": "The name of the ECS cluster where this service will be launched.", "default": ""}]}, "opencopilot/traefik/packet": {"name": "traefik", "url": "https://registry.terraform.io/modules/opencopilot/traefik/packet", "provider": "packet", "downloads": 0, "description": "Terraform module for running traefik on Packet with backends configured via device tags, and elastic IPs added automatically", "source": "opencopilot/traefik/packet", "args": [{"name": "count", "description": "How many load balancer instances to provision. Coming soon: HA with Packet BGP", "default": "1"}, {"name": "hostname", "description": "The hostname of the device", "default": "\"\""}, {"name": "project_id", "description": "The Packet project id this load balancer will be deployed in", "default": ""}, {"name": "backend_tag", "description": "The tag the sidecar container will look for devices on to route to as backends", "default": "\"traefik-backend\""}, {"name": "facility", "description": "The Packet datacenter to provision in", "default": ""}, {"name": "plan", "description": "The Packet plan/server type to provision for this load balancer", "default": ""}, {"name": "os_version", "description": "OS version, current opions are `coreos_stable` and `ubuntu_16_04`", "default": "\"coreos_stable\""}, {"name": "lets_encrypt_email", "description": "The email to use for Let's Encrypt", "default": ""}, {"name": "packet_token", "description": "A Packet API token. Ideally this dependence will be removed when Packet metadata can provide more info", "default": ""}]}}