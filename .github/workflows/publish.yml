name: Publish release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

jobs:
  build:
    name: Package
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: win32
            arch: x64
            npm_config_arch: x64
            target: win32-x64
          - os: windows-latest
            platform: win32
            arch: ia32
            npm_config_arch: ia32
            target: win32-ia32
          # - os: windows-latest
          #   platform: win32
          #   arch: arm64
          #   npm_config_arch: arm
          #   target: win32-arm64
          - os: ubuntu-latest
            platform: linux
            arch: x64
            npm_config_arch: x64
            target: linux-x64
          - os: ubuntu-latest
            platform: linux
            arch: arm64
            npm_config_arch: arm64
            target: linux-arm64
          - os: ubuntu-latest
            platform: linux
            arch: armhf
            npm_config_arch: arm
            target: linux-armhf
          - os: macos-latest
            platform: darwin
            arch: x64
            npm_config_arch: x64
            target: darwin-x64
          - os: macos-latest
            platform: darwin
            arch: arm64
            npm_config_arch: arm64
            target: darwin-arm64
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Read extension version
        id: ext-version
        shell: bash
        run: |
          content=`cat ./package.json | jq -r .version`
          echo "::set-output name=content::$content"
      - name: Ensure version matches with tag
        if: ${{ github.ref != format('refs/tags/v{0}', steps.ext-version.outputs.content) }}
        run: |
          echo "Version mismatch!"
          echo "Received ref: ${{ github.ref }}"
          echo "Expected ref: refs/tags/v${{ steps.ext-version.outputs.content }}"
          exit 1
      - uses: actions/setup-node@v2
        with:
          node-version-file: '.nvmrc'
      - name: Install dependencies
        run: npm ci
        env:
          npm_config_arch: ${{ matrix.npm_config_arch }}
      - name: Package VSIX
        run: npm run package -- --target=${{ matrix.target }}
        env:
          target: ${{ matrix.target }}
      - name: Upload vsix as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.target }}
          path: "*.vsix"

  publish:
    name: Publish All
    runs-on: ubuntu-latest
    needs: build
    if: success() && startsWith( github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v2
      - name: Publish Extension
        run: npx vsce publish --no-git-tag-version --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
