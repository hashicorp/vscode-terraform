name: Publish Preview release

on:
  schedule:
    # run every day at 00:15 UTC to avoid high load times at the start of every hour
    - cron: "15 0 * * *"

jobs:
  build:
    name: Package
    strategy:
      matrix:
        include:
          - vsce_target: win32-x64
            ls_target: windows_amd64
            platform: win32
            arch: x64
            npm_config_arch: x64
          - vsce_target: win32-ia32
            ls_target: windows_386
            platform: win32
            arch: ia32
            npm_config_arch: ia32
          - vsce_target: win32-arm64
            ls_target: windows_arm64
            platform: win32
            arch: arm64
            npm_config_arch: arm
          - vsce_target: linux-x64
            ls_target: linux_amd64
            platform: linux
            arch: x64
            npm_config_arch: x64
          - vsce_target: linux-arm64
            ls_target: linux_arm64
            platform: linux
            arch: arm64
            npm_config_arch: arm64
          - vsce_target: linux-armhf
            ls_target: linux_arm
            platform: linux
            arch: armhf
            npm_config_arch: arm
          - vsce_target: darwin-x64
            ls_target: darwin_amd64
            platform: darwin
            arch: x64
            npm_config_arch: x64
          - vsce_target: darwin-arm64
            ls_target: darwin_arm64
            platform: darwin
            arch: arm64
            npm_config_arch: arm64
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set preview in package.json
        id: set-preview
        run: |
          ./build/preview
      - name: Read extension version
        id: ext-version
        run: |
          content=`cat ./package.json | jq -r .version`
          echo "::set-output name=content::$content"
      - uses: actions/setup-node@v2
        with:
          node-version-file: ".nvmrc"
      - name: Install dependencies
        run: npm ci
        env:
          npm_config_arch: ${{ matrix.npm_config_arch }}
      - name: Set preview in package.json
        id: set-preview
        run: npm run preview
      - name: Package VSIX
        run: npm run package -- --target=${{ matrix.vsce_target }}
        env:
          ls_target: ${{ matrix.ls_target }}
      - name: Upload vsix as artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.vsce_target }}
          path: "*.vsix"
      - name: Check latest published version
        shell: bash
        run: |
          export EXTENSION_ID=`cat package.json | jq -r '.publisher + "." + .name'`
          npx -- vsce show --json $EXTENSION_ID | jq '.versions[0]'

  publish:
    name: Publish All
    runs-on: ubuntu-latest
    needs: build
    if: success() && startsWith( github.ref, 'refs/tags/v')
    steps:
      - uses: actions/download-artifact@v2
      - name: Publish Preview Extension
        run: npx vsce publish --no-git-tag-version --packagePath $(find . -iname *.vsix)
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
